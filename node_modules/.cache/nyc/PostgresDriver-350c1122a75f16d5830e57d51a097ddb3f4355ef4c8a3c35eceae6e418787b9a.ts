"use strict";function cov_20dyrbaeud(){var path="/home/nemo/work/github/typeorm-model-generator/src/drivers/PostgresDriver.ts";var hash="e743bb9af77dce159422a13a7fd461cd4b8bb9a0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nemo/work/github/typeorm-model-generator/src/drivers/PostgresDriver.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:22},end:{line:3,column:71}},"2":{start:{line:4,column:18},end:{line:4,column:37}},"3":{start:{line:5,column:25},end:{line:5,column:52}},"4":{start:{line:8,column:8},end:{line:8,column:16}},"5":{start:{line:9,column:8},end:{line:11,column:28}},"6":{start:{line:12,column:8},end:{line:12,column:33}},"7":{start:{line:13,column:8},end:{line:13,column:39}},"8":{start:{line:14,column:8},end:{line:14,column:39}},"9":{start:{line:15,column:8},end:{line:21,column:10}},"10":{start:{line:16,column:35},end:{line:18,column:20}},"11":{start:{line:19,column:29},end:{line:19,column:270}},"12":{start:{line:20,column:12},end:{line:20,column:28}},"13":{start:{line:22,column:8},end:{line:29,column:9}},"14":{start:{line:24,column:12},end:{line:24,column:36}},"15":{start:{line:27,column:12},end:{line:27,column:49}},"16":{start:{line:28,column:12},end:{line:28,column:24}},"17":{start:{line:32,column:25},end:{line:54,column:44}},"18":{start:{line:55,column:8},end:{line:123,column:11}},"19":{start:{line:56,column:12},end:{line:122,column:15}},"20":{start:{line:57,column:39},end:{line:57,column:75}},"21":{start:{line:59,column:32},end:{line:59,column:48}},"22":{start:{line:60,column:32},end:{line:62,column:17}},"23":{start:{line:63,column:16},end:{line:64,column:44}},"24":{start:{line:64,column:20},end:{line:64,column:44}},"25":{start:{line:65,column:16},end:{line:66,column:42}},"26":{start:{line:66,column:20},end:{line:66,column:42}},"27":{start:{line:67,column:34},end:{line:67,column:78}},"28":{start:{line:68,column:37},end:{line:70,column:100}},"29":{start:{line:71,column:36},end:{line:71,column:105}},"30":{start:{line:72,column:16},end:{line:81,column:17}},"31":{start:{line:73,column:20},end:{line:79,column:21}},"32":{start:{line:75,column:24},end:{line:75,column:166}},"33":{start:{line:78,column:24},end:{line:78,column:149}},"34":{start:{line:80,column:20},end:{line:80,column:27}},"35":{start:{line:82,column:35},end:{line:82,column:54}},"36":{start:{line:83,column:30},end:{line:83,column:48}},"37":{start:{line:84,column:16},end:{line:85,column:41}},"38":{start:{line:85,column:20},end:{line:85,column:41}},"39":{start:{line:86,column:16},end:{line:87,column:58}},"40":{start:{line:87,column:20},end:{line:87,column:58}},"41":{start:{line:88,column:16},end:{line:93,column:17}},"42":{start:{line:89,column:20},end:{line:92,column:37}},"43":{start:{line:91,column:36},end:{line:91,column:68}},"44":{start:{line:94,column:16},end:{line:101,column:17}},"45":{start:{line:94,column:62},end:{line:94,column:78}},"46":{start:{line:95,column:20},end:{line:97,column:21}},"47":{start:{line:96,column:24},end:{line:96,column:67}},"48":{start:{line:98,column:20},end:{line:100,column:21}},"49":{start:{line:99,column:24},end:{line:99,column:59}},"50":{start:{line:102,column:16},end:{line:107,column:17}},"51":{start:{line:102,column:59},end:{line:102,column:75}},"52":{start:{line:103,column:20},end:{line:106,column:40}},"53":{start:{line:108,column:16},end:{line:113,column:17}},"54":{start:{line:108,column:58},end:{line:108,column:74}},"55":{start:{line:109,column:20},end:{line:112,column:40}},"56":{start:{line:114,column:16},end:{line:121,column:19}},"57":{start:{line:124,column:8},end:{line:124,column:24}},"58":{start:{line:127,column:18},end:{line:132,column:9}},"59":{start:{line:133,column:8},end:{line:342,column:9}},"60":{start:{line:135,column:16},end:{line:135,column:38}},"61":{start:{line:136,column:16},end:{line:136,column:22}},"62":{start:{line:138,column:16},end:{line:138,column:38}},"63":{start:{line:139,column:16},end:{line:139,column:22}},"64":{start:{line:141,column:16},end:{line:141,column:38}},"65":{start:{line:142,column:16},end:{line:142,column:22}},"66":{start:{line:144,column:16},end:{line:144,column:38}},"67":{start:{line:145,column:16},end:{line:145,column:22}},"68":{start:{line:147,column:16},end:{line:147,column:38}},"69":{start:{line:148,column:16},end:{line:148,column:22}},"70":{start:{line:150,column:16},end:{line:150,column:38}},"71":{start:{line:151,column:16},end:{line:151,column:22}},"72":{start:{line:153,column:16},end:{line:153,column:38}},"73":{start:{line:154,column:16},end:{line:154,column:22}},"74":{start:{line:156,column:16},end:{line:156,column:38}},"75":{start:{line:157,column:16},end:{line:157,column:22}},"76":{start:{line:159,column:16},end:{line:159,column:38}},"77":{start:{line:160,column:16},end:{line:160,column:22}},"78":{start:{line:162,column:16},end:{line:162,column:38}},"79":{start:{line:163,column:16},end:{line:163,column:22}},"80":{start:{line:165,column:16},end:{line:165,column:38}},"81":{start:{line:166,column:16},end:{line:166,column:22}},"82":{start:{line:168,column:16},end:{line:168,column:38}},"83":{start:{line:169,column:16},end:{line:169,column:22}},"84":{start:{line:171,column:16},end:{line:171,column:38}},"85":{start:{line:172,column:16},end:{line:172,column:22}},"86":{start:{line:174,column:16},end:{line:174,column:38}},"87":{start:{line:175,column:16},end:{line:175,column:22}},"88":{start:{line:177,column:16},end:{line:177,column:38}},"89":{start:{line:178,column:16},end:{line:178,column:22}},"90":{start:{line:180,column:16},end:{line:180,column:38}},"91":{start:{line:181,column:16},end:{line:181,column:22}},"92":{start:{line:183,column:16},end:{line:183,column:38}},"93":{start:{line:184,column:16},end:{line:184,column:22}},"94":{start:{line:186,column:16},end:{line:186,column:38}},"95":{start:{line:187,column:16},end:{line:187,column:22}},"96":{start:{line:189,column:16},end:{line:189,column:37}},"97":{start:{line:190,column:16},end:{line:190,column:38}},"98":{start:{line:191,column:16},end:{line:191,column:22}},"99":{start:{line:193,column:16},end:{line:193,column:38}},"100":{start:{line:194,column:16},end:{line:194,column:22}},"101":{start:{line:196,column:16},end:{line:196,column:38}},"102":{start:{line:197,column:16},end:{line:197,column:22}},"103":{start:{line:199,column:16},end:{line:199,column:38}},"104":{start:{line:200,column:16},end:{line:200,column:22}},"105":{start:{line:202,column:16},end:{line:202,column:38}},"106":{start:{line:203,column:16},end:{line:203,column:22}},"107":{start:{line:205,column:16},end:{line:205,column:38}},"108":{start:{line:206,column:16},end:{line:206,column:22}},"109":{start:{line:208,column:16},end:{line:208,column:38}},"110":{start:{line:209,column:16},end:{line:209,column:22}},"111":{start:{line:211,column:16},end:{line:211,column:38}},"112":{start:{line:212,column:16},end:{line:212,column:22}},"113":{start:{line:214,column:16},end:{line:214,column:38}},"114":{start:{line:215,column:16},end:{line:215,column:22}},"115":{start:{line:217,column:16},end:{line:217,column:36}},"116":{start:{line:218,column:16},end:{line:218,column:22}},"117":{start:{line:220,column:16},end:{line:220,column:38}},"118":{start:{line:221,column:16},end:{line:221,column:22}},"119":{start:{line:223,column:16},end:{line:223,column:36}},"120":{start:{line:224,column:16},end:{line:224,column:22}},"121":{start:{line:226,column:16},end:{line:226,column:36}},"122":{start:{line:227,column:16},end:{line:227,column:22}},"123":{start:{line:229,column:16},end:{line:229,column:38}},"124":{start:{line:230,column:16},end:{line:230,column:22}},"125":{start:{line:232,column:16},end:{line:232,column:38}},"126":{start:{line:233,column:16},end:{line:233,column:22}},"127":{start:{line:235,column:16},end:{line:235,column:38}},"128":{start:{line:236,column:16},end:{line:236,column:22}},"129":{start:{line:238,column:16},end:{line:238,column:38}},"130":{start:{line:239,column:16},end:{line:239,column:22}},"131":{start:{line:241,column:16},end:{line:241,column:35}},"132":{start:{line:242,column:16},end:{line:242,column:22}},"133":{start:{line:244,column:16},end:{line:244,column:39}},"134":{start:{line:245,column:16},end:{line:245,column:22}},"135":{start:{line:247,column:16},end:{line:247,column:39}},"136":{start:{line:248,column:16},end:{line:248,column:22}},"137":{start:{line:250,column:16},end:{line:250,column:47}},"138":{start:{line:251,column:16},end:{line:251,column:22}},"139":{start:{line:253,column:16},end:{line:253,column:38}},"140":{start:{line:254,column:16},end:{line:254,column:22}},"141":{start:{line:256,column:16},end:{line:256,column:49}},"142":{start:{line:257,column:16},end:{line:257,column:22}},"143":{start:{line:259,column:16},end:{line:259,column:47}},"144":{start:{line:260,column:16},end:{line:260,column:22}},"145":{start:{line:262,column:16},end:{line:262,column:38}},"146":{start:{line:263,column:16},end:{line:263,column:22}},"147":{start:{line:265,column:16},end:{line:265,column:38}},"148":{start:{line:266,column:16},end:{line:266,column:22}},"149":{start:{line:268,column:16},end:{line:268,column:47}},"150":{start:{line:269,column:16},end:{line:269,column:22}},"151":{start:{line:271,column:16},end:{line:271,column:38}},"152":{start:{line:272,column:16},end:{line:272,column:22}},"153":{start:{line:274,column:16},end:{line:274,column:38}},"154":{start:{line:275,column:16},end:{line:275,column:22}},"155":{start:{line:277,column:16},end:{line:277,column:38}},"156":{start:{line:278,column:16},end:{line:278,column:22}},"157":{start:{line:280,column:16},end:{line:280,column:38}},"158":{start:{line:281,column:16},end:{line:281,column:22}},"159":{start:{line:283,column:16},end:{line:283,column:38}},"160":{start:{line:284,column:16},end:{line:284,column:22}},"161":{start:{line:286,column:16},end:{line:286,column:38}},"162":{start:{line:287,column:16},end:{line:287,column:22}},"163":{start:{line:289,column:16},end:{line:289,column:38}},"164":{start:{line:290,column:16},end:{line:290,column:22}},"165":{start:{line:292,column:16},end:{line:292,column:38}},"166":{start:{line:293,column:16},end:{line:293,column:22}},"167":{start:{line:295,column:16},end:{line:295,column:38}},"168":{start:{line:296,column:16},end:{line:296,column:22}},"169":{start:{line:298,column:16},end:{line:298,column:38}},"170":{start:{line:299,column:16},end:{line:299,column:22}},"171":{start:{line:301,column:16},end:{line:301,column:38}},"172":{start:{line:302,column:16},end:{line:302,column:22}},"173":{start:{line:304,column:16},end:{line:304,column:38}},"174":{start:{line:305,column:16},end:{line:305,column:22}},"175":{start:{line:307,column:16},end:{line:307,column:38}},"176":{start:{line:308,column:16},end:{line:308,column:22}},"177":{start:{line:310,column:16},end:{line:310,column:38}},"178":{start:{line:311,column:16},end:{line:311,column:22}},"179":{start:{line:313,column:16},end:{line:313,column:38}},"180":{start:{line:314,column:16},end:{line:314,column:22}},"181":{start:{line:316,column:16},end:{line:316,column:87}},"182":{start:{line:317,column:16},end:{line:317,column:35}},"183":{start:{line:318,column:16},end:{line:318,column:22}},"184":{start:{line:320,column:16},end:{line:320,column:38}},"185":{start:{line:321,column:16},end:{line:337,column:17}},"186":{start:{line:326,column:24},end:{line:326,column:46}},"187":{start:{line:327,column:24},end:{line:327,column:30}},"188":{start:{line:329,column:24},end:{line:335,column:25}},"189":{start:{line:330,column:28},end:{line:332,column:50}},"190":{start:{line:333,column:28},end:{line:333,column:49}},"191":{start:{line:334,column:28},end:{line:334,column:67}},"192":{start:{line:336,column:24},end:{line:336,column:30}},"193":{start:{line:338,column:16},end:{line:338,column:22}},"194":{start:{line:340,column:16},end:{line:340,column:52}},"195":{start:{line:341,column:16},end:{line:341,column:22}},"196":{start:{line:343,column:8},end:{line:343,column:19}},"197":{start:{line:346,column:25},end:{line:369,column:45}},"198":{start:{line:370,column:29},end:{line:380,column:20}},"199":{start:{line:381,column:22},end:{line:381,column:24}},"200":{start:{line:382,column:8},end:{line:386,column:11}},"201":{start:{line:383,column:12},end:{line:384,column:42}},"202":{start:{line:384,column:16},end:{line:384,column:42}},"203":{start:{line:385,column:12},end:{line:385,column:68}},"204":{start:{line:387,column:8},end:{line:407,column:11}},"205":{start:{line:388,column:34},end:{line:388,column:101}},"206":{start:{line:388,column:65},end:{line:388,column:100}},"207":{start:{line:389,column:31},end:{line:389,column:77}},"208":{start:{line:389,column:64},end:{line:389,column:75}},"209":{start:{line:390,column:12},end:{line:406,column:15}},"210":{start:{line:391,column:32},end:{line:391,column:86}},"211":{start:{line:391,column:60},end:{line:391,column:85}},"212":{start:{line:392,column:34},end:{line:396,column:17}},"213":{start:{line:397,column:16},end:{line:398,column:45}},"214":{start:{line:398,column:20},end:{line:398,column:45}},"215":{start:{line:399,column:16},end:{line:400,column:52}},"216":{start:{line:400,column:20},end:{line:400,column:52}},"217":{start:{line:401,column:16},end:{line:401,column:95}},"218":{start:{line:402,column:16},end:{line:404,column:19}},"219":{start:{line:403,column:20},end:{line:403,column:106}},"220":{start:{line:405,column:16},end:{line:405,column:44}},"221":{start:{line:408,column:8},end:{line:408,column:24}},"222":{start:{line:411,column:25},end:{line:450,column:24}},"223":{start:{line:451,column:30},end:{line:451,column:32}},"224":{start:{line:452,column:29},end:{line:452,column:70}},"225":{start:{line:452,column:57},end:{line:452,column:68}},"226":{start:{line:453,column:8},end:{line:478,column:11}},"227":{start:{line:454,column:25},end:{line:454,column:75}},"228":{start:{line:454,column:48},end:{line:454,column:74}},"229":{start:{line:455,column:31},end:{line:455,column:94}},"230":{start:{line:455,column:52},end:{line:455,column:93}},"231":{start:{line:456,column:33},end:{line:456,column:92}},"232":{start:{line:456,column:54},end:{line:456,column:91}},"233":{start:{line:457,column:12},end:{line:460,column:13}},"234":{start:{line:458,column:16},end:{line:458,column:160}},"235":{start:{line:459,column:16},end:{line:459,column:23}},"236":{start:{line:461,column:29},end:{line:466,column:13}},"237":{start:{line:467,column:12},end:{line:469,column:13}},"238":{start:{line:468,column:16},end:{line:468,column:53}},"239":{start:{line:470,column:12},end:{line:472,column:13}},"240":{start:{line:471,column:16},end:{line:471,column:53}},"241":{start:{line:473,column:12},end:{line:476,column:15}},"242":{start:{line:474,column:16},end:{line:474,column:65}},"243":{start:{line:475,column:16},end:{line:475,column:77}},"244":{start:{line:477,column:12},end:{line:477,column:41}},"245":{start:{line:479,column:23},end:{line:479,column:114}},"246":{start:{line:480,column:8},end:{line:480,column:22}},"247":{start:{line:483,column:8},end:{line:496,column:9}},"248":{start:{line:484,column:28},end:{line:494,column:14}},"249":{start:{line:485,column:16},end:{line:493,column:19}},"250":{start:{line:486,column:20},end:{line:492,column:21}},"251":{start:{line:487,column:24},end:{line:487,column:38}},"252":{start:{line:490,column:24},end:{line:490,column:111}},"253":{start:{line:491,column:24},end:{line:491,column:36}},"254":{start:{line:495,column:12},end:{line:495,column:26}},"255":{start:{line:499,column:8},end:{line:508,column:11}},"256":{start:{line:509,column:24},end:{line:519,column:10}},"257":{start:{line:510,column:12},end:{line:518,column:15}},"258":{start:{line:511,column:16},end:{line:517,column:17}},"259":{start:{line:512,column:20},end:{line:512,column:34}},"260":{start:{line:515,column:20},end:{line:515,column:99}},"261":{start:{line:516,column:20},end:{line:516,column:32}},"262":{start:{line:520,column:8},end:{line:520,column:22}},"263":{start:{line:523,column:8},end:{line:523,column:67}},"264":{start:{line:526,column:8},end:{line:526,column:55}},"265":{start:{line:529,column:8},end:{line:529,column:65}},"266":{start:{line:532,column:21},end:{line:532,column:113}},"267":{start:{line:533,column:8},end:{line:533,column:33}},"268":{start:{line:536,column:27},end:{line:536,column:33}},"269":{start:{line:537,column:8},end:{line:539,column:9}},"270":{start:{line:538,column:12},end:{line:538,column:29}},"271":{start:{line:540,column:8},end:{line:540,column:62}},"272":{start:{line:541,column:8},end:{line:543,column:9}},"273":{start:{line:541,column:42},end:{line:541,column:56}},"274":{start:{line:542,column:12},end:{line:542,column:71}},"275":{start:{line:544,column:8},end:{line:544,column:41}},"276":{start:{line:547,column:0},end:{line:547,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:4},end:{line:7,column:5}},loc:{start:{line:7,column:18},end:{line:30,column:5}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:33},end:{line:15,column:34}},loc:{start:{line:15,column:72},end:{line:21,column:9}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:4},end:{line:31,column:5}},loc:{start:{line:31,column:49},end:{line:125,column:5}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:55,column:25},end:{line:55,column:26}},loc:{start:{line:55,column:34},end:{line:123,column:9}},line:55},"4":{name:"(anonymous_4)",decl:{start:{line:57,column:24},end:{line:57,column:25}},loc:{start:{line:57,column:39},end:{line:57,column:75}},line:57},"5":{name:"(anonymous_5)",decl:{start:{line:58,column:25},end:{line:58,column:26}},loc:{start:{line:58,column:35},end:{line:122,column:13}},line:58},"6":{name:"(anonymous_6)",decl:{start:{line:91,column:29},end:{line:91,column:30}},loc:{start:{line:91,column:36},end:{line:91,column:68}},line:91},"7":{name:"(anonymous_7)",decl:{start:{line:94,column:55},end:{line:94,column:56}},loc:{start:{line:94,column:62},end:{line:94,column:78}},line:94},"8":{name:"(anonymous_8)",decl:{start:{line:102,column:52},end:{line:102,column:53}},loc:{start:{line:102,column:59},end:{line:102,column:75}},line:102},"9":{name:"(anonymous_9)",decl:{start:{line:108,column:51},end:{line:108,column:52}},loc:{start:{line:108,column:58},end:{line:108,column:74}},line:108},"10":{name:"(anonymous_10)",decl:{start:{line:126,column:4},end:{line:126,column:5}},loc:{start:{line:126,column:52},end:{line:344,column:5}},line:126},"11":{name:"(anonymous_11)",decl:{start:{line:345,column:4},end:{line:345,column:5}},loc:{start:{line:345,column:49},end:{line:409,column:5}},line:345},"12":{name:"(anonymous_12)",decl:{start:{line:382,column:29},end:{line:382,column:30}},loc:{start:{line:382,column:38},end:{line:386,column:9}},line:382},"13":{name:"(anonymous_13)",decl:{start:{line:387,column:25},end:{line:387,column:26}},loc:{start:{line:387,column:34},end:{line:407,column:9}},line:387},"14":{name:"(anonymous_14)",decl:{start:{line:388,column:50},end:{line:388,column:51}},loc:{start:{line:388,column:65},end:{line:388,column:100}},line:388},"15":{name:"(anonymous_15)",decl:{start:{line:389,column:57},end:{line:389,column:58}},loc:{start:{line:389,column:64},end:{line:389,column:75}},line:389},"16":{name:"(anonymous_16)",decl:{start:{line:390,column:31},end:{line:390,column:32}},loc:{start:{line:390,column:46},end:{line:406,column:13}},line:390},"17":{name:"(anonymous_17)",decl:{start:{line:391,column:53},end:{line:391,column:54}},loc:{start:{line:391,column:60},end:{line:391,column:85}},line:391},"18":{name:"(anonymous_18)",decl:{start:{line:402,column:32},end:{line:402,column:33}},loc:{start:{line:402,column:44},end:{line:404,column:17}},line:402},"19":{name:"(anonymous_19)",decl:{start:{line:410,column:4},end:{line:410,column:5}},loc:{start:{line:410,column:69},end:{line:481,column:5}},line:410},"20":{name:"(anonymous_20)",decl:{start:{line:452,column:50},end:{line:452,column:51}},loc:{start:{line:452,column:57},end:{line:452,column:68}},line:452},"21":{name:"(anonymous_21)",decl:{start:{line:453,column:29},end:{line:453,column:30}},loc:{start:{line:453,column:45},end:{line:478,column:9}},line:453},"22":{name:"(anonymous_22)",decl:{start:{line:454,column:41},end:{line:454,column:42}},loc:{start:{line:454,column:48},end:{line:454,column:74}},line:454},"23":{name:"(anonymous_23)",decl:{start:{line:455,column:45},end:{line:455,column:46}},loc:{start:{line:455,column:52},end:{line:455,column:93}},line:455},"24":{name:"(anonymous_24)",decl:{start:{line:456,column:47},end:{line:456,column:48}},loc:{start:{line:456,column:54},end:{line:456,column:91}},line:456},"25":{name:"(anonymous_25)",decl:{start:{line:473,column:25},end:{line:473,column:26}},loc:{start:{line:473,column:34},end:{line:476,column:13}},line:473},"26":{name:"(anonymous_26)",decl:{start:{line:482,column:4},end:{line:482,column:5}},loc:{start:{line:482,column:33},end:{line:497,column:5}},line:482},"27":{name:"(anonymous_27)",decl:{start:{line:484,column:40},end:{line:484,column:41}},loc:{start:{line:484,column:61},end:{line:494,column:13}},line:484},"28":{name:"(anonymous_28)",decl:{start:{line:485,column:36},end:{line:485,column:37}},loc:{start:{line:485,column:45},end:{line:493,column:17}},line:485},"29":{name:"(anonymous_29)",decl:{start:{line:498,column:4},end:{line:498,column:5}},loc:{start:{line:498,column:44},end:{line:521,column:5}},line:498},"30":{name:"(anonymous_30)",decl:{start:{line:509,column:36},end:{line:509,column:37}},loc:{start:{line:509,column:57},end:{line:519,column:9}},line:509},"31":{name:"(anonymous_31)",decl:{start:{line:510,column:36},end:{line:510,column:37}},loc:{start:{line:510,column:45},end:{line:518,column:13}},line:510},"32":{name:"(anonymous_32)",decl:{start:{line:522,column:4},end:{line:522,column:5}},loc:{start:{line:522,column:27},end:{line:524,column:5}},line:522},"33":{name:"(anonymous_33)",decl:{start:{line:525,column:4},end:{line:525,column:5}},loc:{start:{line:525,column:24},end:{line:527,column:5}},line:525},"34":{name:"(anonymous_34)",decl:{start:{line:528,column:4},end:{line:528,column:5}},loc:{start:{line:528,column:25},end:{line:530,column:5}},line:528},"35":{name:"(anonymous_35)",decl:{start:{line:531,column:4},end:{line:531,column:5}},loc:{start:{line:531,column:34},end:{line:534,column:5}},line:531},"36":{name:"(anonymous_36)",decl:{start:{line:535,column:4},end:{line:535,column:5}},loc:{start:{line:535,column:56},end:{line:545,column:5}},line:535},"37":{name:"(anonymous_37)",decl:{start:{line:541,column:35},end:{line:541,column:36}},loc:{start:{line:541,column:42},end:{line:541,column:56}},line:541}},branchMap:{"0":{loc:{start:{line:16,column:35},end:{line:18,column:20}},type:"cond-expr",locations:[{start:{line:17,column:18},end:{line:17,column:72}},{start:{line:18,column:18},end:{line:18,column:20}}],line:16},"1":{loc:{start:{line:63,column:16},end:{line:64,column:44}},type:"if",locations:[{start:{line:63,column:16},end:{line:64,column:44}},{start:{line:63,column:16},end:{line:64,column:44}}],line:63},"2":{loc:{start:{line:65,column:16},end:{line:66,column:42}},type:"if",locations:[{start:{line:65,column:16},end:{line:66,column:42}},{start:{line:65,column:16},end:{line:66,column:42}}],line:65},"3":{loc:{start:{line:67,column:34},end:{line:67,column:78}},type:"cond-expr",locations:[{start:{line:67,column:62},end:{line:67,column:66}},{start:{line:67,column:69},end:{line:67,column:78}}],line:67},"4":{loc:{start:{line:68,column:37},end:{line:70,column:100}},type:"cond-expr",locations:[{start:{line:69,column:22},end:{line:69,column:31}},{start:{line:70,column:22},end:{line:70,column:100}}],line:68},"5":{loc:{start:{line:72,column:16},end:{line:81,column:17}},type:"if",locations:[{start:{line:72,column:16},end:{line:81,column:17}},{start:{line:72,column:16},end:{line:81,column:17}}],line:72},"6":{loc:{start:{line:73,column:20},end:{line:79,column:21}},type:"if",locations:[{start:{line:73,column:20},end:{line:79,column:21}},{start:{line:73,column:20},end:{line:79,column:21}}],line:73},"7":{loc:{start:{line:73,column:24},end:{line:74,column:50}},type:"binary-expr",locations:[{start:{line:73,column:24},end:{line:73,column:57}},{start:{line:74,column:24},end:{line:74,column:50}}],line:73},"8":{loc:{start:{line:84,column:16},end:{line:85,column:41}},type:"if",locations:[{start:{line:84,column:16},end:{line:85,column:41}},{start:{line:84,column:16},end:{line:85,column:41}}],line:84},"9":{loc:{start:{line:86,column:16},end:{line:87,column:58}},type:"if",locations:[{start:{line:86,column:16},end:{line:87,column:58}},{start:{line:86,column:16},end:{line:87,column:58}}],line:86},"10":{loc:{start:{line:88,column:16},end:{line:93,column:17}},type:"if",locations:[{start:{line:88,column:16},end:{line:93,column:17}},{start:{line:88,column:16},end:{line:93,column:17}}],line:88},"11":{loc:{start:{line:94,column:16},end:{line:101,column:17}},type:"if",locations:[{start:{line:94,column:16},end:{line:101,column:17}},{start:{line:94,column:16},end:{line:101,column:17}}],line:94},"12":{loc:{start:{line:95,column:20},end:{line:97,column:21}},type:"if",locations:[{start:{line:95,column:20},end:{line:97,column:21}},{start:{line:95,column:20},end:{line:97,column:21}}],line:95},"13":{loc:{start:{line:98,column:20},end:{line:100,column:21}},type:"if",locations:[{start:{line:98,column:20},end:{line:100,column:21}},{start:{line:98,column:20},end:{line:100,column:21}}],line:98},"14":{loc:{start:{line:102,column:16},end:{line:107,column:17}},type:"if",locations:[{start:{line:102,column:16},end:{line:107,column:17}},{start:{line:102,column:16},end:{line:107,column:17}}],line:102},"15":{loc:{start:{line:104,column:24},end:{line:106,column:39}},type:"cond-expr",locations:[{start:{line:105,column:30},end:{line:105,column:59}},{start:{line:106,column:30},end:{line:106,column:39}}],line:104},"16":{loc:{start:{line:108,column:16},end:{line:113,column:17}},type:"if",locations:[{start:{line:108,column:16},end:{line:113,column:17}},{start:{line:108,column:16},end:{line:113,column:17}}],line:108},"17":{loc:{start:{line:110,column:24},end:{line:112,column:39}},type:"cond-expr",locations:[{start:{line:111,column:30},end:{line:111,column:59}},{start:{line:112,column:30},end:{line:112,column:39}}],line:110},"18":{loc:{start:{line:133,column:8},end:{line:342,column:9}},type:"switch",locations:[{start:{line:134,column:12},end:{line:136,column:22}},{start:{line:137,column:12},end:{line:139,column:22}},{start:{line:140,column:12},end:{line:142,column:22}},{start:{line:143,column:12},end:{line:145,column:22}},{start:{line:146,column:12},end:{line:148,column:22}},{start:{line:149,column:12},end:{line:151,column:22}},{start:{line:152,column:12},end:{line:154,column:22}},{start:{line:155,column:12},end:{line:157,column:22}},{start:{line:158,column:12},end:{line:160,column:22}},{start:{line:161,column:12},end:{line:163,column:22}},{start:{line:164,column:12},end:{line:166,column:22}},{start:{line:167,column:12},end:{line:169,column:22}},{start:{line:170,column:12},end:{line:172,column:22}},{start:{line:173,column:12},end:{line:175,column:22}},{start:{line:176,column:12},end:{line:178,column:22}},{start:{line:179,column:12},end:{line:181,column:22}},{start:{line:182,column:12},end:{line:184,column:22}},{start:{line:185,column:12},end:{line:187,column:22}},{start:{line:188,column:12},end:{line:191,column:22}},{start:{line:192,column:12},end:{line:194,column:22}},{start:{line:195,column:12},end:{line:197,column:22}},{start:{line:198,column:12},end:{line:200,column:22}},{start:{line:201,column:12},end:{line:203,column:22}},{start:{line:204,column:12},end:{line:206,column:22}},{start:{line:207,column:12},end:{line:209,column:22}},{start:{line:210,column:12},end:{line:212,column:22}},{start:{line:213,column:12},end:{line:215,column:22}},{start:{line:216,column:12},end:{line:218,column:22}},{start:{line:219,column:12},end:{line:221,column:22}},{start:{line:222,column:12},end:{line:224,column:22}},{start:{line:225,column:12},end:{line:227,column:22}},{start:{line:228,column:12},end:{line:230,column:22}},{start:{line:231,column:12},end:{line:233,column:22}},{start:{line:234,column:12},end:{line:236,column:22}},{start:{line:237,column:12},end:{line:239,column:22}},{start:{line:240,column:12},end:{line:242,column:22}},{start:{line:243,column:12},end:{line:245,column:22}},{start:{line:246,column:12},end:{line:248,column:22}},{start:{line:249,column:12},end:{line:251,column:22}},{start:{line:252,column:12},end:{line:254,column:22}},{start:{line:255,column:12},end:{line:257,column:22}},{start:{line:258,column:12},end:{line:260,column:22}},{start:{line:261,column:12},end:{line:263,column:22}},{start:{line:264,column:12},end:{line:266,column:22}},{start:{line:267,column:12},end:{line:269,column:22}},{start:{line:270,column:12},end:{line:272,column:22}},{start:{line:273,column:12},end:{line:275,column:22}},{start:{line:276,column:12},end:{line:278,column:22}},{start:{line:279,column:12},end:{line:281,column:22}},{start:{line:282,column:12},end:{line:284,column:22}},{start:{line:285,column:12},end:{line:287,column:22}},{start:{line:288,column:12},end:{line:290,column:22}},{start:{line:291,column:12},end:{line:293,column:22}},{start:{line:294,column:12},end:{line:296,column:22}},{start:{line:297,column:12},end:{line:299,column:22}},{start:{line:300,column:12},end:{line:302,column:22}},{start:{line:303,column:12},end:{line:305,column:22}},{start:{line:306,column:12},end:{line:308,column:22}},{start:{line:309,column:12},end:{line:311,column:22}},{start:{line:312,column:12},end:{line:314,column:22}},{start:{line:315,column:12},end:{line:318,column:22}},{start:{line:319,column:12},end:{line:338,column:22}},{start:{line:339,column:12},end:{line:341,column:22}}],line:133},"19":{loc:{start:{line:321,column:16},end:{line:337,column:17}},type:"switch",locations:[{start:{line:322,column:20},end:{line:322,column:34}},{start:{line:323,column:20},end:{line:323,column:34}},{start:{line:324,column:20},end:{line:324,column:37}},{start:{line:325,column:20},end:{line:327,column:30}},{start:{line:328,column:20},end:{line:336,column:30}}],line:321},"20":{loc:{start:{line:329,column:24},end:{line:335,column:25}},type:"if",locations:[{start:{line:329,column:24},end:{line:335,column:25}},{start:{line:329,column:24},end:{line:335,column:25}}],line:329},"21":{loc:{start:{line:383,column:12},end:{line:384,column:42}},type:"if",locations:[{start:{line:383,column:12},end:{line:384,column:42}},{start:{line:383,column:12},end:{line:384,column:42}}],line:383},"22":{loc:{start:{line:397,column:16},end:{line:398,column:45}},type:"if",locations:[{start:{line:397,column:16},end:{line:398,column:45}},{start:{line:397,column:16},end:{line:398,column:45}}],line:397},"23":{loc:{start:{line:399,column:16},end:{line:400,column:52}},type:"if",locations:[{start:{line:399,column:16},end:{line:400,column:52}},{start:{line:399,column:16},end:{line:400,column:52}}],line:399},"24":{loc:{start:{line:457,column:12},end:{line:460,column:13}},type:"if",locations:[{start:{line:457,column:12},end:{line:460,column:13}},{start:{line:457,column:12},end:{line:460,column:13}}],line:457},"25":{loc:{start:{line:457,column:16},end:{line:457,column:44}},type:"binary-expr",locations:[{start:{line:457,column:16},end:{line:457,column:27}},{start:{line:457,column:31},end:{line:457,column:44}}],line:457},"26":{loc:{start:{line:467,column:12},end:{line:469,column:13}},type:"if",locations:[{start:{line:467,column:12},end:{line:469,column:13}},{start:{line:467,column:12},end:{line:469,column:13}}],line:467},"27":{loc:{start:{line:470,column:12},end:{line:472,column:13}},type:"if",locations:[{start:{line:470,column:12},end:{line:472,column:13}},{start:{line:470,column:12},end:{line:472,column:13}}],line:470},"28":{loc:{start:{line:483,column:8},end:{line:496,column:9}},type:"if",locations:[{start:{line:483,column:8},end:{line:496,column:9}},{start:{line:483,column:8},end:{line:496,column:9}}],line:483},"29":{loc:{start:{line:486,column:20},end:{line:492,column:21}},type:"if",locations:[{start:{line:486,column:20},end:{line:492,column:21}},{start:{line:486,column:20},end:{line:492,column:21}}],line:486},"30":{loc:{start:{line:511,column:16},end:{line:517,column:17}},type:"if",locations:[{start:{line:511,column:16},end:{line:517,column:17}},{start:{line:511,column:16},end:{line:517,column:17}}],line:511},"31":{loc:{start:{line:537,column:8},end:{line:539,column:9}},type:"if",locations:[{start:{line:537,column:8},end:{line:539,column:9}},{start:{line:537,column:8},end:{line:539,column:9}}],line:537},"32":{loc:{start:{line:541,column:8},end:{line:543,column:9}},type:"if",locations:[{start:{line:541,column:8},end:{line:543,column:9}},{start:{line:541,column:8},end:{line:543,column:9}}],line:541}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"19":[0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},inputSourceMap:{version:3,file:"/home/nemo/work/github/typeorm-model-generator/src/drivers/PostgresDriver.ts",sources:["/home/nemo/work/github/typeorm-model-generator/src/drivers/PostgresDriver.ts"],names:[],mappings:";;AAEA,wEAAwE;AAExE,sCAAsC;AACtC,qDAA8C;AAQ9C,MAAqB,cAAe,SAAQ,wBAAc;IAetD;QACI,KAAK,EAAE,CAAC;QAfL,kBAAa,GAAqB,IAAI,aAAa,CAAC,cAAc,CAAC;YACtE,OAAO,EAAE,EAAE,WAAW,EAAE,SAAS,EAAuB;SACpD,CAAC,CAAC,gBAAgB,CAAC;QAEX,iBAAY,GAAG,IAAI,CAAC;QAEpB,iBAAY,GAAG,UAAU,CAAC;QAE1B,mBAAc,GAAG,QAAQ,CAAC;QAiBnC,sBAAiB,GAAG,KAAK,EAC5B,MAAc,EACd,OAAe,EACf,UAAoB,EACtB,EAAE;YACA,MAAM,cAAc,GAChB,UAAU,CAAC,MAAM,GAAG,CAAC;gBACjB,CAAC,CAAC,4BAA4B,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;gBACxD,CAAC,CAAC,EAAE,CAAC;YACb,MAAM,QAAQ,GAIR,CACF,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CACvB,kLAAkL,MAAM,KAAK,cAAc,EAAE,CAChN,CACJ,CAAC,IAAI,CAAC;YACP,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC;QA5BE,IAAI;YACA,mGAAmG;YACnG,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SAC3B;QAAC,OAAO,KAAK,EAAE;YACZ,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACrC,MAAM,KAAK,CAAC;SACf;IACL,CAAC;IAuBM,KAAK,CAAC,oBAAoB,CAC7B,QAAkB,EAClB,MAAc;QAEd,MAAM,QAAQ,GAaR,CACF,MAAM,IAAI,CAAC,UAAU;aAChB,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;6CAoBsB,MAAM;qCACd,CAAC,CAC7B,CAAC,IAAI,CAAC;QACP,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACrB,QAAQ;iBACH,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,UAAU,KAAK,GAAG,CAAC,OAAO,CAAC;iBAC3D,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACd,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;gBACjC,MAAM,OAAO,GAAsB;oBAC/B,IAAI,EAAE,IAAI,CAAC,WAAW;iBACzB,CAAC;gBACF,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK;oBAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACxD,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;oBAAE,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEjD,MAAM,SAAS,GACX,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;gBACjD,MAAM,YAAY,GAAG,SAAS;oBAC1B,CAAC,CAAC,SAAS;oBACX,CAAC,CAAC,cAAc,CAAC,0BAA0B,CACrC,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,SAAS,CACjB,CAAC;gBAER,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CACrC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,UAAU,CAClB,CAAC;gBACF,IAAI,WAAW,CAAC,MAAM,KAAK,sBAAsB,EAAE;oBAC/C,IACI,IAAI,CAAC,SAAS,KAAK,cAAc;wBACjC,IAAI,CAAC,SAAS,KAAK,OAAO,EAC5B;wBACE,SAAS,CAAC,QAAQ,CACd,WAAW,IAAI,CAAC,SAAS,iBAAiB,IAAI,CAAC,QAAQ,gBAAgB,IAAI,CAAC,UAAU,iBAAiB,IAAI,CAAC,WAAW,EAAE,CAC5H,CAAC;qBACL;yBAAM;wBACH,SAAS,CAAC,QAAQ,CACd,wBAAwB,IAAI,CAAC,SAAS,gBAAgB,IAAI,CAAC,UAAU,iBAAiB,IAAI,CAAC,WAAW,EAAE,CAC3G,CAAC;qBACL;oBACD,OAAO;iBACV;gBAED,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC;gBACvC,IAAI,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC;gBACjC,IAAI,WAAW,CAAC,OAAO;oBAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;gBAC9C,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;oBACjC,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC,UAAU,CAAC;gBAC1C,IAAI,OAAO,CAAC,KAAK,EAAE;oBACf,OAAO,GAAG,OAAO;yBACZ,KAAK,CAAC,GAAG,CAAC;yBACV,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;yBAC5C,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpB;gBAED,IACI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,UAAU,CAC1B,EACH;oBACE,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;wBACjC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;qBAC9C;oBACD,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;wBAC7B,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;qBACtC;iBACJ;gBACD,IACI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,UAAU,CAAC,EAC1D;oBACE,OAAO,CAAC,MAAM;wBACV,IAAI,CAAC,wBAAwB,GAAG,CAAC;4BAC7B,CAAC,CAAC,IAAI,CAAC,wBAAwB;4BAC/B,CAAC,CAAC,SAAS,CAAC;iBACvB;gBACD,IACI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,UAAU,CAAC,EACzD;oBACE,OAAO,CAAC,KAAK;wBACT,IAAI,CAAC,wBAAwB,GAAG,CAAC;4BAC7B,CAAC,CAAC,IAAI,CAAC,wBAAwB;4BAC/B,CAAC,CAAC,SAAS,CAAC;iBACvB;gBAED,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;oBACb,SAAS;oBACT,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,YAAY;oBACrB,OAAO;oBACP,OAAO;oBACP,OAAO;iBACV,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,gBAAgB,CACnB,QAAgB,EAChB,OAAe,EACf,UAAyB;QAEzB,IAAI,GAAG,GAKH;YACA,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,EAAE;SACjB,CAAC;QACF,QAAQ,QAAQ,EAAE;YACd,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,UAAU;gBACX,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,kBAAkB;gBACnB,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,mBAAmB;gBACpB,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,WAAW;gBACZ,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;gBACrB,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,KAAK;gBACN,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,aAAa;gBACd,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,aAAa;gBACd,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;gBACpB,MAAM;YACV,KAAK,WAAW;gBACZ,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,6BAA6B;gBAC9B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;gBACpB,MAAM;YACV,KAAK,0BAA0B;gBAC3B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;gBACpB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,wBAAwB;gBACzB,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,qBAAqB;gBACtB,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,UAAU;gBACX,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;gBACnB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC;gBACvB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC;gBACvB,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,CAAC,MAAM,GAAG,iBAAiB,CAAC;gBAC/B,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,mBAAmB,CAAC;gBACjC,MAAM;YACV,KAAK,KAAK;gBACN,GAAG,CAAC,MAAM,GAAG,iBAAiB,CAAC;gBAC/B,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,QAAQ;gBACT,GAAG,CAAC,MAAM,GAAG,iBAAiB,CAAC;gBAC/B,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,UAAU;gBACX,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,KAAK;gBACN,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,MAAM;gBACP,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,WAAW;gBACZ,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,WAAW;gBACZ,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,UAAU;gBACX,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,SAAS;gBACV,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,WAAW;gBACZ,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,WAAW;gBACZ,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,OAAO;gBACR,GAAG,GAAG,IAAI,CAAC,gBAAgB,CACvB,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EACpB,OAAO,EACP,UAAU,CACb,CAAC;gBACF,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;gBACnB,MAAM;YACV,KAAK,cAAc;gBACf,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtB,QAAQ,OAAO,EAAE;oBACb,KAAK,QAAQ,CAAC;oBACd,KAAK,QAAQ,CAAC;oBACd,KAAK,WAAW,CAAC;oBACjB,KAAK,UAAU;wBACX,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;wBACtB,MAAM;oBACV;wBACI,IAAI,UAAU,EAAE;4BACZ,GAAG,CAAC,MAAM,GAAI,IAAI,UAAU;iCACvB,KAAK,CAAC,GAAG,CAAC;iCACV,IAAI,CAAC,OAAO,CAAC,GAAuB,CAAC;4BAC1C,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;4BACrB,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;yBAC1C;wBACD,MAAM;iBACb;gBACD,MAAM;YACV;gBACI,GAAG,CAAC,MAAM,GAAG,sBAAsB,CAAC;gBACpC,MAAM;SACb;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,KAAK,CAAC,oBAAoB,CAC7B,QAAkB,EAClB,MAAc;QAEd,MAAM,QAAQ,GAMR,CACF,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;4BAoBZ,MAAM;;;sCAGI,CAAC,CAC9B,CAAC,IAAI,CAAC;QAEP,MAAM,YAAY,GAIZ,CACF,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;;;;;;;;;;aAU3B,CAAC,CACL,CAAC,IAAI,CAAC;QAEP,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACzB,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,KAAK,CAAC;gBAAE,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACzD,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACrB,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CACjC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,SAAS,KAAK,GAAG,CAAC,OAAO,CACrD,CAAC;YACF,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClE,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBAC7B,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAChC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,SAAS,CACnC,CAAC;gBACF,MAAM,SAAS,GAAU;oBACrB,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;oBACX,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;iBAC7B,CAAC;gBACF,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,KAAK,CAAC;oBAAE,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;gBAC9D,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,CAAC;oBAAE,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEhE,SAAS,CAAC,OAAO,GAAG,IAAI,KAAK,CACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAClD,CAAC;gBACF,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;oBACvB,SAAS,CAAC,OAAO,CACb,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CACjD,GAAG,MAAM,CAAC,UAAU,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBACH,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,KAAK,CAAC,YAAY,CACrB,QAAkB,EAClB,MAAc,EACd,OAAe,EACf,iBAAqC;QAErC,MAAM,QAAQ,GAUR,CACF,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;uCA0BD,MAAM;;;;;;;;;;;;;iBAa5B,CAAC,CACT,CAAC,IAAI,CAAC;QAEP,MAAM,aAAa,GAAuB,EAAwB,CAAC;QACnE,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAE/D,YAAY,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;YAChC,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC;YAChE,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAC5B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,mBAAmB,CACnD,CAAC;YACF,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAC9B,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAC/C,CAAC;YACF,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY,EAAE;gBAC9B,SAAS,CAAC,QAAQ,CACd,2BAA2B,IAAI,CAAC,CAAC,CAAC,CAAC,mBAAmB,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,gCAAgC,EACrH,IAAI,CACP,CAAC;gBACF,OAAO;aACV;YACD,MAAM,QAAQ,GAAqB;gBAC/B,YAAY,EAAE,EAAE;gBAChB,cAAc,EAAE,EAAE;gBAClB,UAAU;gBACV,YAAY;aACf,CAAC;YACF,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,WAAW,EAAE;gBAClC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;aACxC;YACD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,WAAW,EAAE;gBAClC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;aACxC;YACD,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjB,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACjD,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,cAAc,CAAC,gCAAgC,CAC1D,aAAa,EACb,QAAQ,EACR,iBAAiB,CACpB,CAAC;QACF,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,KAAK,CAAC,oBAAoB;QAC7B,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACrD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;oBACxB,IAAI,CAAC,GAAG,EAAE;wBACN,OAAO,CAAC,IAAI,CAAC,CAAC;qBACjB;yBAAM;wBACH,SAAS,CAAC,QAAQ,CACd,8CAA8C,EAC9C,KAAK,EACL,GAAG,CAAC,OAAO,CACd,CAAC;wBACF,MAAM,CAAC,GAAG,CAAC,CAAC;qBACf;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,MAAM,OAAO,CAAC;SACjB;IACL,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,gBAAoC;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;YACjC,QAAQ,EAAE,gBAAgB,CAAC,YAAY;YACvC,IAAI,EAAE,gBAAgB,CAAC,IAAI;YAC3B,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;YACnC,IAAI,EAAE,gBAAgB,CAAC,IAAI;YAC3B,GAAG,EAAE,gBAAgB,CAAC,GAAG;YACzB,wDAAwD;YACxD,iBAAiB,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI;YACjC,IAAI,EAAE,gBAAgB,CAAC,IAAI;SAC9B,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC5B,IAAI,CAAC,GAAG,EAAE;oBACN,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;qBAAM;oBACH,SAAS,CAAC,QAAQ,CACd,sCAAsC,EACtC,KAAK,EACL,GAAG,CAAC,OAAO,CACd,CAAC;oBACF,MAAM,CAAC,GAAG,CAAC,CAAC;iBACf;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,CAAC;IAClB,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAC,MAAc;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,mBAAmB,MAAM,IAAI,CAAC,CAAC;IAC/D,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,MAAc;QAC7B,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,MAAM,IAAI,CAAC,CAAC;IACnD,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,MAAc;QAC9B,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iBAAiB,MAAM,IAAI,CAAC,CAAC;IAC7D,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,MAAc;QACvC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CACpC,qDAAqD,MAAM,IAAI,CAClE,CAAC;QACF,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEO,MAAM,CAAC,0BAA0B,CACrC,MAAqB,EACrB,QAAgB;QAEhB,IAAI,YAAY,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE;YACf,OAAO,SAAS,CAAC;SACpB;QACD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAEtD,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,EAAE;YAC/C,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;SAC9D;QACD,OAAO,UAAU,YAAY,GAAG,CAAC;IACrC,CAAC;CACJ;AA1rBD,iCA0rBC",sourcesContent:["import type * as PG from \"pg\";\nimport { ConnectionOptions } from \"typeorm\";\nimport * as TypeormDriver from \"typeorm/driver/postgres/PostgresDriver\";\nimport { DataTypeDefaults } from \"typeorm/driver/types/DataTypeDefaults\";\nimport * as TomgUtils from \"../Utils\";\nimport AbstractDriver from \"./AbstractDriver\";\nimport IConnectionOptions from \"../IConnectionOptions\";\nimport { Entity } from \"../models/Entity\";\nimport { Column } from \"../models/Column\";\nimport { Index } from \"../models/Index\";\nimport IGenerationOptions from \"../IGenerationOptions\";\nimport { RelationInternal } from \"../models/RelationInternal\";\n\nexport default class PostgresDriver extends AbstractDriver {\n    public defaultValues: DataTypeDefaults = new TypeormDriver.PostgresDriver({\n        options: { replication: undefined } as ConnectionOptions,\n    } as any).dataTypeDefaults;\n\n    public readonly standardPort = 5432;\n\n    public readonly standardUser = \"postgres\";\n\n    public readonly standardSchema = \"public\";\n\n    private PG: typeof PG;\n\n    private Connection: PG.Client;\n\n    public constructor() {\n        super();\n        try {\n            // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved\n            this.PG = require(\"pg\");\n        } catch (error) {\n            TomgUtils.LogError(\"\", false, error);\n            throw error;\n        }\n    }\n\n    public GetAllTablesQuery = async (\n        schema: string,\n        dbNames: string,\n        tableNames: string[]\n    ) => {\n        const tableCondition =\n            tableNames.length > 0\n                ? ` AND NOT table_name IN ('${tableNames.join(\"','\")}')`\n                : \"\";\n        const response: {\n            TABLE_SCHEMA: string;\n            TABLE_NAME: string;\n            DB_NAME: string;\n        }[] = (\n            await this.Connection.query(\n                `SELECT table_schema as \"TABLE_SCHEMA\",table_name as \"TABLE_NAME\", table_catalog as \"DB_NAME\" FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND table_schema in (${schema}) ${tableCondition}`\n            )\n        ).rows;\n        return response;\n    };\n\n    public async GetCoulmnsFromEntity(\n        entities: Entity[],\n        schema: string\n    ): Promise<Entity[]> {\n        const response: {\n            table_name: string;\n            column_name: string;\n            udt_name: string;\n            column_default: string;\n            is_nullable: string;\n            data_type: string;\n            character_maximum_length: number;\n            numeric_precision: number;\n            numeric_scale: number;\n            isidentity: string;\n            isunique: string;\n            enumvalues: string | null;\n        }[] = (\n            await this.Connection\n                .query(`SELECT table_name,column_name,udt_name,column_default,is_nullable,\n                    data_type,character_maximum_length,numeric_precision,numeric_scale,\n                    case when column_default LIKE 'nextval%' then 'YES' else 'NO' end isidentity,\n        \t\t\t(SELECT count(*)\n            FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc\n                inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE cu\n                    on cu.CONSTRAINT_NAME = tc.CONSTRAINT_NAME\n            where\n                tc.CONSTRAINT_TYPE = 'UNIQUE'\n                and tc.TABLE_NAME = c.TABLE_NAME\n                and cu.COLUMN_NAME = c.COLUMN_NAME\n                and tc.TABLE_SCHEMA=c.TABLE_SCHEMA) IsUnique,\n                (SELECT\n        string_agg(enumlabel, ',')\n        FROM \"pg_enum\" \"e\"\n        INNER JOIN \"pg_type\" \"t\" ON \"t\".\"oid\" = \"e\".\"enumtypid\"\n        INNER JOIN \"pg_namespace\" \"n\" ON \"n\".\"oid\" = \"t\".\"typnamespace\"\n        WHERE \"n\".\"nspname\" = table_schema AND \"t\".\"typname\"=udt_name\n                ) enumValues\n                    FROM INFORMATION_SCHEMA.COLUMNS c\n                    where table_schema in (${schema})\n        \t\t\torder by ordinal_position`)\n        ).rows;\n        entities.forEach((ent) => {\n            response\n                .filter((filterVal) => filterVal.table_name === ent.tscName)\n                .forEach((resp) => {\n                    const tscName = resp.column_name;\n                    const options: Column[\"options\"] = {\n                        name: resp.column_name,\n                    };\n                    if (resp.is_nullable === \"YES\") options.nullable = true;\n                    if (resp.isunique === \"1\") options.unique = true;\n\n                    const generated =\n                        resp.isidentity === \"YES\" ? true : undefined;\n                    const defaultValue = generated\n                        ? undefined\n                        : PostgresDriver.ReturnDefaultValueFunction(\n                              resp.column_default,\n                              resp.data_type\n                          );\n\n                    const columnTypes = this.MatchColumnTypes(\n                        resp.data_type,\n                        resp.udt_name,\n                        resp.enumvalues\n                    );\n                    if (columnTypes.tsType === \"NonNullable<unknown>\") {\n                        if (\n                            resp.data_type === \"USER-DEFINED\" ||\n                            resp.data_type === \"ARRAY\"\n                        ) {\n                            TomgUtils.LogError(\n                                `Unknown ${resp.data_type} column type: ${resp.udt_name} table name: ${resp.table_name} column name: ${resp.column_name}`\n                            );\n                        } else {\n                            TomgUtils.LogError(\n                                `Unknown column type: ${resp.data_type} table name: ${resp.table_name} column name: ${resp.column_name}`\n                            );\n                        }\n                        return;\n                    }\n\n                    const columnType = columnTypes.sqlType;\n                    let tscType = columnTypes.tsType;\n                    if (columnTypes.isArray) options.array = true;\n                    if (columnTypes.enumValues.length > 0)\n                        options.enum = columnTypes.enumValues;\n                    if (options.array) {\n                        tscType = tscType\n                            .split(\"|\")\n                            .map((x) => `${x.replace(\"|\", \"\").trim()}[]`)\n                            .join(\" | \");\n                    }\n\n                    if (\n                        this.ColumnTypesWithPrecision.some(\n                            (v) => v === columnType\n                        )\n                    ) {\n                        if (resp.numeric_precision !== null) {\n                            options.precision = resp.numeric_precision;\n                        }\n                        if (resp.numeric_scale !== null) {\n                            options.scale = resp.numeric_scale;\n                        }\n                    }\n                    if (\n                        this.ColumnTypesWithLength.some((v) => v === columnType)\n                    ) {\n                        options.length =\n                            resp.character_maximum_length > 0\n                                ? resp.character_maximum_length\n                                : undefined;\n                    }\n                    if (\n                        this.ColumnTypesWithWidth.some((v) => v === columnType)\n                    ) {\n                        options.width =\n                            resp.character_maximum_length > 0\n                                ? resp.character_maximum_length\n                                : undefined;\n                    }\n\n                    ent.columns.push({\n                        generated,\n                        type: columnType,\n                        default: defaultValue,\n                        options,\n                        tscName,\n                        tscType,\n                    });\n                });\n        });\n        return entities;\n    }\n\n    public MatchColumnTypes(\n        dataType: string,\n        udtName: string,\n        enumValues: string | null\n    ) {\n        let ret: {\n            tsType: Column[\"tscType\"];\n            sqlType: string;\n            isArray: boolean;\n            enumValues: string[];\n        } = {\n            tsType: \"\",\n            sqlType: dataType,\n            isArray: false,\n            enumValues: [],\n        };\n        switch (dataType) {\n            case \"int2\":\n                ret.tsType = \"number\";\n                break;\n            case \"int4\":\n                ret.tsType = \"number\";\n                break;\n            case \"int8\":\n                ret.tsType = \"string\";\n                break;\n            case \"smallint\":\n                ret.tsType = \"number\";\n                break;\n            case \"integer\":\n                ret.tsType = \"number\";\n                break;\n            case \"bigint\":\n                ret.tsType = \"string\";\n                break;\n            case \"decimal\":\n                ret.tsType = \"string\";\n                break;\n            case \"numeric\":\n                ret.tsType = \"string\";\n                break;\n            case \"real\":\n                ret.tsType = \"number\";\n                break;\n            case \"float\":\n                ret.tsType = \"number\";\n                break;\n            case \"float4\":\n                ret.tsType = \"number\";\n                break;\n            case \"float8\":\n                ret.tsType = \"number\";\n                break;\n            case \"double precision\":\n                ret.tsType = \"number\";\n                break;\n            case \"money\":\n                ret.tsType = \"string\";\n                break;\n            case \"character varying\":\n                ret.tsType = \"string\";\n                break;\n            case \"varchar\":\n                ret.tsType = \"string\";\n                break;\n            case \"character\":\n                ret.tsType = \"string\";\n                break;\n            case \"char\":\n                ret.tsType = \"string\";\n                break;\n            case \"bpchar\":\n                ret.sqlType = \"char\";\n                ret.tsType = \"string\";\n                break;\n            case \"text\":\n                ret.tsType = \"string\";\n                break;\n            case \"citext\":\n                ret.tsType = \"string\";\n                break;\n            case \"hstore\":\n                ret.tsType = \"string\";\n                break;\n            case \"bytea\":\n                ret.tsType = \"Buffer\";\n                break;\n            case \"bit\":\n                ret.tsType = \"string\";\n                break;\n            case \"varbit\":\n                ret.tsType = \"string\";\n                break;\n            case \"bit varying\":\n                ret.tsType = \"string\";\n                break;\n            case \"timetz\":\n                ret.tsType = \"string\";\n                break;\n            case \"timestamptz\":\n                ret.tsType = \"Date\";\n                break;\n            case \"timestamp\":\n                ret.tsType = \"string\";\n                break;\n            case \"timestamp without time zone\":\n                ret.tsType = \"Date\";\n                break;\n            case \"timestamp with time zone\":\n                ret.tsType = \"Date\";\n                break;\n            case \"date\":\n                ret.tsType = \"string\";\n                break;\n            case \"time\":\n                ret.tsType = \"string\";\n                break;\n            case \"time without time zone\":\n                ret.tsType = \"string\";\n                break;\n            case \"time with time zone\":\n                ret.tsType = \"string\";\n                break;\n            case \"interval\":\n                ret.tsType = \"any\";\n                break;\n            case \"bool\":\n                ret.tsType = \"boolean\";\n                break;\n            case \"boolean\":\n                ret.tsType = \"boolean\";\n                break;\n            case \"point\":\n                ret.tsType = \"string | object\";\n                break;\n            case \"line\":\n                ret.tsType = \"string\";\n                break;\n            case \"lseg\":\n                ret.tsType = \"string | string[]\";\n                break;\n            case \"box\":\n                ret.tsType = \"string | object\";\n                break;\n            case \"path\":\n                ret.tsType = \"string\";\n                break;\n            case \"polygon\":\n                ret.tsType = \"string\";\n                break;\n            case \"circle\":\n                ret.tsType = \"string | object\";\n                break;\n            case \"cidr\":\n                ret.tsType = \"string\";\n                break;\n            case \"inet\":\n                ret.tsType = \"string\";\n                break;\n            case \"macaddr\":\n                ret.tsType = \"string\";\n                break;\n            case \"tsvector\":\n                ret.tsType = \"string\";\n                break;\n            case \"tsquery\":\n                ret.tsType = \"string\";\n                break;\n            case \"uuid\":\n                ret.tsType = \"string\";\n                break;\n            case \"xml\":\n                ret.tsType = \"string\";\n                break;\n            case \"json\":\n                ret.tsType = \"object\";\n                break;\n            case \"jsonb\":\n                ret.tsType = \"object\";\n                break;\n            case \"int4range\":\n                ret.tsType = \"string\";\n                break;\n            case \"int8range\":\n                ret.tsType = \"string\";\n                break;\n            case \"numrange\":\n                ret.tsType = \"string\";\n                break;\n            case \"tsrange\":\n                ret.tsType = \"string\";\n                break;\n            case \"tstzrange\":\n                ret.tsType = \"string\";\n                break;\n            case \"daterange\":\n                ret.tsType = \"string\";\n                break;\n            case \"ARRAY\":\n                ret = this.MatchColumnTypes(\n                    udtName.substring(1),\n                    udtName,\n                    enumValues\n                );\n                ret.isArray = true;\n                break;\n            case \"USER-DEFINED\":\n                ret.tsType = \"string\";\n                switch (udtName) {\n                    case \"citext\":\n                    case \"hstore\":\n                    case \"geography\":\n                    case \"geometry\":\n                        ret.sqlType = udtName;\n                        break;\n                    default:\n                        if (enumValues) {\n                            ret.tsType = (`\"${enumValues\n                                .split(\",\")\n                                .join('\" | \"')}\"` as never) as string;\n                            ret.sqlType = \"enum\";\n                            ret.enumValues = enumValues.split(\",\");\n                        }\n                        break;\n                }\n                break;\n            default:\n                ret.tsType = \"NonNullable<unknown>\";\n                break;\n        }\n        return ret;\n    }\n\n    public async GetIndexesFromEntity(\n        entities: Entity[],\n        schema: string\n    ): Promise<Entity[]> {\n        const response: {\n            tablename: string;\n            indexname: string;\n            columnname: string;\n            is_unique: number;\n            is_primary_key: number;\n        }[] = (\n            await this.Connection.query(`SELECT\n        c.relname AS tablename,\n        i.relname as indexname,\n        f.attname AS columnname,\n        CASE\n            WHEN ix.indisunique = true THEN 1\n            ELSE 0\n        END AS is_unique,\n        CASE\n            WHEN ix.indisprimary='true' THEN 1\n            ELSE 0\n        END AS is_primary_key\n        FROM pg_attribute f\n        JOIN pg_class c ON c.oid = f.attrelid\n        JOIN pg_type t ON t.oid = f.atttypid\n        LEFT JOIN pg_attrdef d ON d.adrelid = c.oid AND d.adnum = f.attnum\n        LEFT JOIN pg_namespace n ON n.oid = c.relnamespace\n        LEFT JOIN pg_index AS ix ON f.attnum = ANY(ix.indkey) and c.oid = f.attrelid and c.oid = ix.indrelid\n        LEFT JOIN pg_class AS i ON ix.indexrelid = i.oid\n        WHERE c.relkind = 'r'::char\n        AND n.nspname in (${schema})\n        AND f.attnum > 0\n        AND i.oid<>0\n        ORDER BY c.relname,f.attname;`)\n        ).rows;\n\n        const indexesOrder: {\n            indexname: string;\n            columnname: string;\n            ordernum: number;\n        }[] = (\n            await this.Connection.query(`SELECT c.relname AS indexname,\n                 a.attname AS columnname,\n                 a.attnum AS ordernum\n                 FROM pg_attribute a\n                 INNER JOIN pg_class c on c.oid = a.attrelid\n                 LEFT JOIN pg_namespace n ON n.oid = c.relnamespace\n                 WHERE c.relkind = 'i'::char\n                 AND a.attnum > 0\n                 AND n.nspname in ('public')\n                 ORDER BY c.relname, a.attnum;\n            `)\n        ).rows;\n\n        const order = {};\n        indexesOrder.forEach((ind) => {\n            if (!(ind.indexname in order)) order[ind.indexname] = {};\n            order[ind.indexname][ind.columnname] = ind.ordernum - 1;\n        });\n\n        entities.forEach((ent) => {\n            const entityIndices = response.filter(\n                (filterVal) => filterVal.tablename === ent.tscName\n            );\n            const indexNames = new Set(entityIndices.map((v) => v.indexname));\n            indexNames.forEach((indexName) => {\n                const records = entityIndices.filter(\n                    (v) => v.indexname === indexName\n                );\n                const indexInfo: Index = {\n                    columns: [],\n                    options: {},\n                    name: records[0].indexname,\n                };\n                if (records[0].is_primary_key === 1) indexInfo.primary = true;\n                if (records[0].is_unique === 1) indexInfo.options.unique = true;\n\n                indexInfo.columns = new Array(\n                    Object.keys(order[records[0].indexname]).length\n                );\n                records.forEach((record) => {\n                    indexInfo.columns[\n                        order[records[0].indexname][record.columnname]\n                    ] = record.columnname;\n                });\n                ent.indices.push(indexInfo);\n            });\n        });\n\n        return entities;\n    }\n\n    public async GetRelations(\n        entities: Entity[],\n        schema: string,\n        dbNames: string,\n        generationOptions: IGenerationOptions\n    ): Promise<Entity[]> {\n        const response: {\n            tablewithforeignkey: string;\n            fk_partno: number;\n            foreignkeycolumn: string;\n            tablereferenced: string;\n            foreignkeycolumnreferenced: string;\n            ondelete: \"RESTRICT\" | \"CASCADE\" | \"SET NULL\" | \"NO ACTION\";\n            onupdate: \"RESTRICT\" | \"CASCADE\" | \"SET NULL\" | \"NO ACTION\";\n            object_id: string;\n            // Distinct because of note in https://www.postgresql.org/docs/9.1/information-schema.html\n        }[] = (\n            await this.Connection.query(`SELECT DISTINCT\n            con.relname AS tablewithforeignkey,\n            att.attnum as fk_partno,\n                 att2.attname AS foreignkeycolumn,\n              cl.relname AS tablereferenced,\n              att.attname AS foreignkeycolumnreferenced,\n              delete_rule as ondelete,\n              update_rule as onupdate,\n                concat(con.conname,con.conrelid,con.confrelid) as object_id\n               FROM (\n                   SELECT\n                     unnest(con1.conkey) AS parent,\n                     unnest(con1.confkey) AS child,\n                     con1.confrelid,\n                     con1.conrelid,\n                     cl_1.relname,\n                   con1.conname,\n                   nspname\n                   FROM\n                     pg_class cl_1,\n                     pg_namespace ns,\n                     pg_constraint con1\n                   WHERE\n                     con1.contype = 'f'::\"char\"\n                     AND cl_1.relnamespace = ns.oid\n                     AND con1.conrelid = cl_1.oid\n                     and nspname in (${schema})\n              ) con,\n                pg_attribute att,\n                pg_class cl,\n                pg_attribute att2,\n                information_schema.referential_constraints rc\n              WHERE\n                att.attrelid = con.confrelid\n                AND att.attnum = con.child\n                AND cl.oid = con.confrelid\n                AND att2.attrelid = con.conrelid\n                AND att2.attnum = con.parent\n                AND rc.constraint_name= con.conname AND constraint_catalog=current_database() AND rc.constraint_schema=nspname\n                `)\n        ).rows;\n\n        const relationsTemp: RelationInternal[] = [] as RelationInternal[];\n        const relationKeys = new Set(response.map((v) => v.object_id));\n\n        relationKeys.forEach((relationId) => {\n            const rows = response.filter((v) => v.object_id === relationId);\n            const ownerTable = entities.find(\n                (v) => v.sqlName === rows[0].tablewithforeignkey\n            );\n            const relatedTable = entities.find(\n                (v) => v.sqlName === rows[0].tablereferenced\n            );\n            if (!ownerTable || !relatedTable) {\n                TomgUtils.LogError(\n                    `Relation between tables ${rows[0].tablewithforeignkey} and ${rows[0].tablereferenced} wasn't found in entity model.`,\n                    true\n                );\n                return;\n            }\n            const internal: RelationInternal = {\n                ownerColumns: [],\n                relatedColumns: [],\n                ownerTable,\n                relatedTable,\n            };\n            if (rows[0].ondelete !== \"NO ACTION\") {\n                internal.onDelete = rows[0].ondelete;\n            }\n            if (rows[0].onupdate !== \"NO ACTION\") {\n                internal.onUpdate = rows[0].onupdate;\n            }\n            rows.forEach((row) => {\n                internal.ownerColumns.push(row.foreignkeycolumn);\n                internal.relatedColumns.push(row.foreignkeycolumnreferenced);\n            });\n            relationsTemp.push(internal);\n        });\n\n        const retVal = PostgresDriver.GetRelationsFromRelationTempInfo(\n            relationsTemp,\n            entities,\n            generationOptions\n        );\n        return retVal;\n    }\n\n    public async DisconnectFromServer() {\n        if (this.Connection) {\n            const promise = new Promise<boolean>((resolve, reject) => {\n                this.Connection.end((err) => {\n                    if (!err) {\n                        resolve(true);\n                    } else {\n                        TomgUtils.LogError(\n                            \"Error disconnecting from to Postgres Server.\",\n                            false,\n                            err.message\n                        );\n                        reject(err);\n                    }\n                });\n            });\n            await promise;\n        }\n    }\n\n    public async ConnectToServer(connectionOptons: IConnectionOptions) {\n        this.Connection = new this.PG.Client({\n            database: connectionOptons.databaseName,\n            host: connectionOptons.host,\n            password: connectionOptons.password,\n            port: connectionOptons.port,\n            ssl: connectionOptons.ssl,\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            statement_timeout: 60 * 60 * 1000,\n            user: connectionOptons.user,\n        });\n\n        const promise = new Promise<boolean>((resolve, reject) => {\n            this.Connection.connect((err) => {\n                if (!err) {\n                    resolve(true);\n                } else {\n                    TomgUtils.LogError(\n                        \"Error connecting to Postgres Server.\",\n                        false,\n                        err.message\n                    );\n                    reject(err);\n                }\n            });\n        });\n\n        await promise;\n    }\n\n    public async CreateDB(dbName: string) {\n        await this.Connection.query(`CREATE DATABASE ${dbName}; `);\n    }\n\n    public async UseDB(dbName: string) {\n        await this.Connection.query(`USE ${dbName}; `);\n    }\n\n    public async DropDB(dbName: string) {\n        await this.Connection.query(`DROP DATABASE ${dbName}; `);\n    }\n\n    public async CheckIfDBExists(dbName: string): Promise<boolean> {\n        const resp = await this.Connection.query(\n            `SELECT datname FROM pg_database  WHERE datname  ='${dbName}' `\n        );\n        return resp.rowCount > 0;\n    }\n\n    private static ReturnDefaultValueFunction(\n        defVal: string | null,\n        dataType: string\n    ): string | undefined {\n        let defaultValue = defVal;\n        if (!defaultValue) {\n            return undefined;\n        }\n        defaultValue = defaultValue.replace(/'::[\\w ]*/, \"'\");\n\n        if ([\"json\", \"jsonb\"].some((x) => x === dataType)) {\n            return `${defaultValue.slice(1, defaultValue.length - 1)}`;\n        }\n        return `() => \"${defaultValue}\"`;\n    }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e743bb9af77dce159422a13a7fd461cd4b8bb9a0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_20dyrbaeud=function(){return actualCoverage;};return actualCoverage;}cov_20dyrbaeud();cov_20dyrbaeud().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const TypeormDriver=(cov_20dyrbaeud().s[1]++,require("typeorm/driver/postgres/PostgresDriver"));const TomgUtils=(cov_20dyrbaeud().s[2]++,require("../Utils"));const AbstractDriver_1=(cov_20dyrbaeud().s[3]++,require("./AbstractDriver"));class PostgresDriver extends(AbstractDriver_1.default){constructor(){cov_20dyrbaeud().f[0]++;cov_20dyrbaeud().s[4]++;super();cov_20dyrbaeud().s[5]++;this.defaultValues=new TypeormDriver.PostgresDriver({options:{replication:undefined}}).dataTypeDefaults;cov_20dyrbaeud().s[6]++;this.standardPort=5432;cov_20dyrbaeud().s[7]++;this.standardUser="postgres";cov_20dyrbaeud().s[8]++;this.standardSchema="public";cov_20dyrbaeud().s[9]++;this.GetAllTablesQuery=async(schema,dbNames,tableNames)=>{cov_20dyrbaeud().f[1]++;const tableCondition=(cov_20dyrbaeud().s[10]++,tableNames.length>0?(cov_20dyrbaeud().b[0][0]++,` AND NOT table_name IN ('${tableNames.join("','")}')`):(cov_20dyrbaeud().b[0][1]++,""));const response=(cov_20dyrbaeud().s[11]++,(await this.Connection.query(`SELECT table_schema as "TABLE_SCHEMA",table_name as "TABLE_NAME", table_catalog as "DB_NAME" FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE' AND table_schema in (${schema}) ${tableCondition}`)).rows);cov_20dyrbaeud().s[12]++;return response;};cov_20dyrbaeud().s[13]++;try{cov_20dyrbaeud().s[14]++;// eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
this.PG=require("pg");}catch(error){cov_20dyrbaeud().s[15]++;TomgUtils.LogError("",false,error);cov_20dyrbaeud().s[16]++;throw error;}}async GetCoulmnsFromEntity(entities,schema){cov_20dyrbaeud().f[2]++;const response=(cov_20dyrbaeud().s[17]++,(await this.Connection.query(`SELECT table_name,column_name,udt_name,column_default,is_nullable,
                    data_type,character_maximum_length,numeric_precision,numeric_scale,
                    case when column_default LIKE 'nextval%' then 'YES' else 'NO' end isidentity,
        			(SELECT count(*)
            FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc
                inner join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE cu
                    on cu.CONSTRAINT_NAME = tc.CONSTRAINT_NAME
            where
                tc.CONSTRAINT_TYPE = 'UNIQUE'
                and tc.TABLE_NAME = c.TABLE_NAME
                and cu.COLUMN_NAME = c.COLUMN_NAME
                and tc.TABLE_SCHEMA=c.TABLE_SCHEMA) IsUnique,
                (SELECT
        string_agg(enumlabel, ',')
        FROM "pg_enum" "e"
        INNER JOIN "pg_type" "t" ON "t"."oid" = "e"."enumtypid"
        INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace"
        WHERE "n"."nspname" = table_schema AND "t"."typname"=udt_name
                ) enumValues
                    FROM INFORMATION_SCHEMA.COLUMNS c
                    where table_schema in (${schema})
        			order by ordinal_position`)).rows);cov_20dyrbaeud().s[18]++;entities.forEach(ent=>{cov_20dyrbaeud().f[3]++;cov_20dyrbaeud().s[19]++;response.filter(filterVal=>{cov_20dyrbaeud().f[4]++;cov_20dyrbaeud().s[20]++;return filterVal.table_name===ent.tscName;}).forEach(resp=>{cov_20dyrbaeud().f[5]++;const tscName=(cov_20dyrbaeud().s[21]++,resp.column_name);const options=(cov_20dyrbaeud().s[22]++,{name:resp.column_name});cov_20dyrbaeud().s[23]++;if(resp.is_nullable==="YES"){cov_20dyrbaeud().b[1][0]++;cov_20dyrbaeud().s[24]++;options.nullable=true;}else{cov_20dyrbaeud().b[1][1]++;}cov_20dyrbaeud().s[25]++;if(resp.isunique==="1"){cov_20dyrbaeud().b[2][0]++;cov_20dyrbaeud().s[26]++;options.unique=true;}else{cov_20dyrbaeud().b[2][1]++;}const generated=(cov_20dyrbaeud().s[27]++,resp.isidentity==="YES"?(cov_20dyrbaeud().b[3][0]++,true):(cov_20dyrbaeud().b[3][1]++,undefined));const defaultValue=(cov_20dyrbaeud().s[28]++,generated?(cov_20dyrbaeud().b[4][0]++,undefined):(cov_20dyrbaeud().b[4][1]++,PostgresDriver.ReturnDefaultValueFunction(resp.column_default,resp.data_type)));const columnTypes=(cov_20dyrbaeud().s[29]++,this.MatchColumnTypes(resp.data_type,resp.udt_name,resp.enumvalues));cov_20dyrbaeud().s[30]++;if(columnTypes.tsType==="NonNullable<unknown>"){cov_20dyrbaeud().b[5][0]++;cov_20dyrbaeud().s[31]++;if((cov_20dyrbaeud().b[7][0]++,resp.data_type==="USER-DEFINED")||(cov_20dyrbaeud().b[7][1]++,resp.data_type==="ARRAY")){cov_20dyrbaeud().b[6][0]++;cov_20dyrbaeud().s[32]++;TomgUtils.LogError(`Unknown ${resp.data_type} column type: ${resp.udt_name} table name: ${resp.table_name} column name: ${resp.column_name}`);}else{cov_20dyrbaeud().b[6][1]++;cov_20dyrbaeud().s[33]++;TomgUtils.LogError(`Unknown column type: ${resp.data_type} table name: ${resp.table_name} column name: ${resp.column_name}`);}cov_20dyrbaeud().s[34]++;return;}else{cov_20dyrbaeud().b[5][1]++;}const columnType=(cov_20dyrbaeud().s[35]++,columnTypes.sqlType);let tscType=(cov_20dyrbaeud().s[36]++,columnTypes.tsType);cov_20dyrbaeud().s[37]++;if(columnTypes.isArray){cov_20dyrbaeud().b[8][0]++;cov_20dyrbaeud().s[38]++;options.array=true;}else{cov_20dyrbaeud().b[8][1]++;}cov_20dyrbaeud().s[39]++;if(columnTypes.enumValues.length>0){cov_20dyrbaeud().b[9][0]++;cov_20dyrbaeud().s[40]++;options.enum=columnTypes.enumValues;}else{cov_20dyrbaeud().b[9][1]++;}cov_20dyrbaeud().s[41]++;if(options.array){cov_20dyrbaeud().b[10][0]++;cov_20dyrbaeud().s[42]++;tscType=tscType.split("|").map(x=>{cov_20dyrbaeud().f[6]++;cov_20dyrbaeud().s[43]++;return`${x.replace("|","").trim()}[]`;}).join(" | ");}else{cov_20dyrbaeud().b[10][1]++;}cov_20dyrbaeud().s[44]++;if(this.ColumnTypesWithPrecision.some(v=>{cov_20dyrbaeud().f[7]++;cov_20dyrbaeud().s[45]++;return v===columnType;})){cov_20dyrbaeud().b[11][0]++;cov_20dyrbaeud().s[46]++;if(resp.numeric_precision!==null){cov_20dyrbaeud().b[12][0]++;cov_20dyrbaeud().s[47]++;options.precision=resp.numeric_precision;}else{cov_20dyrbaeud().b[12][1]++;}cov_20dyrbaeud().s[48]++;if(resp.numeric_scale!==null){cov_20dyrbaeud().b[13][0]++;cov_20dyrbaeud().s[49]++;options.scale=resp.numeric_scale;}else{cov_20dyrbaeud().b[13][1]++;}}else{cov_20dyrbaeud().b[11][1]++;}cov_20dyrbaeud().s[50]++;if(this.ColumnTypesWithLength.some(v=>{cov_20dyrbaeud().f[8]++;cov_20dyrbaeud().s[51]++;return v===columnType;})){cov_20dyrbaeud().b[14][0]++;cov_20dyrbaeud().s[52]++;options.length=resp.character_maximum_length>0?(cov_20dyrbaeud().b[15][0]++,resp.character_maximum_length):(cov_20dyrbaeud().b[15][1]++,undefined);}else{cov_20dyrbaeud().b[14][1]++;}cov_20dyrbaeud().s[53]++;if(this.ColumnTypesWithWidth.some(v=>{cov_20dyrbaeud().f[9]++;cov_20dyrbaeud().s[54]++;return v===columnType;})){cov_20dyrbaeud().b[16][0]++;cov_20dyrbaeud().s[55]++;options.width=resp.character_maximum_length>0?(cov_20dyrbaeud().b[17][0]++,resp.character_maximum_length):(cov_20dyrbaeud().b[17][1]++,undefined);}else{cov_20dyrbaeud().b[16][1]++;}cov_20dyrbaeud().s[56]++;ent.columns.push({generated,type:columnType,default:defaultValue,options,tscName,tscType});});});cov_20dyrbaeud().s[57]++;return entities;}MatchColumnTypes(dataType,udtName,enumValues){cov_20dyrbaeud().f[10]++;let ret=(cov_20dyrbaeud().s[58]++,{tsType:"",sqlType:dataType,isArray:false,enumValues:[]});cov_20dyrbaeud().s[59]++;switch(dataType){case"int2":cov_20dyrbaeud().b[18][0]++;cov_20dyrbaeud().s[60]++;ret.tsType="number";cov_20dyrbaeud().s[61]++;break;case"int4":cov_20dyrbaeud().b[18][1]++;cov_20dyrbaeud().s[62]++;ret.tsType="number";cov_20dyrbaeud().s[63]++;break;case"int8":cov_20dyrbaeud().b[18][2]++;cov_20dyrbaeud().s[64]++;ret.tsType="string";cov_20dyrbaeud().s[65]++;break;case"smallint":cov_20dyrbaeud().b[18][3]++;cov_20dyrbaeud().s[66]++;ret.tsType="number";cov_20dyrbaeud().s[67]++;break;case"integer":cov_20dyrbaeud().b[18][4]++;cov_20dyrbaeud().s[68]++;ret.tsType="number";cov_20dyrbaeud().s[69]++;break;case"bigint":cov_20dyrbaeud().b[18][5]++;cov_20dyrbaeud().s[70]++;ret.tsType="string";cov_20dyrbaeud().s[71]++;break;case"decimal":cov_20dyrbaeud().b[18][6]++;cov_20dyrbaeud().s[72]++;ret.tsType="string";cov_20dyrbaeud().s[73]++;break;case"numeric":cov_20dyrbaeud().b[18][7]++;cov_20dyrbaeud().s[74]++;ret.tsType="string";cov_20dyrbaeud().s[75]++;break;case"real":cov_20dyrbaeud().b[18][8]++;cov_20dyrbaeud().s[76]++;ret.tsType="number";cov_20dyrbaeud().s[77]++;break;case"float":cov_20dyrbaeud().b[18][9]++;cov_20dyrbaeud().s[78]++;ret.tsType="number";cov_20dyrbaeud().s[79]++;break;case"float4":cov_20dyrbaeud().b[18][10]++;cov_20dyrbaeud().s[80]++;ret.tsType="number";cov_20dyrbaeud().s[81]++;break;case"float8":cov_20dyrbaeud().b[18][11]++;cov_20dyrbaeud().s[82]++;ret.tsType="number";cov_20dyrbaeud().s[83]++;break;case"double precision":cov_20dyrbaeud().b[18][12]++;cov_20dyrbaeud().s[84]++;ret.tsType="number";cov_20dyrbaeud().s[85]++;break;case"money":cov_20dyrbaeud().b[18][13]++;cov_20dyrbaeud().s[86]++;ret.tsType="string";cov_20dyrbaeud().s[87]++;break;case"character varying":cov_20dyrbaeud().b[18][14]++;cov_20dyrbaeud().s[88]++;ret.tsType="string";cov_20dyrbaeud().s[89]++;break;case"varchar":cov_20dyrbaeud().b[18][15]++;cov_20dyrbaeud().s[90]++;ret.tsType="string";cov_20dyrbaeud().s[91]++;break;case"character":cov_20dyrbaeud().b[18][16]++;cov_20dyrbaeud().s[92]++;ret.tsType="string";cov_20dyrbaeud().s[93]++;break;case"char":cov_20dyrbaeud().b[18][17]++;cov_20dyrbaeud().s[94]++;ret.tsType="string";cov_20dyrbaeud().s[95]++;break;case"bpchar":cov_20dyrbaeud().b[18][18]++;cov_20dyrbaeud().s[96]++;ret.sqlType="char";cov_20dyrbaeud().s[97]++;ret.tsType="string";cov_20dyrbaeud().s[98]++;break;case"text":cov_20dyrbaeud().b[18][19]++;cov_20dyrbaeud().s[99]++;ret.tsType="string";cov_20dyrbaeud().s[100]++;break;case"citext":cov_20dyrbaeud().b[18][20]++;cov_20dyrbaeud().s[101]++;ret.tsType="string";cov_20dyrbaeud().s[102]++;break;case"hstore":cov_20dyrbaeud().b[18][21]++;cov_20dyrbaeud().s[103]++;ret.tsType="string";cov_20dyrbaeud().s[104]++;break;case"bytea":cov_20dyrbaeud().b[18][22]++;cov_20dyrbaeud().s[105]++;ret.tsType="Buffer";cov_20dyrbaeud().s[106]++;break;case"bit":cov_20dyrbaeud().b[18][23]++;cov_20dyrbaeud().s[107]++;ret.tsType="string";cov_20dyrbaeud().s[108]++;break;case"varbit":cov_20dyrbaeud().b[18][24]++;cov_20dyrbaeud().s[109]++;ret.tsType="string";cov_20dyrbaeud().s[110]++;break;case"bit varying":cov_20dyrbaeud().b[18][25]++;cov_20dyrbaeud().s[111]++;ret.tsType="string";cov_20dyrbaeud().s[112]++;break;case"timetz":cov_20dyrbaeud().b[18][26]++;cov_20dyrbaeud().s[113]++;ret.tsType="string";cov_20dyrbaeud().s[114]++;break;case"timestamptz":cov_20dyrbaeud().b[18][27]++;cov_20dyrbaeud().s[115]++;ret.tsType="Date";cov_20dyrbaeud().s[116]++;break;case"timestamp":cov_20dyrbaeud().b[18][28]++;cov_20dyrbaeud().s[117]++;ret.tsType="string";cov_20dyrbaeud().s[118]++;break;case"timestamp without time zone":cov_20dyrbaeud().b[18][29]++;cov_20dyrbaeud().s[119]++;ret.tsType="Date";cov_20dyrbaeud().s[120]++;break;case"timestamp with time zone":cov_20dyrbaeud().b[18][30]++;cov_20dyrbaeud().s[121]++;ret.tsType="Date";cov_20dyrbaeud().s[122]++;break;case"date":cov_20dyrbaeud().b[18][31]++;cov_20dyrbaeud().s[123]++;ret.tsType="string";cov_20dyrbaeud().s[124]++;break;case"time":cov_20dyrbaeud().b[18][32]++;cov_20dyrbaeud().s[125]++;ret.tsType="string";cov_20dyrbaeud().s[126]++;break;case"time without time zone":cov_20dyrbaeud().b[18][33]++;cov_20dyrbaeud().s[127]++;ret.tsType="string";cov_20dyrbaeud().s[128]++;break;case"time with time zone":cov_20dyrbaeud().b[18][34]++;cov_20dyrbaeud().s[129]++;ret.tsType="string";cov_20dyrbaeud().s[130]++;break;case"interval":cov_20dyrbaeud().b[18][35]++;cov_20dyrbaeud().s[131]++;ret.tsType="any";cov_20dyrbaeud().s[132]++;break;case"bool":cov_20dyrbaeud().b[18][36]++;cov_20dyrbaeud().s[133]++;ret.tsType="boolean";cov_20dyrbaeud().s[134]++;break;case"boolean":cov_20dyrbaeud().b[18][37]++;cov_20dyrbaeud().s[135]++;ret.tsType="boolean";cov_20dyrbaeud().s[136]++;break;case"point":cov_20dyrbaeud().b[18][38]++;cov_20dyrbaeud().s[137]++;ret.tsType="string | object";cov_20dyrbaeud().s[138]++;break;case"line":cov_20dyrbaeud().b[18][39]++;cov_20dyrbaeud().s[139]++;ret.tsType="string";cov_20dyrbaeud().s[140]++;break;case"lseg":cov_20dyrbaeud().b[18][40]++;cov_20dyrbaeud().s[141]++;ret.tsType="string | string[]";cov_20dyrbaeud().s[142]++;break;case"box":cov_20dyrbaeud().b[18][41]++;cov_20dyrbaeud().s[143]++;ret.tsType="string | object";cov_20dyrbaeud().s[144]++;break;case"path":cov_20dyrbaeud().b[18][42]++;cov_20dyrbaeud().s[145]++;ret.tsType="string";cov_20dyrbaeud().s[146]++;break;case"polygon":cov_20dyrbaeud().b[18][43]++;cov_20dyrbaeud().s[147]++;ret.tsType="string";cov_20dyrbaeud().s[148]++;break;case"circle":cov_20dyrbaeud().b[18][44]++;cov_20dyrbaeud().s[149]++;ret.tsType="string | object";cov_20dyrbaeud().s[150]++;break;case"cidr":cov_20dyrbaeud().b[18][45]++;cov_20dyrbaeud().s[151]++;ret.tsType="string";cov_20dyrbaeud().s[152]++;break;case"inet":cov_20dyrbaeud().b[18][46]++;cov_20dyrbaeud().s[153]++;ret.tsType="string";cov_20dyrbaeud().s[154]++;break;case"macaddr":cov_20dyrbaeud().b[18][47]++;cov_20dyrbaeud().s[155]++;ret.tsType="string";cov_20dyrbaeud().s[156]++;break;case"tsvector":cov_20dyrbaeud().b[18][48]++;cov_20dyrbaeud().s[157]++;ret.tsType="string";cov_20dyrbaeud().s[158]++;break;case"tsquery":cov_20dyrbaeud().b[18][49]++;cov_20dyrbaeud().s[159]++;ret.tsType="string";cov_20dyrbaeud().s[160]++;break;case"uuid":cov_20dyrbaeud().b[18][50]++;cov_20dyrbaeud().s[161]++;ret.tsType="string";cov_20dyrbaeud().s[162]++;break;case"xml":cov_20dyrbaeud().b[18][51]++;cov_20dyrbaeud().s[163]++;ret.tsType="string";cov_20dyrbaeud().s[164]++;break;case"json":cov_20dyrbaeud().b[18][52]++;cov_20dyrbaeud().s[165]++;ret.tsType="object";cov_20dyrbaeud().s[166]++;break;case"jsonb":cov_20dyrbaeud().b[18][53]++;cov_20dyrbaeud().s[167]++;ret.tsType="object";cov_20dyrbaeud().s[168]++;break;case"int4range":cov_20dyrbaeud().b[18][54]++;cov_20dyrbaeud().s[169]++;ret.tsType="string";cov_20dyrbaeud().s[170]++;break;case"int8range":cov_20dyrbaeud().b[18][55]++;cov_20dyrbaeud().s[171]++;ret.tsType="string";cov_20dyrbaeud().s[172]++;break;case"numrange":cov_20dyrbaeud().b[18][56]++;cov_20dyrbaeud().s[173]++;ret.tsType="string";cov_20dyrbaeud().s[174]++;break;case"tsrange":cov_20dyrbaeud().b[18][57]++;cov_20dyrbaeud().s[175]++;ret.tsType="string";cov_20dyrbaeud().s[176]++;break;case"tstzrange":cov_20dyrbaeud().b[18][58]++;cov_20dyrbaeud().s[177]++;ret.tsType="string";cov_20dyrbaeud().s[178]++;break;case"daterange":cov_20dyrbaeud().b[18][59]++;cov_20dyrbaeud().s[179]++;ret.tsType="string";cov_20dyrbaeud().s[180]++;break;case"ARRAY":cov_20dyrbaeud().b[18][60]++;cov_20dyrbaeud().s[181]++;ret=this.MatchColumnTypes(udtName.substring(1),udtName,enumValues);cov_20dyrbaeud().s[182]++;ret.isArray=true;cov_20dyrbaeud().s[183]++;break;case"USER-DEFINED":cov_20dyrbaeud().b[18][61]++;cov_20dyrbaeud().s[184]++;ret.tsType="string";cov_20dyrbaeud().s[185]++;switch(udtName){case"citext":cov_20dyrbaeud().b[19][0]++;case"hstore":cov_20dyrbaeud().b[19][1]++;case"geography":cov_20dyrbaeud().b[19][2]++;case"geometry":cov_20dyrbaeud().b[19][3]++;cov_20dyrbaeud().s[186]++;ret.sqlType=udtName;cov_20dyrbaeud().s[187]++;break;default:cov_20dyrbaeud().b[19][4]++;cov_20dyrbaeud().s[188]++;if(enumValues){cov_20dyrbaeud().b[20][0]++;cov_20dyrbaeud().s[189]++;ret.tsType=`"${enumValues.split(",").join('" | "')}"`;cov_20dyrbaeud().s[190]++;ret.sqlType="enum";cov_20dyrbaeud().s[191]++;ret.enumValues=enumValues.split(",");}else{cov_20dyrbaeud().b[20][1]++;}cov_20dyrbaeud().s[192]++;break;}cov_20dyrbaeud().s[193]++;break;default:cov_20dyrbaeud().b[18][62]++;cov_20dyrbaeud().s[194]++;ret.tsType="NonNullable<unknown>";cov_20dyrbaeud().s[195]++;break;}cov_20dyrbaeud().s[196]++;return ret;}async GetIndexesFromEntity(entities,schema){cov_20dyrbaeud().f[11]++;const response=(cov_20dyrbaeud().s[197]++,(await this.Connection.query(`SELECT
        c.relname AS tablename,
        i.relname as indexname,
        f.attname AS columnname,
        CASE
            WHEN ix.indisunique = true THEN 1
            ELSE 0
        END AS is_unique,
        CASE
            WHEN ix.indisprimary='true' THEN 1
            ELSE 0
        END AS is_primary_key
        FROM pg_attribute f
        JOIN pg_class c ON c.oid = f.attrelid
        JOIN pg_type t ON t.oid = f.atttypid
        LEFT JOIN pg_attrdef d ON d.adrelid = c.oid AND d.adnum = f.attnum
        LEFT JOIN pg_namespace n ON n.oid = c.relnamespace
        LEFT JOIN pg_index AS ix ON f.attnum = ANY(ix.indkey) and c.oid = f.attrelid and c.oid = ix.indrelid
        LEFT JOIN pg_class AS i ON ix.indexrelid = i.oid
        WHERE c.relkind = 'r'::char
        AND n.nspname in (${schema})
        AND f.attnum > 0
        AND i.oid<>0
        ORDER BY c.relname,f.attname;`)).rows);const indexesOrder=(cov_20dyrbaeud().s[198]++,(await this.Connection.query(`SELECT c.relname AS indexname,
                 a.attname AS columnname,
                 a.attnum AS ordernum
                 FROM pg_attribute a
                 INNER JOIN pg_class c on c.oid = a.attrelid
                 LEFT JOIN pg_namespace n ON n.oid = c.relnamespace
                 WHERE c.relkind = 'i'::char
                 AND a.attnum > 0
                 AND n.nspname in ('public')
                 ORDER BY c.relname, a.attnum;
            `)).rows);const order=(cov_20dyrbaeud().s[199]++,{});cov_20dyrbaeud().s[200]++;indexesOrder.forEach(ind=>{cov_20dyrbaeud().f[12]++;cov_20dyrbaeud().s[201]++;if(!(ind.indexname in order)){cov_20dyrbaeud().b[21][0]++;cov_20dyrbaeud().s[202]++;order[ind.indexname]={};}else{cov_20dyrbaeud().b[21][1]++;}cov_20dyrbaeud().s[203]++;order[ind.indexname][ind.columnname]=ind.ordernum-1;});cov_20dyrbaeud().s[204]++;entities.forEach(ent=>{cov_20dyrbaeud().f[13]++;const entityIndices=(cov_20dyrbaeud().s[205]++,response.filter(filterVal=>{cov_20dyrbaeud().f[14]++;cov_20dyrbaeud().s[206]++;return filterVal.tablename===ent.tscName;}));const indexNames=(cov_20dyrbaeud().s[207]++,new Set(entityIndices.map(v=>{cov_20dyrbaeud().f[15]++;cov_20dyrbaeud().s[208]++;return v.indexname;})));cov_20dyrbaeud().s[209]++;indexNames.forEach(indexName=>{cov_20dyrbaeud().f[16]++;const records=(cov_20dyrbaeud().s[210]++,entityIndices.filter(v=>{cov_20dyrbaeud().f[17]++;cov_20dyrbaeud().s[211]++;return v.indexname===indexName;}));const indexInfo=(cov_20dyrbaeud().s[212]++,{columns:[],options:{},name:records[0].indexname});cov_20dyrbaeud().s[213]++;if(records[0].is_primary_key===1){cov_20dyrbaeud().b[22][0]++;cov_20dyrbaeud().s[214]++;indexInfo.primary=true;}else{cov_20dyrbaeud().b[22][1]++;}cov_20dyrbaeud().s[215]++;if(records[0].is_unique===1){cov_20dyrbaeud().b[23][0]++;cov_20dyrbaeud().s[216]++;indexInfo.options.unique=true;}else{cov_20dyrbaeud().b[23][1]++;}cov_20dyrbaeud().s[217]++;indexInfo.columns=new Array(Object.keys(order[records[0].indexname]).length);cov_20dyrbaeud().s[218]++;records.forEach(record=>{cov_20dyrbaeud().f[18]++;cov_20dyrbaeud().s[219]++;indexInfo.columns[order[records[0].indexname][record.columnname]]=record.columnname;});cov_20dyrbaeud().s[220]++;ent.indices.push(indexInfo);});});cov_20dyrbaeud().s[221]++;return entities;}async GetRelations(entities,schema,dbNames,generationOptions){cov_20dyrbaeud().f[19]++;const response=(cov_20dyrbaeud().s[222]++,(await this.Connection.query(`SELECT DISTINCT
            con.relname AS tablewithforeignkey,
            att.attnum as fk_partno,
                 att2.attname AS foreignkeycolumn,
              cl.relname AS tablereferenced,
              att.attname AS foreignkeycolumnreferenced,
              delete_rule as ondelete,
              update_rule as onupdate,
                concat(con.conname,con.conrelid,con.confrelid) as object_id
               FROM (
                   SELECT
                     unnest(con1.conkey) AS parent,
                     unnest(con1.confkey) AS child,
                     con1.confrelid,
                     con1.conrelid,
                     cl_1.relname,
                   con1.conname,
                   nspname
                   FROM
                     pg_class cl_1,
                     pg_namespace ns,
                     pg_constraint con1
                   WHERE
                     con1.contype = 'f'::"char"
                     AND cl_1.relnamespace = ns.oid
                     AND con1.conrelid = cl_1.oid
                     and nspname in (${schema})
              ) con,
                pg_attribute att,
                pg_class cl,
                pg_attribute att2,
                information_schema.referential_constraints rc
              WHERE
                att.attrelid = con.confrelid
                AND att.attnum = con.child
                AND cl.oid = con.confrelid
                AND att2.attrelid = con.conrelid
                AND att2.attnum = con.parent
                AND rc.constraint_name= con.conname AND constraint_catalog=current_database() AND rc.constraint_schema=nspname
                `)).rows);const relationsTemp=(cov_20dyrbaeud().s[223]++,[]);const relationKeys=(cov_20dyrbaeud().s[224]++,new Set(response.map(v=>{cov_20dyrbaeud().f[20]++;cov_20dyrbaeud().s[225]++;return v.object_id;})));cov_20dyrbaeud().s[226]++;relationKeys.forEach(relationId=>{cov_20dyrbaeud().f[21]++;const rows=(cov_20dyrbaeud().s[227]++,response.filter(v=>{cov_20dyrbaeud().f[22]++;cov_20dyrbaeud().s[228]++;return v.object_id===relationId;}));const ownerTable=(cov_20dyrbaeud().s[229]++,entities.find(v=>{cov_20dyrbaeud().f[23]++;cov_20dyrbaeud().s[230]++;return v.sqlName===rows[0].tablewithforeignkey;}));const relatedTable=(cov_20dyrbaeud().s[231]++,entities.find(v=>{cov_20dyrbaeud().f[24]++;cov_20dyrbaeud().s[232]++;return v.sqlName===rows[0].tablereferenced;}));cov_20dyrbaeud().s[233]++;if((cov_20dyrbaeud().b[25][0]++,!ownerTable)||(cov_20dyrbaeud().b[25][1]++,!relatedTable)){cov_20dyrbaeud().b[24][0]++;cov_20dyrbaeud().s[234]++;TomgUtils.LogError(`Relation between tables ${rows[0].tablewithforeignkey} and ${rows[0].tablereferenced} wasn't found in entity model.`,true);cov_20dyrbaeud().s[235]++;return;}else{cov_20dyrbaeud().b[24][1]++;}const internal=(cov_20dyrbaeud().s[236]++,{ownerColumns:[],relatedColumns:[],ownerTable,relatedTable});cov_20dyrbaeud().s[237]++;if(rows[0].ondelete!=="NO ACTION"){cov_20dyrbaeud().b[26][0]++;cov_20dyrbaeud().s[238]++;internal.onDelete=rows[0].ondelete;}else{cov_20dyrbaeud().b[26][1]++;}cov_20dyrbaeud().s[239]++;if(rows[0].onupdate!=="NO ACTION"){cov_20dyrbaeud().b[27][0]++;cov_20dyrbaeud().s[240]++;internal.onUpdate=rows[0].onupdate;}else{cov_20dyrbaeud().b[27][1]++;}cov_20dyrbaeud().s[241]++;rows.forEach(row=>{cov_20dyrbaeud().f[25]++;cov_20dyrbaeud().s[242]++;internal.ownerColumns.push(row.foreignkeycolumn);cov_20dyrbaeud().s[243]++;internal.relatedColumns.push(row.foreignkeycolumnreferenced);});cov_20dyrbaeud().s[244]++;relationsTemp.push(internal);});const retVal=(cov_20dyrbaeud().s[245]++,PostgresDriver.GetRelationsFromRelationTempInfo(relationsTemp,entities,generationOptions));cov_20dyrbaeud().s[246]++;return retVal;}async DisconnectFromServer(){cov_20dyrbaeud().f[26]++;cov_20dyrbaeud().s[247]++;if(this.Connection){cov_20dyrbaeud().b[28][0]++;const promise=(cov_20dyrbaeud().s[248]++,new Promise((resolve,reject)=>{cov_20dyrbaeud().f[27]++;cov_20dyrbaeud().s[249]++;this.Connection.end(err=>{cov_20dyrbaeud().f[28]++;cov_20dyrbaeud().s[250]++;if(!err){cov_20dyrbaeud().b[29][0]++;cov_20dyrbaeud().s[251]++;resolve(true);}else{cov_20dyrbaeud().b[29][1]++;cov_20dyrbaeud().s[252]++;TomgUtils.LogError("Error disconnecting from to Postgres Server.",false,err.message);cov_20dyrbaeud().s[253]++;reject(err);}});}));cov_20dyrbaeud().s[254]++;await promise;}else{cov_20dyrbaeud().b[28][1]++;}}async ConnectToServer(connectionOptons){cov_20dyrbaeud().f[29]++;cov_20dyrbaeud().s[255]++;this.Connection=new this.PG.Client({database:connectionOptons.databaseName,host:connectionOptons.host,password:connectionOptons.password,port:connectionOptons.port,ssl:connectionOptons.ssl,// eslint-disable-next-line @typescript-eslint/camelcase
statement_timeout:60*60*1000,user:connectionOptons.user});const promise=(cov_20dyrbaeud().s[256]++,new Promise((resolve,reject)=>{cov_20dyrbaeud().f[30]++;cov_20dyrbaeud().s[257]++;this.Connection.connect(err=>{cov_20dyrbaeud().f[31]++;cov_20dyrbaeud().s[258]++;if(!err){cov_20dyrbaeud().b[30][0]++;cov_20dyrbaeud().s[259]++;resolve(true);}else{cov_20dyrbaeud().b[30][1]++;cov_20dyrbaeud().s[260]++;TomgUtils.LogError("Error connecting to Postgres Server.",false,err.message);cov_20dyrbaeud().s[261]++;reject(err);}});}));cov_20dyrbaeud().s[262]++;await promise;}async CreateDB(dbName){cov_20dyrbaeud().f[32]++;cov_20dyrbaeud().s[263]++;await this.Connection.query(`CREATE DATABASE ${dbName}; `);}async UseDB(dbName){cov_20dyrbaeud().f[33]++;cov_20dyrbaeud().s[264]++;await this.Connection.query(`USE ${dbName}; `);}async DropDB(dbName){cov_20dyrbaeud().f[34]++;cov_20dyrbaeud().s[265]++;await this.Connection.query(`DROP DATABASE ${dbName}; `);}async CheckIfDBExists(dbName){cov_20dyrbaeud().f[35]++;const resp=(cov_20dyrbaeud().s[266]++,await this.Connection.query(`SELECT datname FROM pg_database  WHERE datname  ='${dbName}' `));cov_20dyrbaeud().s[267]++;return resp.rowCount>0;}static ReturnDefaultValueFunction(defVal,dataType){cov_20dyrbaeud().f[36]++;let defaultValue=(cov_20dyrbaeud().s[268]++,defVal);cov_20dyrbaeud().s[269]++;if(!defaultValue){cov_20dyrbaeud().b[31][0]++;cov_20dyrbaeud().s[270]++;return undefined;}else{cov_20dyrbaeud().b[31][1]++;}cov_20dyrbaeud().s[271]++;defaultValue=defaultValue.replace(/'::[\w ]*/,"'");cov_20dyrbaeud().s[272]++;if(["json","jsonb"].some(x=>{cov_20dyrbaeud().f[37]++;cov_20dyrbaeud().s[273]++;return x===dataType;})){cov_20dyrbaeud().b[32][0]++;cov_20dyrbaeud().s[274]++;return`${defaultValue.slice(1,defaultValue.length-1)}`;}else{cov_20dyrbaeud().b[32][1]++;}cov_20dyrbaeud().s[275]++;return`() => "${defaultValue}"`;}}cov_20dyrbaeud().s[276]++;exports.default=PostgresDriver;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,