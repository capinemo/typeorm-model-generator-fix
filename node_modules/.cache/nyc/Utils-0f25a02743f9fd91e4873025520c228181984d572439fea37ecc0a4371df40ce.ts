"use strict";function cov_1lmypa8b7h(){var path="/home/nemo/work/github/typeorm-model-generator/src/Utils.ts";var hash="9ae52af09e88ed94209907234e399f32b87e58df";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nemo/work/github/typeorm-model-generator/src/Utils.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:19},end:{line:3,column:41}},"2":{start:{line:4,column:13},end:{line:4,column:28}},"3":{start:{line:5,column:20},end:{line:5,column:46}},"4":{start:{line:7,column:20},end:{line:7,column:31}},"5":{start:{line:8,column:4},end:{line:8,column:27}},"6":{start:{line:9,column:4},end:{line:9,column:64}},"7":{start:{line:10,column:4},end:{line:10,column:66}},"8":{start:{line:11,column:4},end:{line:11,column:115}},"9":{start:{line:12,column:4},end:{line:14,column:5}},"10":{start:{line:13,column:8},end:{line:13,column:38}},"11":{start:{line:15,column:4},end:{line:17,column:5}},"12":{start:{line:16,column:8},end:{line:16,column:33}},"13":{start:{line:19,column:0},end:{line:19,column:28}},"14":{start:{line:21,column:4},end:{line:21,column:56}},"15":{start:{line:23,column:0},end:{line:23,column:40}},"16":{start:{line:25,column:20},end:{line:25,column:30}},"17":{start:{line:26,column:31},end:{line:34,column:48}},"18":{start:{line:26,column:37},end:{line:34,column:48}},"19":{start:{line:26,column:66},end:{line:27,column:39}},"20":{start:{line:28,column:38},end:{line:29,column:43}},"21":{start:{line:30,column:40},end:{line:31,column:43}},"22":{start:{line:35,column:4},end:{line:45,column:5}},"23":{start:{line:36,column:8},end:{line:36,column:25}},"24":{start:{line:37,column:8},end:{line:44,column:9}},"25":{start:{line:37,column:21},end:{line:37,column:22}},"26":{start:{line:38,column:12},end:{line:40,column:33}},"27":{start:{line:41,column:12},end:{line:43,column:13}},"28":{start:{line:42,column:16},end:{line:42,column:22}},"29":{start:{line:46,column:4},end:{line:46,column:21}},"30":{start:{line:48,column:0},end:{line:48,column:50}},"31":{start:{line:50,column:4},end:{line:60,column:5}},"32":{start:{line:52,column:8},end:{line:52,column:33}},"33":{start:{line:55,column:8},end:{line:58,column:9}},"34":{start:{line:57,column:12},end:{line:57,column:66}},"35":{start:{line:59,column:8},end:{line:59,column:18}},"36":{start:{line:62,column:0},end:{line:62,column:44}}},fnMap:{"0":{name:"LogError",decl:{start:{line:6,column:9},end:{line:6,column:17}},loc:{start:{line:6,column:55},end:{line:18,column:1}},line:6},"1":{name:"packageVersion",decl:{start:{line:20,column:9},end:{line:20,column:23}},loc:{start:{line:20,column:26},end:{line:22,column:1}},line:20},"2":{name:"findNameForNewField",decl:{start:{line:24,column:9},end:{line:24,column:28}},loc:{start:{line:24,column:69},end:{line:47,column:1}},line:24},"3":{name:"(anonymous_3)",decl:{start:{line:26,column:31},end:{line:26,column:32}},loc:{start:{line:26,column:37},end:{line:34,column:48}},line:26},"4":{name:"(anonymous_4)",decl:{start:{line:26,column:59},end:{line:26,column:60}},loc:{start:{line:26,column:66},end:{line:27,column:39}},line:26},"5":{name:"(anonymous_5)",decl:{start:{line:28,column:31},end:{line:28,column:32}},loc:{start:{line:28,column:38},end:{line:29,column:43}},line:28},"6":{name:"(anonymous_6)",decl:{start:{line:30,column:33},end:{line:30,column:34}},loc:{start:{line:30,column:40},end:{line:31,column:43}},line:30},"7":{name:"requireLocalFile",decl:{start:{line:49,column:9},end:{line:49,column:25}},loc:{start:{line:49,column:36},end:{line:61,column:1}},line:49}},branchMap:{"0":{loc:{start:{line:6,column:27},end:{line:6,column:40}},type:"default-arg",locations:[{start:{line:6,column:36},end:{line:6,column:40}}],line:6},"1":{loc:{start:{line:12,column:4},end:{line:14,column:5}},type:"if",locations:[{start:{line:12,column:4},end:{line:14,column:5}},{start:{line:12,column:4},end:{line:14,column:5}}],line:12},"2":{loc:{start:{line:12,column:8},end:{line:12,column:30}},type:"binary-expr",locations:[{start:{line:12,column:8},end:{line:12,column:14}},{start:{line:12,column:18},end:{line:12,column:30}}],line:12},"3":{loc:{start:{line:15,column:4},end:{line:17,column:5}},type:"if",locations:[{start:{line:15,column:4},end:{line:17,column:5}},{start:{line:15,column:4},end:{line:17,column:5}}],line:15},"4":{loc:{start:{line:24,column:49},end:{line:24,column:67}},type:"default-arg",locations:[{start:{line:24,column:65},end:{line:24,column:67}}],line:24},"5":{loc:{start:{line:26,column:37},end:{line:34,column:48}},type:"binary-expr",locations:[{start:{line:26,column:38},end:{line:27,column:40}},{start:{line:28,column:8},end:{line:29,column:44}},{start:{line:30,column:8},end:{line:31,column:44}},{start:{line:32,column:9},end:{line:32,column:22}},{start:{line:33,column:12},end:{line:34,column:47}}],line:26},"6":{loc:{start:{line:35,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:35,column:4},end:{line:45,column:5}},{start:{line:35,column:4},end:{line:45,column:5}}],line:35},"7":{loc:{start:{line:41,column:12},end:{line:43,column:13}},type:"if",locations:[{start:{line:41,column:12},end:{line:43,column:13}},{start:{line:41,column:12},end:{line:43,column:13}}],line:41},"8":{loc:{start:{line:55,column:8},end:{line:58,column:9}},type:"if",locations:[{start:{line:55,column:8},end:{line:58,column:9}},{start:{line:55,column:8},end:{line:58,column:9}}],line:55}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0]},inputSourceMap:{version:3,file:"/home/nemo/work/github/typeorm-model-generator/src/Utils.ts",sources:["/home/nemo/work/github/typeorm-model-generator/src/Utils.ts"],names:[],mappings:";;AAAA,0CAA0C;AAC1C,6BAA6B;AAC7B,+CAA+C;AAG/C,SAAgB,QAAQ,CACpB,OAAe,EACf,MAAM,GAAG,IAAI,EACb,WAAuC;IAEvC,IAAI,SAAS,GAAG,WAAW,CAAC;IAC5B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACvB,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAC5D,OAAO,CAAC,KAAK,CAAC,GAAG,cAAc,EAAE,UAAU,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;IAC9D,OAAO,CAAC,KAAK,CACT,yEAAyE,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAClG,CAAC;IACF,IAAI,MAAM,IAAI,CAAC,WAAW,EAAE;QACxB,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;KACjC;IACD,IAAI,SAAS,EAAE;QACX,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KAC5B;AACL,CAAC;AAlBD,4BAkBC;AACD,SAAgB,cAAc;IAC1B,OAAO,GAAG,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC;AACxD,CAAC;AAFD,wCAEC;AACD,SAAgB,mBAAmB,CAC/B,UAAkB,EAClB,MAAc,EACd,aAAa,GAAG,EAAE;IAElB,IAAI,SAAS,GAAG,UAAU,CAAC;IAC3B,MAAM,kBAAkB,GAAG,GAAG,EAAE,CAC5B,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CACjB,CAAC,CAAC,EAAE,EAAE,CACF,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;QAC/B,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CACtC;QACG,MAAM,CAAC,SAAS,CAAC,KAAK,CAClB,CAAC,CAAC,EAAE,EAAE,CACF,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YACjC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CACtC;QACD,MAAM,CAAC,WAAW,CAAC,KAAK,CACpB,CAAC,CAAC,EAAE,EAAE,CACF,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YACjC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CACtC,CAAC;QACN,CAAC,aAAa;YACV,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;gBAC/B,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7C,IAAI,CAAC,kBAAkB,EAAE,EAAE;QACvB,SAAS,IAAI,GAAG,CAAC;QACjB,KACI,IAAI,CAAC,GAAG,CAAC,EACT,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,EACpD,CAAC,EAAE,EACL;YACE,SAAS;gBACL,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;oBAC9D,CAAC,CAAC,QAAQ,EAAE,CAAC;YACjB,IAAI,kBAAkB,EAAE,EAAE;gBACtB,MAAM;aACT;SACJ;KACJ;IACD,OAAO,SAAS,CAAC;AACrB,CAAC;AAzCD,kDAyCC;AAED,SAAgB,gBAAgB,CAAC,QAAgB;IAC7C,IAAI;QACA,yGAAyG;QACzG,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC5B;IAAC,OAAO,GAAG,EAAE;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC5B,yGAAyG;YACzG,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;SACzD;QACD,MAAM,GAAG,CAAC;KACb;AACL,CAAC;AAXD,4CAWC",sourcesContent:["import * as changeCase from \"change-case\";\nimport * as path from \"path\";\nimport * as packagejson from \"../package.json\";\nimport { Entity } from \"./models/Entity\";\n\nexport function LogError(\n    errText: string,\n    isABug = true,\n    passedError?: string | ErrorConstructor\n): void {\n    let errObject = passedError;\n    console.error(errText);\n    console.error(`Error occurred in typeorm-model-generator.`);\n    console.error(`${packageVersion()}  node@${process.version}`);\n    console.error(\n        `If you think this is a bug please open an issue including this log on ${packagejson.bugs.url}`\n    );\n    if (isABug && !passedError) {\n        errObject = new Error().stack;\n    }\n    if (errObject) {\n        console.error(errObject);\n    }\n}\nexport function packageVersion(): string {\n    return `${packagejson.name}@${packagejson.version}`;\n}\nexport function findNameForNewField(\n    _fieldName: string,\n    entity: Entity,\n    columnOldName = \"\"\n): string {\n    let fieldName = _fieldName;\n    const validNameCondition = () =>\n        (entity.columns.every(\n            (v) =>\n                changeCase.camelCase(v.tscName) !==\n                changeCase.camelCase(fieldName)\n        ) &&\n            entity.relations.every(\n                (v) =>\n                    changeCase.camelCase(v.fieldName) !==\n                    changeCase.camelCase(fieldName)\n            ) &&\n            entity.relationIds.every(\n                (v) =>\n                    changeCase.camelCase(v.fieldName) !==\n                    changeCase.camelCase(fieldName)\n            )) ||\n        (columnOldName &&\n            changeCase.camelCase(columnOldName) ===\n                changeCase.camelCase(fieldName));\n    if (!validNameCondition()) {\n        fieldName += \"_\";\n        for (\n            let i = 2;\n            i <= entity.columns.length + entity.relations.length;\n            i++\n        ) {\n            fieldName =\n                fieldName.substring(0, fieldName.length - i.toString().length) +\n                i.toString();\n            if (validNameCondition()) {\n                break;\n            }\n        }\n    }\n    return fieldName;\n}\n\nexport function requireLocalFile(fileName: string): any {\n    try {\n        // eslint-disable-next-line global-require, import/no-dynamic-require, @typescript-eslint/no-var-requires\n        return require(fileName);\n    } catch (err) {\n        if (!path.isAbsolute(fileName)) {\n            // eslint-disable-next-line global-require, import/no-dynamic-require, @typescript-eslint/no-var-requires\n            return require(path.resolve(process.cwd(), fileName));\n        }\n        throw err;\n    }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9ae52af09e88ed94209907234e399f32b87e58df"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_1lmypa8b7h=function(){return actualCoverage;};return actualCoverage;}cov_1lmypa8b7h();cov_1lmypa8b7h().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const changeCase=(cov_1lmypa8b7h().s[1]++,require("change-case"));const path=(cov_1lmypa8b7h().s[2]++,require("path"));const packagejson=(cov_1lmypa8b7h().s[3]++,require("../package.json"));function LogError(errText,isABug=(cov_1lmypa8b7h().b[0][0]++,true),passedError){cov_1lmypa8b7h().f[0]++;let errObject=(cov_1lmypa8b7h().s[4]++,passedError);cov_1lmypa8b7h().s[5]++;console.error(errText);cov_1lmypa8b7h().s[6]++;console.error(`Error occurred in typeorm-model-generator.`);cov_1lmypa8b7h().s[7]++;console.error(`${packageVersion()}  node@${process.version}`);cov_1lmypa8b7h().s[8]++;console.error(`If you think this is a bug please open an issue including this log on ${packagejson.bugs.url}`);cov_1lmypa8b7h().s[9]++;if((cov_1lmypa8b7h().b[2][0]++,isABug)&&(cov_1lmypa8b7h().b[2][1]++,!passedError)){cov_1lmypa8b7h().b[1][0]++;cov_1lmypa8b7h().s[10]++;errObject=new Error().stack;}else{cov_1lmypa8b7h().b[1][1]++;}cov_1lmypa8b7h().s[11]++;if(errObject){cov_1lmypa8b7h().b[3][0]++;cov_1lmypa8b7h().s[12]++;console.error(errObject);}else{cov_1lmypa8b7h().b[3][1]++;}}cov_1lmypa8b7h().s[13]++;exports.LogError=LogError;function packageVersion(){cov_1lmypa8b7h().f[1]++;cov_1lmypa8b7h().s[14]++;return`${packagejson.name}@${packagejson.version}`;}cov_1lmypa8b7h().s[15]++;exports.packageVersion=packageVersion;function findNameForNewField(_fieldName,entity,columnOldName=(cov_1lmypa8b7h().b[4][0]++,"")){cov_1lmypa8b7h().f[2]++;let fieldName=(cov_1lmypa8b7h().s[16]++,_fieldName);cov_1lmypa8b7h().s[17]++;const validNameCondition=()=>{cov_1lmypa8b7h().f[3]++;cov_1lmypa8b7h().s[18]++;return(cov_1lmypa8b7h().b[5][0]++,entity.columns.every(v=>{cov_1lmypa8b7h().f[4]++;cov_1lmypa8b7h().s[19]++;return changeCase.camelCase(v.tscName)!==changeCase.camelCase(fieldName);}))&&(cov_1lmypa8b7h().b[5][1]++,entity.relations.every(v=>{cov_1lmypa8b7h().f[5]++;cov_1lmypa8b7h().s[20]++;return changeCase.camelCase(v.fieldName)!==changeCase.camelCase(fieldName);}))&&(cov_1lmypa8b7h().b[5][2]++,entity.relationIds.every(v=>{cov_1lmypa8b7h().f[6]++;cov_1lmypa8b7h().s[21]++;return changeCase.camelCase(v.fieldName)!==changeCase.camelCase(fieldName);}))||(cov_1lmypa8b7h().b[5][3]++,columnOldName)&&(cov_1lmypa8b7h().b[5][4]++,changeCase.camelCase(columnOldName)===changeCase.camelCase(fieldName));};cov_1lmypa8b7h().s[22]++;if(!validNameCondition()){cov_1lmypa8b7h().b[6][0]++;cov_1lmypa8b7h().s[23]++;fieldName+="_";cov_1lmypa8b7h().s[24]++;for(let i=(cov_1lmypa8b7h().s[25]++,2);i<=entity.columns.length+entity.relations.length;i++){cov_1lmypa8b7h().s[26]++;fieldName=fieldName.substring(0,fieldName.length-i.toString().length)+i.toString();cov_1lmypa8b7h().s[27]++;if(validNameCondition()){cov_1lmypa8b7h().b[7][0]++;cov_1lmypa8b7h().s[28]++;break;}else{cov_1lmypa8b7h().b[7][1]++;}}}else{cov_1lmypa8b7h().b[6][1]++;}cov_1lmypa8b7h().s[29]++;return fieldName;}cov_1lmypa8b7h().s[30]++;exports.findNameForNewField=findNameForNewField;function requireLocalFile(fileName){cov_1lmypa8b7h().f[7]++;cov_1lmypa8b7h().s[31]++;try{cov_1lmypa8b7h().s[32]++;// eslint-disable-next-line global-require, import/no-dynamic-require, @typescript-eslint/no-var-requires
return require(fileName);}catch(err){cov_1lmypa8b7h().s[33]++;if(!path.isAbsolute(fileName)){cov_1lmypa8b7h().b[8][0]++;cov_1lmypa8b7h().s[34]++;// eslint-disable-next-line global-require, import/no-dynamic-require, @typescript-eslint/no-var-requires
return require(path.resolve(process.cwd(),fileName));}else{cov_1lmypa8b7h().b[8][1]++;}cov_1lmypa8b7h().s[35]++;throw err;}}cov_1lmypa8b7h().s[36]++;exports.requireLocalFile=requireLocalFile;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvbmVtby93b3JrL2dpdGh1Yi90eXBlb3JtLW1vZGVsLWdlbmVyYXRvci9zcmMvVXRpbHMudHMiLCJzb3VyY2VzIjpbIi9ob21lL25lbW8vd29yay9naXRodWIvdHlwZW9ybS1tb2RlbC1nZW5lcmF0b3Ivc3JjL1V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMENBQTBDO0FBQzFDLDZCQUE2QjtBQUM3QiwrQ0FBK0M7QUFHL0MsU0FBZ0IsUUFBUSxDQUNwQixPQUFlLEVBQ2YsTUFBTSxHQUFHLElBQUksRUFDYixXQUF1QztJQUV2QyxJQUFJLFNBQVMsR0FBRyxXQUFXLENBQUM7SUFDNUIsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN2QixPQUFPLENBQUMsS0FBSyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7SUFDNUQsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLGNBQWMsRUFBRSxVQUFVLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE9BQU8sQ0FBQyxLQUFLLENBQ1QseUVBQXlFLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQ2xHLENBQUM7SUFDRixJQUFJLE1BQU0sSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUN4QixTQUFTLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUM7S0FDakM7SUFDRCxJQUFJLFNBQVMsRUFBRTtRQUNYLE9BQU8sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7S0FDNUI7QUFDTCxDQUFDO0FBbEJELDRCQWtCQztBQUNELFNBQWdCLGNBQWM7SUFDMUIsT0FBTyxHQUFHLFdBQVcsQ0FBQyxJQUFJLElBQUksV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3hELENBQUM7QUFGRCx3Q0FFQztBQUNELFNBQWdCLG1CQUFtQixDQUMvQixVQUFrQixFQUNsQixNQUFjLEVBQ2QsYUFBYSxHQUFHLEVBQUU7SUFFbEIsSUFBSSxTQUFTLEdBQUcsVUFBVSxDQUFDO0lBQzNCLE1BQU0sa0JBQWtCLEdBQUcsR0FBRyxFQUFFLENBQzVCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQ2pCLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FDRixVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDL0IsVUFBVSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FDdEM7UUFDRyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FDbEIsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUNGLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUNqQyxVQUFVLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUN0QztRQUNELE1BQU0sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUNwQixDQUFDLENBQUMsRUFBRSxFQUFFLENBQ0YsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1lBQ2pDLFVBQVUsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQ3RDLENBQUM7UUFDTixDQUFDLGFBQWE7WUFDVixVQUFVLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztnQkFDL0IsVUFBVSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQzdDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxFQUFFO1FBQ3ZCLFNBQVMsSUFBSSxHQUFHLENBQUM7UUFDakIsS0FDSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQ1QsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUNwRCxDQUFDLEVBQUUsRUFDTDtZQUNFLFNBQVM7Z0JBQ0wsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsTUFBTSxDQUFDO29CQUM5RCxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDakIsSUFBSSxrQkFBa0IsRUFBRSxFQUFFO2dCQUN0QixNQUFNO2FBQ1Q7U0FDSjtLQUNKO0lBQ0QsT0FBTyxTQUFTLENBQUM7QUFDckIsQ0FBQztBQXpDRCxrREF5Q0M7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBQyxRQUFnQjtJQUM3QyxJQUFJO1FBQ0EseUdBQXlHO1FBQ3pHLE9BQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQzVCO0lBQUMsT0FBTyxHQUFHLEVBQUU7UUFDVixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUM1Qix5R0FBeUc7WUFDekcsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztTQUN6RDtRQUNELE1BQU0sR0FBRyxDQUFDO0tBQ2I7QUFDTCxDQUFDO0FBWEQsNENBV0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjaGFuZ2VDYXNlIGZyb20gXCJjaGFuZ2UtY2FzZVwiO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0ICogYXMgcGFja2FnZWpzb24gZnJvbSBcIi4uL3BhY2thZ2UuanNvblwiO1xuaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4vbW9kZWxzL0VudGl0eVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gTG9nRXJyb3IoXG4gICAgZXJyVGV4dDogc3RyaW5nLFxuICAgIGlzQUJ1ZyA9IHRydWUsXG4gICAgcGFzc2VkRXJyb3I/OiBzdHJpbmcgfCBFcnJvckNvbnN0cnVjdG9yXG4pOiB2b2lkIHtcbiAgICBsZXQgZXJyT2JqZWN0ID0gcGFzc2VkRXJyb3I7XG4gICAgY29uc29sZS5lcnJvcihlcnJUZXh0KTtcbiAgICBjb25zb2xlLmVycm9yKGBFcnJvciBvY2N1cnJlZCBpbiB0eXBlb3JtLW1vZGVsLWdlbmVyYXRvci5gKTtcbiAgICBjb25zb2xlLmVycm9yKGAke3BhY2thZ2VWZXJzaW9uKCl9ICBub2RlQCR7cHJvY2Vzcy52ZXJzaW9ufWApO1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIGBJZiB5b3UgdGhpbmsgdGhpcyBpcyBhIGJ1ZyBwbGVhc2Ugb3BlbiBhbiBpc3N1ZSBpbmNsdWRpbmcgdGhpcyBsb2cgb24gJHtwYWNrYWdlanNvbi5idWdzLnVybH1gXG4gICAgKTtcbiAgICBpZiAoaXNBQnVnICYmICFwYXNzZWRFcnJvcikge1xuICAgICAgICBlcnJPYmplY3QgPSBuZXcgRXJyb3IoKS5zdGFjaztcbiAgICB9XG4gICAgaWYgKGVyck9iamVjdCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVyck9iamVjdCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHBhY2thZ2VWZXJzaW9uKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGAke3BhY2thZ2Vqc29uLm5hbWV9QCR7cGFja2FnZWpzb24udmVyc2lvbn1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbmROYW1lRm9yTmV3RmllbGQoXG4gICAgX2ZpZWxkTmFtZTogc3RyaW5nLFxuICAgIGVudGl0eTogRW50aXR5LFxuICAgIGNvbHVtbk9sZE5hbWUgPSBcIlwiXG4pOiBzdHJpbmcge1xuICAgIGxldCBmaWVsZE5hbWUgPSBfZmllbGROYW1lO1xuICAgIGNvbnN0IHZhbGlkTmFtZUNvbmRpdGlvbiA9ICgpID0+XG4gICAgICAgIChlbnRpdHkuY29sdW1ucy5ldmVyeShcbiAgICAgICAgICAgICh2KSA9PlxuICAgICAgICAgICAgICAgIGNoYW5nZUNhc2UuY2FtZWxDYXNlKHYudHNjTmFtZSkgIT09XG4gICAgICAgICAgICAgICAgY2hhbmdlQ2FzZS5jYW1lbENhc2UoZmllbGROYW1lKVxuICAgICAgICApICYmXG4gICAgICAgICAgICBlbnRpdHkucmVsYXRpb25zLmV2ZXJ5KFxuICAgICAgICAgICAgICAgICh2KSA9PlxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VDYXNlLmNhbWVsQ2FzZSh2LmZpZWxkTmFtZSkgIT09XG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZUNhc2UuY2FtZWxDYXNlKGZpZWxkTmFtZSlcbiAgICAgICAgICAgICkgJiZcbiAgICAgICAgICAgIGVudGl0eS5yZWxhdGlvbklkcy5ldmVyeShcbiAgICAgICAgICAgICAgICAodikgPT5cbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlQ2FzZS5jYW1lbENhc2Uodi5maWVsZE5hbWUpICE9PVxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VDYXNlLmNhbWVsQ2FzZShmaWVsZE5hbWUpXG4gICAgICAgICAgICApKSB8fFxuICAgICAgICAoY29sdW1uT2xkTmFtZSAmJlxuICAgICAgICAgICAgY2hhbmdlQ2FzZS5jYW1lbENhc2UoY29sdW1uT2xkTmFtZSkgPT09XG4gICAgICAgICAgICAgICAgY2hhbmdlQ2FzZS5jYW1lbENhc2UoZmllbGROYW1lKSk7XG4gICAgaWYgKCF2YWxpZE5hbWVDb25kaXRpb24oKSkge1xuICAgICAgICBmaWVsZE5hbWUgKz0gXCJfXCI7XG4gICAgICAgIGZvciAoXG4gICAgICAgICAgICBsZXQgaSA9IDI7XG4gICAgICAgICAgICBpIDw9IGVudGl0eS5jb2x1bW5zLmxlbmd0aCArIGVudGl0eS5yZWxhdGlvbnMubGVuZ3RoO1xuICAgICAgICAgICAgaSsrXG4gICAgICAgICkge1xuICAgICAgICAgICAgZmllbGROYW1lID1cbiAgICAgICAgICAgICAgICBmaWVsZE5hbWUuc3Vic3RyaW5nKDAsIGZpZWxkTmFtZS5sZW5ndGggLSBpLnRvU3RyaW5nKCkubGVuZ3RoKSArXG4gICAgICAgICAgICAgICAgaS50b1N0cmluZygpO1xuICAgICAgICAgICAgaWYgKHZhbGlkTmFtZUNvbmRpdGlvbigpKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZpZWxkTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVMb2NhbEZpbGUoZmlsZU5hbWU6IHN0cmluZyk6IGFueSB7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGdsb2JhbC1yZXF1aXJlLCBpbXBvcnQvbm8tZHluYW1pYy1yZXF1aXJlLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXG4gICAgICAgIHJldHVybiByZXF1aXJlKGZpbGVOYW1lKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKCFwYXRoLmlzQWJzb2x1dGUoZmlsZU5hbWUpKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ2xvYmFsLXJlcXVpcmUsIGltcG9ydC9uby1keW5hbWljLXJlcXVpcmUsIEB0eXBlc2NyaXB0LWVzbGludC9uby12YXItcmVxdWlyZXNcbiAgICAgICAgICAgIHJldHVybiByZXF1aXJlKHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCBmaWxlTmFtZSkpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL25lbW8vd29yay9naXRodWIvdHlwZW9ybS1tb2RlbC1nZW5lcmF0b3Ivc3JjL1V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJ1OFZBQUEsS0FBQSxDQUFBLFVBQUEsMEJBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLElBQUEsMEJBQUEsT0FBQSxDQUFBLE1BQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLFdBQUEsMEJBQUEsT0FBQSxDQUFBLGlCQUFBLENBQUEsQ0FBQSxDQUdBLFFBQWdCLENBQUEsUUFBaEIsQ0FDSSxPQURKLENBRUksTUFBTSw2QkFBRyxJQUFILENBRlYsQ0FHSSxXQUhKLENBRzJDLHlCQUV2QyxHQUFJLENBQUEsU0FBUywwQkFBRyxXQUFILENBQWIsQ0FGdUMsd0JBR3ZDLE9BQU8sQ0FBQyxLQUFSLENBQWMsT0FBZCxFQUh1Qyx3QkFJdkMsT0FBTyxDQUFDLEtBQVIsQ0FBYyw0Q0FBZCxFQUp1Qyx3QkFLdkMsT0FBTyxDQUFDLEtBQVIsQ0FBYyxHQUFHLGNBQWMsRUFBRSxVQUFVLE9BQU8sQ0FBQyxPQUFPLEVBQTFELEVBTHVDLHdCQU12QyxPQUFPLENBQUMsS0FBUixDQUNJLHlFQUF5RSxXQUFXLENBQUMsSUFBWixDQUFpQixHQUFHLEVBRGpHLEVBTnVDLHdCQVN2QyxHQUFJLDRCQUFBLE1BQU0sK0JBQUksQ0FBQyxXQUFMLENBQVYsQ0FBNEIscURBQ3hCLFNBQVMsQ0FBRyxHQUFJLENBQUEsS0FBSixHQUFZLEtBQXhCLENBQ0gsQ0FGRCxpQ0FUdUMseUJBWXZDLEdBQUksU0FBSixDQUFlLHFEQUNYLE9BQU8sQ0FBQyxLQUFSLENBQWMsU0FBZCxFQUNILENBRkQsaUNBR0gsQyx5QkFsQkQsT0FBQSxDQUFBLFFBQUEsQ0FBQSxRQUFBLENBbUJBLFFBQWdCLENBQUEsY0FBaEIsRUFBOEIsa0RBQzFCLE1BQU8sR0FBRyxXQUFXLENBQUMsSUFBSSxJQUFJLFdBQVcsQ0FBQyxPQUFPLEVBQWpELENBQ0gsQyx5QkFGRCxPQUFBLENBQUEsY0FBQSxDQUFBLGNBQUEsQ0FHQSxRQUFnQixDQUFBLG1CQUFoQixDQUNJLFVBREosQ0FFSSxNQUZKLENBR0ksYUFBYSw2QkFBRyxFQUFILENBSGpCLENBR3NCLHlCQUVsQixHQUFJLENBQUEsU0FBUywyQkFBRyxVQUFILENBQWIsQ0FGa0IseUJBR2xCLEtBQU0sQ0FBQSxrQkFBa0IsQ0FBRyxJQUN2Qix3REFBQyw0QkFBQSxNQUFNLENBQUMsT0FBUCxDQUFlLEtBQWYsQ0FDSSxDQUFELEVBQ0ksd0RBQUEsQ0FBQSxVQUFVLENBQUMsU0FBWCxDQUFxQixDQUFDLENBQUMsT0FBdkIsSUFDQSxVQUFVLENBQUMsU0FBWCxDQUFxQixTQUFyQixDQURBLENBQytCLENBSHRDLGdDQUtHLE1BQU0sQ0FBQyxTQUFQLENBQWlCLEtBQWpCLENBQ0ssQ0FBRCxFQUNJLHdEQUFBLENBQUEsVUFBVSxDQUFDLFNBQVgsQ0FBcUIsQ0FBQyxDQUFDLFNBQXZCLElBQ0EsVUFBVSxDQUFDLFNBQVgsQ0FBcUIsU0FBckIsQ0FEQSxDQUMrQixDQUh2QyxDQUxILCtCQVVHLE1BQU0sQ0FBQyxXQUFQLENBQW1CLEtBQW5CLENBQ0ssQ0FBRCxFQUNJLHdEQUFBLENBQUEsVUFBVSxDQUFDLFNBQVgsQ0FBcUIsQ0FBQyxDQUFDLFNBQXZCLElBQ0EsVUFBVSxDQUFDLFNBQVgsQ0FBcUIsU0FBckIsQ0FEQSxDQUMrQixDQUh2QyxDQVZILENBQUQsRUFlQyw0QkFBQSxhQUFhLCtCQUNWLFVBQVUsQ0FBQyxTQUFYLENBQXFCLGFBQXJCLElBQ0ksVUFBVSxDQUFDLFNBQVgsQ0FBcUIsU0FBckIsQ0FGTSxDQWZkLENBaUJ3QyxDQWxCNUMsQ0FIa0IseUJBc0JsQixHQUFJLENBQUMsa0JBQWtCLEVBQXZCLENBQTJCLHFEQUN2QixTQUFTLEVBQUksR0FBYixDQUR1Qix5QkFFdkIsSUFDSSxHQUFJLENBQUEsQ0FBQywyQkFBRyxDQUFILENBRFQsQ0FFSSxDQUFDLEVBQUksTUFBTSxDQUFDLE9BQVAsQ0FBZSxNQUFmLENBQXdCLE1BQU0sQ0FBQyxTQUFQLENBQWlCLE1BRmxELENBR0ksQ0FBQyxFQUhMLENBSUUsMEJBQ0UsU0FBUyxDQUNMLFNBQVMsQ0FBQyxTQUFWLENBQW9CLENBQXBCLENBQXVCLFNBQVMsQ0FBQyxNQUFWLENBQW1CLENBQUMsQ0FBQyxRQUFGLEdBQWEsTUFBdkQsRUFDQSxDQUFDLENBQUMsUUFBRixFQUZKLENBREYseUJBSUUsR0FBSSxrQkFBa0IsRUFBdEIsQ0FBMEIscURBQ3RCLE1BQ0gsQ0FGRCxpQ0FHSCxDQUNKLENBZEQsaUNBdEJrQix5QkFxQ2xCLE1BQU8sQ0FBQSxTQUFQLENBQ0gsQyx5QkF6Q0QsT0FBQSxDQUFBLG1CQUFBLENBQUEsbUJBQUEsQ0EyQ0EsUUFBZ0IsQ0FBQSxnQkFBaEIsQ0FBaUMsUUFBakMsQ0FBaUQsa0RBQzdDLEdBQUksMEJBQ0E7QUFDQSxNQUFPLENBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBZCxDQUNILENBQUMsTUFBTyxHQUFQLENBQVksMEJBQ1YsR0FBSSxDQUFDLElBQUksQ0FBQyxVQUFMLENBQWdCLFFBQWhCLENBQUwsQ0FBZ0MscURBQzVCO0FBQ0EsTUFBTyxDQUFBLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTCxDQUFhLE9BQU8sQ0FBQyxHQUFSLEVBQWIsQ0FBNEIsUUFBNUIsQ0FBRCxDQUFkLENBQ0gsQ0FIRCxpQ0FEVSx5QkFLVixLQUFNLENBQUEsR0FBTixDQUNILENBQ0osQyx5QkFYRCxPQUFBLENBQUEsZ0JBQUEsQ0FBQSxnQkFBQSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY2hhbmdlQ2FzZSBmcm9tIFwiY2hhbmdlLWNhc2VcIjtcbmltcG9ydCAqIGFzIHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCAqIGFzIHBhY2thZ2Vqc29uIGZyb20gXCIuLi9wYWNrYWdlLmpzb25cIjtcbmltcG9ydCB7IEVudGl0eSB9IGZyb20gXCIuL21vZGVscy9FbnRpdHlcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIExvZ0Vycm9yKFxuICAgIGVyclRleHQ6IHN0cmluZyxcbiAgICBpc0FCdWcgPSB0cnVlLFxuICAgIHBhc3NlZEVycm9yPzogc3RyaW5nIHwgRXJyb3JDb25zdHJ1Y3RvclxuKTogdm9pZCB7XG4gICAgbGV0IGVyck9iamVjdCA9IHBhc3NlZEVycm9yO1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyVGV4dCk7XG4gICAgY29uc29sZS5lcnJvcihgRXJyb3Igb2NjdXJyZWQgaW4gdHlwZW9ybS1tb2RlbC1nZW5lcmF0b3IuYCk7XG4gICAgY29uc29sZS5lcnJvcihgJHtwYWNrYWdlVmVyc2lvbigpfSAgbm9kZUAke3Byb2Nlc3MudmVyc2lvbn1gKTtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBgSWYgeW91IHRoaW5rIHRoaXMgaXMgYSBidWcgcGxlYXNlIG9wZW4gYW4gaXNzdWUgaW5jbHVkaW5nIHRoaXMgbG9nIG9uICR7cGFja2FnZWpzb24uYnVncy51cmx9YFxuICAgICk7XG4gICAgaWYgKGlzQUJ1ZyAmJiAhcGFzc2VkRXJyb3IpIHtcbiAgICAgICAgZXJyT2JqZWN0ID0gbmV3IEVycm9yKCkuc3RhY2s7XG4gICAgfVxuICAgIGlmIChlcnJPYmplY3QpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJPYmplY3QpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBwYWNrYWdlVmVyc2lvbigpOiBzdHJpbmcge1xuICAgIHJldHVybiBgJHtwYWNrYWdlanNvbi5uYW1lfUAke3BhY2thZ2Vqc29uLnZlcnNpb259YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmaW5kTmFtZUZvck5ld0ZpZWxkKFxuICAgIF9maWVsZE5hbWU6IHN0cmluZyxcbiAgICBlbnRpdHk6IEVudGl0eSxcbiAgICBjb2x1bW5PbGROYW1lID0gXCJcIlxuKTogc3RyaW5nIHtcbiAgICBsZXQgZmllbGROYW1lID0gX2ZpZWxkTmFtZTtcbiAgICBjb25zdCB2YWxpZE5hbWVDb25kaXRpb24gPSAoKSA9PlxuICAgICAgICAoZW50aXR5LmNvbHVtbnMuZXZlcnkoXG4gICAgICAgICAgICAodikgPT5cbiAgICAgICAgICAgICAgICBjaGFuZ2VDYXNlLmNhbWVsQ2FzZSh2LnRzY05hbWUpICE9PVxuICAgICAgICAgICAgICAgIGNoYW5nZUNhc2UuY2FtZWxDYXNlKGZpZWxkTmFtZSlcbiAgICAgICAgKSAmJlxuICAgICAgICAgICAgZW50aXR5LnJlbGF0aW9ucy5ldmVyeShcbiAgICAgICAgICAgICAgICAodikgPT5cbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlQ2FzZS5jYW1lbENhc2Uodi5maWVsZE5hbWUpICE9PVxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VDYXNlLmNhbWVsQ2FzZShmaWVsZE5hbWUpXG4gICAgICAgICAgICApICYmXG4gICAgICAgICAgICBlbnRpdHkucmVsYXRpb25JZHMuZXZlcnkoXG4gICAgICAgICAgICAgICAgKHYpID0+XG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZUNhc2UuY2FtZWxDYXNlKHYuZmllbGROYW1lKSAhPT1cbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlQ2FzZS5jYW1lbENhc2UoZmllbGROYW1lKVxuICAgICAgICAgICAgKSkgfHxcbiAgICAgICAgKGNvbHVtbk9sZE5hbWUgJiZcbiAgICAgICAgICAgIGNoYW5nZUNhc2UuY2FtZWxDYXNlKGNvbHVtbk9sZE5hbWUpID09PVxuICAgICAgICAgICAgICAgIGNoYW5nZUNhc2UuY2FtZWxDYXNlKGZpZWxkTmFtZSkpO1xuICAgIGlmICghdmFsaWROYW1lQ29uZGl0aW9uKCkpIHtcbiAgICAgICAgZmllbGROYW1lICs9IFwiX1wiO1xuICAgICAgICBmb3IgKFxuICAgICAgICAgICAgbGV0IGkgPSAyO1xuICAgICAgICAgICAgaSA8PSBlbnRpdHkuY29sdW1ucy5sZW5ndGggKyBlbnRpdHkucmVsYXRpb25zLmxlbmd0aDtcbiAgICAgICAgICAgIGkrK1xuICAgICAgICApIHtcbiAgICAgICAgICAgIGZpZWxkTmFtZSA9XG4gICAgICAgICAgICAgICAgZmllbGROYW1lLnN1YnN0cmluZygwLCBmaWVsZE5hbWUubGVuZ3RoIC0gaS50b1N0cmluZygpLmxlbmd0aCkgK1xuICAgICAgICAgICAgICAgIGkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGlmICh2YWxpZE5hbWVDb25kaXRpb24oKSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaWVsZE5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlTG9jYWxGaWxlKGZpbGVOYW1lOiBzdHJpbmcpOiBhbnkge1xuICAgIHRyeSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBnbG9iYWwtcmVxdWlyZSwgaW1wb3J0L25vLWR5bmFtaWMtcmVxdWlyZSwgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xuICAgICAgICByZXR1cm4gcmVxdWlyZShmaWxlTmFtZSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmICghcGF0aC5pc0Fic29sdXRlKGZpbGVOYW1lKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGdsb2JhbC1yZXF1aXJlLCBpbXBvcnQvbm8tZHluYW1pYy1yZXF1aXJlLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXG4gICAgICAgICAgICByZXR1cm4gcmVxdWlyZShwYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgZmlsZU5hbWUpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxufVxuIl19