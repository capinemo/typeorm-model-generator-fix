"use strict";function cov_d2b8re1e8(){var path="/home/nemo/work/github/typeorm-model-generator/src/IGenerationOptions.ts";var hash="17319b9af988b58abfe8d00483e0e308fb1e8e5a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nemo/work/github/typeorm-model-generator/src/IGenerationOptions.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:13},end:{line:3,column:26}},"2":{start:{line:4,column:13},end:{line:4,column:28}},"3":{start:{line:5,column:0},end:{line:8,column:2}},"4":{start:{line:10,column:30},end:{line:28,column:5}},"5":{start:{line:29,column:4},end:{line:29,column:29}},"6":{start:{line:31,column:0},end:{line:31,column:66}}},fnMap:{"0":{name:"getDefaultGenerationOptions",decl:{start:{line:9,column:9},end:{line:9,column:36}},loc:{start:{line:9,column:39},end:{line:30,column:1}},line:9}},branchMap:{"0":{loc:{start:{line:17,column:20},end:{line:17,column:53}},type:"cond-expr",locations:[{start:{line:17,column:40},end:{line:17,column:44}},{start:{line:17,column:47},end:{line:17,column:53}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,file:"/home/nemo/work/github/typeorm-model-generator/src/IGenerationOptions.ts",sources:["/home/nemo/work/github/typeorm-model-generator/src/IGenerationOptions.ts"],names:[],mappings:";;AAAA,2BAAyB;AAEzB,6BAA8B;AAyBjB,QAAA,YAAY,GAAG;IACxB,EAAE,EAAE,IAAI;IACR,IAAI,EAAE,MAAM;CACf,CAAC;AAEF,SAAgB,2BAA2B;IACvC,MAAM,iBAAiB,GAAuB;QAC1C,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC;QAClD,cAAc,EAAE,IAAI;QACpB,SAAS,EAAE,KAAK;QAChB,eAAe,EAAE,QAAQ;QACzB,iBAAiB,EAAE,QAAQ;QAC3B,mBAAmB,EAAE,OAAO;QAC5B,UAAU,EAAE,QAAG,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;QACxC,kBAAkB,EAAE,MAAM;QAC1B,IAAI,EAAE,KAAK;QACX,YAAY,EAAE,KAAK;QACnB,mBAAmB,EAAE,KAAK;QAC1B,wBAAwB,EAAE,EAAE;QAC5B,WAAW,EAAE,KAAK;QAClB,UAAU,EAAE,MAAM;QAClB,UAAU,EAAE,KAAK;QACjB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,OAAO;KACtB,CAAC;IACF,OAAO,iBAAiB,CAAC;AAC7B,CAAC;AArBD,kEAqBC",sourcesContent:["import { EOL } from \"os\";\n\nimport path = require(\"path\");\n\n// TODO: change name\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport default interface IGenerationOptions {\n    resultsPath: string;\n    pluralizeNames: boolean;\n    noConfigs: boolean;\n    convertCaseFile: \"pascal\" | \"param\" | \"camel\" | \"none\";\n    convertCaseEntity: \"pascal\" | \"camel\" | \"none\";\n    convertCaseProperty: \"pascal\" | \"camel\" | \"none\";\n    convertEol: \"LF\" | \"CRLF\";\n    propertyVisibility: \"public\" | \"protected\" | \"private\" | \"none\";\n    lazy: boolean;\n    activeRecord: boolean;\n    generateConstructor: boolean;\n    customNamingStrategyPath: string;\n    relationIds: boolean;\n    strictMode: \"none\" | \"?\" | \"!\";\n    skipSchema: boolean;\n    indexFile: boolean;\n    exportType: \"named\" | \"default\";\n}\n\nexport const eolConverter = {\n    LF: \"\\n\",\n    CRLF: \"\\r\\n\",\n};\n\nexport function getDefaultGenerationOptions(): IGenerationOptions {\n    const generationOptions: IGenerationOptions = {\n        resultsPath: path.resolve(process.cwd(), \"output\"),\n        pluralizeNames: true,\n        noConfigs: false,\n        convertCaseFile: \"pascal\",\n        convertCaseEntity: \"pascal\",\n        convertCaseProperty: \"camel\",\n        convertEol: EOL === \"\\n\" ? \"LF\" : \"CRLF\",\n        propertyVisibility: \"none\",\n        lazy: false,\n        activeRecord: false,\n        generateConstructor: false,\n        customNamingStrategyPath: \"\",\n        relationIds: false,\n        strictMode: \"none\",\n        skipSchema: false,\n        indexFile: false,\n        exportType: \"named\",\n    };\n    return generationOptions;\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"17319b9af988b58abfe8d00483e0e308fb1e8e5a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_d2b8re1e8=function(){return actualCoverage;};return actualCoverage;}cov_d2b8re1e8();cov_d2b8re1e8().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const os_1=(cov_d2b8re1e8().s[1]++,require("os"));const path=(cov_d2b8re1e8().s[2]++,require("path"));cov_d2b8re1e8().s[3]++;exports.eolConverter={LF:"\n",CRLF:"\r\n"};function getDefaultGenerationOptions(){cov_d2b8re1e8().f[0]++;const generationOptions=(cov_d2b8re1e8().s[4]++,{resultsPath:path.resolve(process.cwd(),"output"),pluralizeNames:true,noConfigs:false,convertCaseFile:"pascal",convertCaseEntity:"pascal",convertCaseProperty:"camel",convertEol:os_1.EOL==="\n"?(cov_d2b8re1e8().b[0][0]++,"LF"):(cov_d2b8re1e8().b[0][1]++,"CRLF"),propertyVisibility:"none",lazy:false,activeRecord:false,generateConstructor:false,customNamingStrategyPath:"",relationIds:false,strictMode:"none",skipSchema:false,indexFile:false,exportType:"named"});cov_d2b8re1e8().s[5]++;return generationOptions;}cov_d2b8re1e8().s[6]++;exports.getDefaultGenerationOptions=getDefaultGenerationOptions;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvbmVtby93b3JrL2dpdGh1Yi90eXBlb3JtLW1vZGVsLWdlbmVyYXRvci9zcmMvSUdlbmVyYXRpb25PcHRpb25zLnRzIiwic291cmNlcyI6WyIvaG9tZS9uZW1vL3dvcmsvZ2l0aHViL3R5cGVvcm0tbW9kZWwtZ2VuZXJhdG9yL3NyYy9JR2VuZXJhdGlvbk9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQkFBeUI7QUFFekIsNkJBQThCO0FBeUJqQixRQUFBLFlBQVksR0FBRztJQUN4QixFQUFFLEVBQUUsSUFBSTtJQUNSLElBQUksRUFBRSxNQUFNO0NBQ2YsQ0FBQztBQUVGLFNBQWdCLDJCQUEyQjtJQUN2QyxNQUFNLGlCQUFpQixHQUF1QjtRQUMxQyxXQUFXLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDO1FBQ2xELGNBQWMsRUFBRSxJQUFJO1FBQ3BCLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLGVBQWUsRUFBRSxRQUFRO1FBQ3pCLGlCQUFpQixFQUFFLFFBQVE7UUFDM0IsbUJBQW1CLEVBQUUsT0FBTztRQUM1QixVQUFVLEVBQUUsUUFBRyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNO1FBQ3hDLGtCQUFrQixFQUFFLE1BQU07UUFDMUIsSUFBSSxFQUFFLEtBQUs7UUFDWCxZQUFZLEVBQUUsS0FBSztRQUNuQixtQkFBbUIsRUFBRSxLQUFLO1FBQzFCLHdCQUF3QixFQUFFLEVBQUU7UUFDNUIsV0FBVyxFQUFFLEtBQUs7UUFDbEIsVUFBVSxFQUFFLE1BQU07UUFDbEIsVUFBVSxFQUFFLEtBQUs7UUFDakIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsVUFBVSxFQUFFLE9BQU87S0FDdEIsQ0FBQztJQUNGLE9BQU8saUJBQWlCLENBQUM7QUFDN0IsQ0FBQztBQXJCRCxrRUFxQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFT0wgfSBmcm9tIFwib3NcIjtcblxuaW1wb3J0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcblxuLy8gVE9ETzogY2hhbmdlIG5hbWVcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9pbnRlcmZhY2UtbmFtZS1wcmVmaXhcbmV4cG9ydCBkZWZhdWx0IGludGVyZmFjZSBJR2VuZXJhdGlvbk9wdGlvbnMge1xuICAgIHJlc3VsdHNQYXRoOiBzdHJpbmc7XG4gICAgcGx1cmFsaXplTmFtZXM6IGJvb2xlYW47XG4gICAgbm9Db25maWdzOiBib29sZWFuO1xuICAgIGNvbnZlcnRDYXNlRmlsZTogXCJwYXNjYWxcIiB8IFwicGFyYW1cIiB8IFwiY2FtZWxcIiB8IFwibm9uZVwiO1xuICAgIGNvbnZlcnRDYXNlRW50aXR5OiBcInBhc2NhbFwiIHwgXCJjYW1lbFwiIHwgXCJub25lXCI7XG4gICAgY29udmVydENhc2VQcm9wZXJ0eTogXCJwYXNjYWxcIiB8IFwiY2FtZWxcIiB8IFwibm9uZVwiO1xuICAgIGNvbnZlcnRFb2w6IFwiTEZcIiB8IFwiQ1JMRlwiO1xuICAgIHByb3BlcnR5VmlzaWJpbGl0eTogXCJwdWJsaWNcIiB8IFwicHJvdGVjdGVkXCIgfCBcInByaXZhdGVcIiB8IFwibm9uZVwiO1xuICAgIGxhenk6IGJvb2xlYW47XG4gICAgYWN0aXZlUmVjb3JkOiBib29sZWFuO1xuICAgIGdlbmVyYXRlQ29uc3RydWN0b3I6IGJvb2xlYW47XG4gICAgY3VzdG9tTmFtaW5nU3RyYXRlZ3lQYXRoOiBzdHJpbmc7XG4gICAgcmVsYXRpb25JZHM6IGJvb2xlYW47XG4gICAgc3RyaWN0TW9kZTogXCJub25lXCIgfCBcIj9cIiB8IFwiIVwiO1xuICAgIHNraXBTY2hlbWE6IGJvb2xlYW47XG4gICAgaW5kZXhGaWxlOiBib29sZWFuO1xuICAgIGV4cG9ydFR5cGU6IFwibmFtZWRcIiB8IFwiZGVmYXVsdFwiO1xufVxuXG5leHBvcnQgY29uc3QgZW9sQ29udmVydGVyID0ge1xuICAgIExGOiBcIlxcblwiLFxuICAgIENSTEY6IFwiXFxyXFxuXCIsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdEdlbmVyYXRpb25PcHRpb25zKCk6IElHZW5lcmF0aW9uT3B0aW9ucyB7XG4gICAgY29uc3QgZ2VuZXJhdGlvbk9wdGlvbnM6IElHZW5lcmF0aW9uT3B0aW9ucyA9IHtcbiAgICAgICAgcmVzdWx0c1BhdGg6IHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCBcIm91dHB1dFwiKSxcbiAgICAgICAgcGx1cmFsaXplTmFtZXM6IHRydWUsXG4gICAgICAgIG5vQ29uZmlnczogZmFsc2UsXG4gICAgICAgIGNvbnZlcnRDYXNlRmlsZTogXCJwYXNjYWxcIixcbiAgICAgICAgY29udmVydENhc2VFbnRpdHk6IFwicGFzY2FsXCIsXG4gICAgICAgIGNvbnZlcnRDYXNlUHJvcGVydHk6IFwiY2FtZWxcIixcbiAgICAgICAgY29udmVydEVvbDogRU9MID09PSBcIlxcblwiID8gXCJMRlwiIDogXCJDUkxGXCIsXG4gICAgICAgIHByb3BlcnR5VmlzaWJpbGl0eTogXCJub25lXCIsXG4gICAgICAgIGxhenk6IGZhbHNlLFxuICAgICAgICBhY3RpdmVSZWNvcmQ6IGZhbHNlLFxuICAgICAgICBnZW5lcmF0ZUNvbnN0cnVjdG9yOiBmYWxzZSxcbiAgICAgICAgY3VzdG9tTmFtaW5nU3RyYXRlZ3lQYXRoOiBcIlwiLFxuICAgICAgICByZWxhdGlvbklkczogZmFsc2UsXG4gICAgICAgIHN0cmljdE1vZGU6IFwibm9uZVwiLFxuICAgICAgICBza2lwU2NoZW1hOiBmYWxzZSxcbiAgICAgICAgaW5kZXhGaWxlOiBmYWxzZSxcbiAgICAgICAgZXhwb3J0VHlwZTogXCJuYW1lZFwiLFxuICAgIH07XG4gICAgcmV0dXJuIGdlbmVyYXRpb25PcHRpb25zO1xufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL25lbW8vd29yay9naXRodWIvdHlwZW9ybS1tb2RlbC1nZW5lcmF0b3Ivc3JjL0lHZW5lcmF0aW9uT3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoibXBJQUFBLEtBQUEsQ0FBQSxJQUFBLHlCQUFBLE9BQUEsQ0FBQSxJQUFBLENBQUEsQ0FBQSxDQUVBLEtBQUEsQ0FBQSxJQUFBLHlCQUFBLE9BQUEsQ0FBQSxNQUFBLENBQUEsQ0FBQSxDLHVCQXlCYSxPQUFBLENBQUEsWUFBQSxDQUFlLENBQ3hCLEVBQUUsQ0FBRSxJQURvQixDQUV4QixJQUFJLENBQUUsTUFGa0IsQ0FBZixDQUtiLFFBQWdCLENBQUEsMkJBQWhCLEVBQTJDLHdCQUN2QyxLQUFNLENBQUEsaUJBQWlCLHlCQUF1QixDQUMxQyxXQUFXLENBQUUsSUFBSSxDQUFDLE9BQUwsQ0FBYSxPQUFPLENBQUMsR0FBUixFQUFiLENBQTRCLFFBQTVCLENBRDZCLENBRTFDLGNBQWMsQ0FBRSxJQUYwQixDQUcxQyxTQUFTLENBQUUsS0FIK0IsQ0FJMUMsZUFBZSxDQUFFLFFBSnlCLENBSzFDLGlCQUFpQixDQUFFLFFBTHVCLENBTTFDLG1CQUFtQixDQUFFLE9BTnFCLENBTzFDLFVBQVUsQ0FBRSxJQUFBLENBQUEsR0FBQSxHQUFRLElBQVIsNEJBQWUsSUFBZiw2QkFBc0IsTUFBdEIsQ0FQOEIsQ0FRMUMsa0JBQWtCLENBQUUsTUFSc0IsQ0FTMUMsSUFBSSxDQUFFLEtBVG9DLENBVTFDLFlBQVksQ0FBRSxLQVY0QixDQVcxQyxtQkFBbUIsQ0FBRSxLQVhxQixDQVkxQyx3QkFBd0IsQ0FBRSxFQVpnQixDQWExQyxXQUFXLENBQUUsS0FiNkIsQ0FjMUMsVUFBVSxDQUFFLE1BZDhCLENBZTFDLFVBQVUsQ0FBRSxLQWY4QixDQWdCMUMsU0FBUyxDQUFFLEtBaEIrQixDQWlCMUMsVUFBVSxDQUFFLE9BakI4QixDQUF2QixDQUF2QixDQUR1Qyx1QkFvQnZDLE1BQU8sQ0FBQSxpQkFBUCxDQUNILEMsdUJBckJELE9BQUEsQ0FBQSwyQkFBQSxDQUFBLDJCQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFT0wgfSBmcm9tIFwib3NcIjtcblxuaW1wb3J0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcblxuLy8gVE9ETzogY2hhbmdlIG5hbWVcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9pbnRlcmZhY2UtbmFtZS1wcmVmaXhcbmV4cG9ydCBkZWZhdWx0IGludGVyZmFjZSBJR2VuZXJhdGlvbk9wdGlvbnMge1xuICAgIHJlc3VsdHNQYXRoOiBzdHJpbmc7XG4gICAgcGx1cmFsaXplTmFtZXM6IGJvb2xlYW47XG4gICAgbm9Db25maWdzOiBib29sZWFuO1xuICAgIGNvbnZlcnRDYXNlRmlsZTogXCJwYXNjYWxcIiB8IFwicGFyYW1cIiB8IFwiY2FtZWxcIiB8IFwibm9uZVwiO1xuICAgIGNvbnZlcnRDYXNlRW50aXR5OiBcInBhc2NhbFwiIHwgXCJjYW1lbFwiIHwgXCJub25lXCI7XG4gICAgY29udmVydENhc2VQcm9wZXJ0eTogXCJwYXNjYWxcIiB8IFwiY2FtZWxcIiB8IFwibm9uZVwiO1xuICAgIGNvbnZlcnRFb2w6IFwiTEZcIiB8IFwiQ1JMRlwiO1xuICAgIHByb3BlcnR5VmlzaWJpbGl0eTogXCJwdWJsaWNcIiB8IFwicHJvdGVjdGVkXCIgfCBcInByaXZhdGVcIiB8IFwibm9uZVwiO1xuICAgIGxhenk6IGJvb2xlYW47XG4gICAgYWN0aXZlUmVjb3JkOiBib29sZWFuO1xuICAgIGdlbmVyYXRlQ29uc3RydWN0b3I6IGJvb2xlYW47XG4gICAgY3VzdG9tTmFtaW5nU3RyYXRlZ3lQYXRoOiBzdHJpbmc7XG4gICAgcmVsYXRpb25JZHM6IGJvb2xlYW47XG4gICAgc3RyaWN0TW9kZTogXCJub25lXCIgfCBcIj9cIiB8IFwiIVwiO1xuICAgIHNraXBTY2hlbWE6IGJvb2xlYW47XG4gICAgaW5kZXhGaWxlOiBib29sZWFuO1xuICAgIGV4cG9ydFR5cGU6IFwibmFtZWRcIiB8IFwiZGVmYXVsdFwiO1xufVxuXG5leHBvcnQgY29uc3QgZW9sQ29udmVydGVyID0ge1xuICAgIExGOiBcIlxcblwiLFxuICAgIENSTEY6IFwiXFxyXFxuXCIsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdEdlbmVyYXRpb25PcHRpb25zKCk6IElHZW5lcmF0aW9uT3B0aW9ucyB7XG4gICAgY29uc3QgZ2VuZXJhdGlvbk9wdGlvbnM6IElHZW5lcmF0aW9uT3B0aW9ucyA9IHtcbiAgICAgICAgcmVzdWx0c1BhdGg6IHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCBcIm91dHB1dFwiKSxcbiAgICAgICAgcGx1cmFsaXplTmFtZXM6IHRydWUsXG4gICAgICAgIG5vQ29uZmlnczogZmFsc2UsXG4gICAgICAgIGNvbnZlcnRDYXNlRmlsZTogXCJwYXNjYWxcIixcbiAgICAgICAgY29udmVydENhc2VFbnRpdHk6IFwicGFzY2FsXCIsXG4gICAgICAgIGNvbnZlcnRDYXNlUHJvcGVydHk6IFwiY2FtZWxcIixcbiAgICAgICAgY29udmVydEVvbDogRU9MID09PSBcIlxcblwiID8gXCJMRlwiIDogXCJDUkxGXCIsXG4gICAgICAgIHByb3BlcnR5VmlzaWJpbGl0eTogXCJub25lXCIsXG4gICAgICAgIGxhenk6IGZhbHNlLFxuICAgICAgICBhY3RpdmVSZWNvcmQ6IGZhbHNlLFxuICAgICAgICBnZW5lcmF0ZUNvbnN0cnVjdG9yOiBmYWxzZSxcbiAgICAgICAgY3VzdG9tTmFtaW5nU3RyYXRlZ3lQYXRoOiBcIlwiLFxuICAgICAgICByZWxhdGlvbklkczogZmFsc2UsXG4gICAgICAgIHN0cmljdE1vZGU6IFwibm9uZVwiLFxuICAgICAgICBza2lwU2NoZW1hOiBmYWxzZSxcbiAgICAgICAgaW5kZXhGaWxlOiBmYWxzZSxcbiAgICAgICAgZXhwb3J0VHlwZTogXCJuYW1lZFwiLFxuICAgIH07XG4gICAgcmV0dXJuIGdlbmVyYXRpb25PcHRpb25zO1xufVxuIl19