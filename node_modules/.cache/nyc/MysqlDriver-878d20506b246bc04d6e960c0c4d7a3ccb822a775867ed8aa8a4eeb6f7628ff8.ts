"use strict";function cov_tjsrk2ukb(){var path="/home/nemo/work/github/typeorm-model-generator/src/drivers/MysqlDriver.ts";var hash="ccd87e39ec7e333843718707323d98e1960c9c7e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nemo/work/github/typeorm-model-generator/src/drivers/MysqlDriver.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:22},end:{line:3,column:65}},"2":{start:{line:4,column:18},end:{line:4,column:37}},"3":{start:{line:5,column:25},end:{line:5,column:52}},"4":{start:{line:8,column:8},end:{line:8,column:16}},"5":{start:{line:9,column:8},end:{line:11,column:28}},"6":{start:{line:12,column:8},end:{line:12,column:34}},"7":{start:{line:13,column:8},end:{line:13,column:33}},"8":{start:{line:14,column:8},end:{line:14,column:35}},"9":{start:{line:15,column:8},end:{line:15,column:33}},"10":{start:{line:16,column:8},end:{line:25,column:10}},"11":{start:{line:17,column:35},end:{line:19,column:20}},"12":{start:{line:20,column:29},end:{line:23,column:102}},"13":{start:{line:24,column:12},end:{line:24,column:28}},"14":{start:{line:26,column:8},end:{line:33,column:9}},"15":{start:{line:28,column:12},end:{line:28,column:42}},"16":{start:{line:31,column:12},end:{line:31,column:49}},"17":{start:{line:32,column:12},end:{line:32,column:24}},"18":{start:{line:36,column:25},end:{line:40,column:30}},"19":{start:{line:41,column:8},end:{line:230,column:11}},"20":{start:{line:42,column:12},end:{line:229,column:15}},"21":{start:{line:43,column:39},end:{line:43,column:75}},"22":{start:{line:45,column:32},end:{line:45,column:48}},"23":{start:{line:46,column:30},end:{line:46,column:32}},"24":{start:{line:47,column:32},end:{line:49,column:17}},"25":{start:{line:50,column:34},end:{line:50,column:74}},"26":{start:{line:51,column:37},end:{line:51,column:112}},"27":{start:{line:52,column:33},end:{line:52,column:47}},"28":{start:{line:53,column:16},end:{line:54,column:44}},"29":{start:{line:54,column:20},end:{line:54,column:44}},"30":{start:{line:55,column:16},end:{line:56,column:42}},"31":{start:{line:56,column:20},end:{line:56,column:42}},"32":{start:{line:57,column:16},end:{line:58,column:58}},"33":{start:{line:58,column:20},end:{line:58,column:58}},"34":{start:{line:59,column:16},end:{line:60,column:44}},"35":{start:{line:60,column:20},end:{line:60,column:44}},"36":{start:{line:61,column:16},end:{line:200,column:17}},"37":{start:{line:63,column:24},end:{line:63,column:43}},"38":{start:{line:64,column:24},end:{line:64,column:30}},"39":{start:{line:66,column:24},end:{line:71,column:25}},"40":{start:{line:67,column:28},end:{line:67,column:48}},"41":{start:{line:70,column:28},end:{line:70,column:47}},"42":{start:{line:72,column:24},end:{line:72,column:30}},"43":{start:{line:74,column:24},end:{line:80,column:25}},"44":{start:{line:75,column:28},end:{line:75,column:46}},"45":{start:{line:76,column:28},end:{line:76,column:48}},"46":{start:{line:79,column:28},end:{line:79,column:47}},"47":{start:{line:81,column:24},end:{line:81,column:30}},"48":{start:{line:83,column:24},end:{line:83,column:43}},"49":{start:{line:84,column:24},end:{line:84,column:30}},"50":{start:{line:86,column:24},end:{line:86,column:43}},"51":{start:{line:87,column:24},end:{line:87,column:30}},"52":{start:{line:89,column:24},end:{line:89,column:43}},"53":{start:{line:90,column:24},end:{line:90,column:30}},"54":{start:{line:92,column:24},end:{line:92,column:43}},"55":{start:{line:93,column:24},end:{line:93,column:30}},"56":{start:{line:95,column:24},end:{line:95,column:43}},"57":{start:{line:96,column:24},end:{line:96,column:30}},"58":{start:{line:98,column:24},end:{line:98,column:43}},"59":{start:{line:99,column:24},end:{line:99,column:30}},"60":{start:{line:101,column:24},end:{line:101,column:43}},"61":{start:{line:102,column:24},end:{line:102,column:30}},"62":{start:{line:104,column:24},end:{line:104,column:41}},"63":{start:{line:105,column:24},end:{line:105,column:30}},"64":{start:{line:107,column:24},end:{line:107,column:41}},"65":{start:{line:108,column:24},end:{line:108,column:30}},"66":{start:{line:110,column:24},end:{line:110,column:43}},"67":{start:{line:111,column:24},end:{line:111,column:30}},"68":{start:{line:113,column:24},end:{line:113,column:43}},"69":{start:{line:114,column:24},end:{line:114,column:30}},"70":{start:{line:116,column:24},end:{line:116,column:43}},"71":{start:{line:117,column:24},end:{line:117,column:30}},"72":{start:{line:119,column:24},end:{line:119,column:43}},"73":{start:{line:120,column:24},end:{line:120,column:30}},"74":{start:{line:122,column:24},end:{line:122,column:43}},"75":{start:{line:123,column:24},end:{line:123,column:30}},"76":{start:{line:125,column:24},end:{line:125,column:43}},"77":{start:{line:126,column:24},end:{line:126,column:30}},"78":{start:{line:128,column:24},end:{line:128,column:43}},"79":{start:{line:129,column:24},end:{line:129,column:30}},"80":{start:{line:131,column:24},end:{line:131,column:43}},"81":{start:{line:132,column:24},end:{line:132,column:30}},"82":{start:{line:134,column:24},end:{line:134,column:43}},"83":{start:{line:135,column:24},end:{line:135,column:30}},"84":{start:{line:137,column:24},end:{line:137,column:43}},"85":{start:{line:138,column:24},end:{line:138,column:30}},"86":{start:{line:140,column:24},end:{line:140,column:43}},"87":{start:{line:141,column:24},end:{line:141,column:30}},"88":{start:{line:143,column:24},end:{line:143,column:43}},"89":{start:{line:144,column:24},end:{line:144,column:30}},"90":{start:{line:146,column:24},end:{line:148,column:55}},"91":{start:{line:149,column:24},end:{line:151,column:40}},"92":{start:{line:152,column:24},end:{line:152,column:30}},"93":{start:{line:154,column:24},end:{line:156,column:60}},"94":{start:{line:157,column:24},end:{line:159,column:40}},"95":{start:{line:160,column:24},end:{line:160,column:30}},"96":{start:{line:162,column:24},end:{line:162,column:43}},"97":{start:{line:163,column:24},end:{line:163,column:30}},"98":{start:{line:165,column:24},end:{line:165,column:43}},"99":{start:{line:166,column:24},end:{line:166,column:30}},"100":{start:{line:168,column:24},end:{line:168,column:43}},"101":{start:{line:169,column:24},end:{line:169,column:30}},"102":{start:{line:171,column:24},end:{line:171,column:43}},"103":{start:{line:172,column:24},end:{line:172,column:30}},"104":{start:{line:174,column:24},end:{line:174,column:43}},"105":{start:{line:175,column:24},end:{line:175,column:30}},"106":{start:{line:177,column:24},end:{line:177,column:43}},"107":{start:{line:178,column:24},end:{line:178,column:30}},"108":{start:{line:180,column:24},end:{line:180,column:43}},"109":{start:{line:181,column:24},end:{line:181,column:30}},"110":{start:{line:183,column:24},end:{line:183,column:43}},"111":{start:{line:184,column:24},end:{line:184,column:30}},"112":{start:{line:186,column:24},end:{line:186,column:43}},"113":{start:{line:187,column:24},end:{line:187,column:30}},"114":{start:{line:189,column:24},end:{line:189,column:43}},"115":{start:{line:190,column:24},end:{line:190,column:30}},"116":{start:{line:193,column:24},end:{line:193,column:58}},"117":{start:{line:194,column:24},end:{line:194,column:43}},"118":{start:{line:195,column:24},end:{line:195,column:30}},"119":{start:{line:197,column:24},end:{line:197,column:57}},"120":{start:{line:198,column:24},end:{line:198,column:150}},"121":{start:{line:199,column:24},end:{line:199,column:30}},"122":{start:{line:201,column:16},end:{line:208,column:17}},"123":{start:{line:201,column:62},end:{line:201,column:78}},"124":{start:{line:202,column:20},end:{line:204,column:21}},"125":{start:{line:203,column:24},end:{line:203,column:67}},"126":{start:{line:205,column:20},end:{line:207,column:21}},"127":{start:{line:206,column:24},end:{line:206,column:59}},"128":{start:{line:209,column:16},end:{line:214,column:17}},"129":{start:{line:209,column:59},end:{line:209,column:75}},"130":{start:{line:210,column:20},end:{line:213,column:40}},"131":{start:{line:215,column:16},end:{line:220,column:17}},"132":{start:{line:215,column:58},end:{line:215,column:99}},"133":{start:{line:216,column:20},end:{line:219,column:40}},"134":{start:{line:221,column:16},end:{line:228,column:19}},"135":{start:{line:231,column:8},end:{line:231,column:24}},"136":{start:{line:234,column:25},end:{line:237,column:86}},"137":{start:{line:238,column:8},end:{line:257,column:11}},"138":{start:{line:239,column:34},end:{line:239,column:101}},"139":{start:{line:239,column:65},end:{line:239,column:100}},"140":{start:{line:240,column:31},end:{line:240,column:77}},"141":{start:{line:240,column:64},end:{line:240,column:75}},"142":{start:{line:241,column:12},end:{line:256,column:15}},"143":{start:{line:242,column:32},end:{line:242,column:86}},"144":{start:{line:242,column:60},end:{line:242,column:85}},"145":{start:{line:243,column:34},end:{line:247,column:17}},"146":{start:{line:248,column:16},end:{line:249,column:45}},"147":{start:{line:249,column:20},end:{line:249,column:45}},"148":{start:{line:250,column:16},end:{line:251,column:52}},"149":{start:{line:251,column:20},end:{line:251,column:52}},"150":{start:{line:252,column:16},end:{line:254,column:19}},"151":{start:{line:253,column:20},end:{line:253,column:62}},"152":{start:{line:255,column:16},end:{line:255,column:44}},"153":{start:{line:258,column:8},end:{line:258,column:24}},"154":{start:{line:261,column:25},end:{line:278,column:14}},"155":{start:{line:279,column:30},end:{line:279,column:32}},"156":{start:{line:280,column:29},end:{line:280,column:70}},"157":{start:{line:280,column:57},end:{line:280,column:68}},"158":{start:{line:281,column:8},end:{line:306,column:11}},"159":{start:{line:282,column:25},end:{line:282,column:75}},"160":{start:{line:282,column:48},end:{line:282,column:74}},"161":{start:{line:283,column:31},end:{line:283,column:94}},"162":{start:{line:283,column:52},end:{line:283,column:93}},"163":{start:{line:284,column:33},end:{line:284,column:92}},"164":{start:{line:284,column:54},end:{line:284,column:91}},"165":{start:{line:285,column:12},end:{line:288,column:13}},"166":{start:{line:286,column:16},end:{line:286,column:160}},"167":{start:{line:287,column:16},end:{line:287,column:23}},"168":{start:{line:289,column:29},end:{line:294,column:13}},"169":{start:{line:295,column:12},end:{line:297,column:13}},"170":{start:{line:296,column:16},end:{line:296,column:53}},"171":{start:{line:298,column:12},end:{line:300,column:13}},"172":{start:{line:299,column:16},end:{line:299,column:53}},"173":{start:{line:301,column:12},end:{line:304,column:15}},"174":{start:{line:302,column:16},end:{line:302,column:65}},"175":{start:{line:303,column:16},end:{line:303,column:77}},"176":{start:{line:305,column:12},end:{line:305,column:41}},"177":{start:{line:307,column:23},end:{line:307,column:111}},"178":{start:{line:308,column:8},end:{line:308,column:22}},"179":{start:{line:311,column:24},end:{line:321,column:10}},"180":{start:{line:312,column:12},end:{line:320,column:15}},"181":{start:{line:313,column:16},end:{line:319,column:17}},"182":{start:{line:314,column:20},end:{line:314,column:34}},"183":{start:{line:317,column:20},end:{line:317,column:114}},"184":{start:{line:318,column:20},end:{line:318,column:32}},"185":{start:{line:322,column:8},end:{line:324,column:9}},"186":{start:{line:323,column:12},end:{line:323,column:26}},"187":{start:{line:327,column:29},end:{line:327,column:72}},"188":{start:{line:329,column:8},end:{line:351,column:9}},"189":{start:{line:330,column:12},end:{line:340,column:14}},"190":{start:{line:343,column:12},end:{line:350,column:14}},"191":{start:{line:352,column:24},end:{line:363,column:10}},"192":{start:{line:353,column:12},end:{line:353,column:66}},"193":{start:{line:354,column:12},end:{line:362,column:15}},"194":{start:{line:355,column:16},end:{line:361,column:17}},"195":{start:{line:356,column:20},end:{line:356,column:34}},"196":{start:{line:359,column:20},end:{line:359,column:109}},"197":{start:{line:360,column:20},end:{line:360,column:32}},"198":{start:{line:364,column:8},end:{line:364,column:22}},"199":{start:{line:367,column:8},end:{line:367,column:60}},"200":{start:{line:370,column:8},end:{line:370,column:48}},"201":{start:{line:373,column:8},end:{line:373,column:58}},"202":{start:{line:376,column:21},end:{line:376,column:77}},"203":{start:{line:377,column:8},end:{line:377,column:31}},"204":{start:{line:380,column:20},end:{line:380,column:22}},"205":{start:{line:381,column:22},end:{line:381,column:48}},"206":{start:{line:382,column:23},end:{line:382,column:39}},"207":{start:{line:383,column:24},end:{line:389,column:10}},"208":{start:{line:384,column:12},end:{line:386,column:15}},"209":{start:{line:385,column:16},end:{line:385,column:32}},"210":{start:{line:387,column:12},end:{line:387,column:53}},"211":{start:{line:387,column:40},end:{line:387,column:51}},"212":{start:{line:388,column:12},end:{line:388,column:50}},"213":{start:{line:388,column:35},end:{line:388,column:48}},"214":{start:{line:390,column:8},end:{line:390,column:22}},"215":{start:{line:391,column:8},end:{line:391,column:19}},"216":{start:{line:394,column:27},end:{line:394,column:33}},"217":{start:{line:395,column:8},end:{line:397,column:9}},"218":{start:{line:396,column:12},end:{line:396,column:29}},"219":{start:{line:398,column:8},end:{line:400,column:9}},"220":{start:{line:399,column:12},end:{line:399,column:47}},"221":{start:{line:401,column:8},end:{line:404,column:9}},"222":{start:{line:403,column:12},end:{line:403,column:45}},"223":{start:{line:405,column:8},end:{line:407,column:9}},"224":{start:{line:406,column:12},end:{line:406,column:70}},"225":{start:{line:408,column:8},end:{line:408,column:43}},"226":{start:{line:411,column:0},end:{line:411,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:4},end:{line:7,column:5}},loc:{start:{line:7,column:18},end:{line:34,column:5}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:33},end:{line:16,column:34}},loc:{start:{line:16,column:72},end:{line:25,column:9}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:4},end:{line:35,column:5}},loc:{start:{line:35,column:58},end:{line:232,column:5}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:25},end:{line:41,column:26}},loc:{start:{line:41,column:34},end:{line:230,column:9}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:43,column:24},end:{line:43,column:25}},loc:{start:{line:43,column:39},end:{line:43,column:75}},line:43},"5":{name:"(anonymous_5)",decl:{start:{line:44,column:25},end:{line:44,column:26}},loc:{start:{line:44,column:35},end:{line:229,column:13}},line:44},"6":{name:"(anonymous_6)",decl:{start:{line:201,column:55},end:{line:201,column:56}},loc:{start:{line:201,column:62},end:{line:201,column:78}},line:201},"7":{name:"(anonymous_7)",decl:{start:{line:209,column:52},end:{line:209,column:53}},loc:{start:{line:209,column:59},end:{line:209,column:75}},line:209},"8":{name:"(anonymous_8)",decl:{start:{line:215,column:51},end:{line:215,column:52}},loc:{start:{line:215,column:58},end:{line:215,column:99}},line:215},"9":{name:"(anonymous_9)",decl:{start:{line:233,column:4},end:{line:233,column:5}},loc:{start:{line:233,column:58},end:{line:259,column:5}},line:233},"10":{name:"(anonymous_10)",decl:{start:{line:238,column:25},end:{line:238,column:26}},loc:{start:{line:238,column:34},end:{line:257,column:9}},line:238},"11":{name:"(anonymous_11)",decl:{start:{line:239,column:50},end:{line:239,column:51}},loc:{start:{line:239,column:65},end:{line:239,column:100}},line:239},"12":{name:"(anonymous_12)",decl:{start:{line:240,column:57},end:{line:240,column:58}},loc:{start:{line:240,column:64},end:{line:240,column:75}},line:240},"13":{name:"(anonymous_13)",decl:{start:{line:241,column:31},end:{line:241,column:32}},loc:{start:{line:241,column:46},end:{line:256,column:13}},line:241},"14":{name:"(anonymous_14)",decl:{start:{line:242,column:53},end:{line:242,column:54}},loc:{start:{line:242,column:60},end:{line:242,column:85}},line:242},"15":{name:"(anonymous_15)",decl:{start:{line:252,column:32},end:{line:252,column:33}},loc:{start:{line:252,column:44},end:{line:254,column:17}},line:252},"16":{name:"(anonymous_16)",decl:{start:{line:260,column:4},end:{line:260,column:5}},loc:{start:{line:260,column:69},end:{line:309,column:5}},line:260},"17":{name:"(anonymous_17)",decl:{start:{line:280,column:50},end:{line:280,column:51}},loc:{start:{line:280,column:57},end:{line:280,column:68}},line:280},"18":{name:"(anonymous_18)",decl:{start:{line:281,column:29},end:{line:281,column:30}},loc:{start:{line:281,column:45},end:{line:306,column:9}},line:281},"19":{name:"(anonymous_19)",decl:{start:{line:282,column:41},end:{line:282,column:42}},loc:{start:{line:282,column:48},end:{line:282,column:74}},line:282},"20":{name:"(anonymous_20)",decl:{start:{line:283,column:45},end:{line:283,column:46}},loc:{start:{line:283,column:52},end:{line:283,column:93}},line:283},"21":{name:"(anonymous_21)",decl:{start:{line:284,column:47},end:{line:284,column:48}},loc:{start:{line:284,column:54},end:{line:284,column:91}},line:284},"22":{name:"(anonymous_22)",decl:{start:{line:301,column:25},end:{line:301,column:26}},loc:{start:{line:301,column:34},end:{line:304,column:13}},line:301},"23":{name:"(anonymous_23)",decl:{start:{line:310,column:4},end:{line:310,column:5}},loc:{start:{line:310,column:33},end:{line:325,column:5}},line:310},"24":{name:"(anonymous_24)",decl:{start:{line:311,column:36},end:{line:311,column:37}},loc:{start:{line:311,column:57},end:{line:321,column:9}},line:311},"25":{name:"(anonymous_25)",decl:{start:{line:312,column:32},end:{line:312,column:33}},loc:{start:{line:312,column:41},end:{line:320,column:13}},line:312},"26":{name:"(anonymous_26)",decl:{start:{line:326,column:4},end:{line:326,column:5}},loc:{start:{line:326,column:44},end:{line:365,column:5}},line:326},"27":{name:"(anonymous_27)",decl:{start:{line:352,column:36},end:{line:352,column:37}},loc:{start:{line:352,column:57},end:{line:363,column:9}},line:352},"28":{name:"(anonymous_28)",decl:{start:{line:354,column:36},end:{line:354,column:37}},loc:{start:{line:354,column:45},end:{line:362,column:13}},line:354},"29":{name:"(anonymous_29)",decl:{start:{line:366,column:4},end:{line:366,column:5}},loc:{start:{line:366,column:27},end:{line:368,column:5}},line:366},"30":{name:"(anonymous_30)",decl:{start:{line:369,column:4},end:{line:369,column:5}},loc:{start:{line:369,column:24},end:{line:371,column:5}},line:369},"31":{name:"(anonymous_31)",decl:{start:{line:372,column:4},end:{line:372,column:5}},loc:{start:{line:372,column:25},end:{line:374,column:5}},line:372},"32":{name:"(anonymous_32)",decl:{start:{line:375,column:4},end:{line:375,column:5}},loc:{start:{line:375,column:34},end:{line:378,column:5}},line:375},"33":{name:"(anonymous_33)",decl:{start:{line:379,column:4},end:{line:379,column:5}},loc:{start:{line:379,column:25},end:{line:392,column:5}},line:379},"34":{name:"(anonymous_34)",decl:{start:{line:383,column:36},end:{line:383,column:37}},loc:{start:{line:383,column:57},end:{line:389,column:9}},line:383},"35":{name:"(anonymous_35)",decl:{start:{line:384,column:30},end:{line:384,column:31}},loc:{start:{line:384,column:41},end:{line:386,column:13}},line:384},"36":{name:"(anonymous_36)",decl:{start:{line:387,column:31},end:{line:387,column:32}},loc:{start:{line:387,column:40},end:{line:387,column:51}},line:387},"37":{name:"(anonymous_37)",decl:{start:{line:388,column:29},end:{line:388,column:30}},loc:{start:{line:388,column:35},end:{line:388,column:48}},line:388},"38":{name:"(anonymous_38)",decl:{start:{line:393,column:4},end:{line:393,column:5}},loc:{start:{line:393,column:56},end:{line:409,column:5}},line:393}},branchMap:{"0":{loc:{start:{line:17,column:35},end:{line:19,column:20}},type:"cond-expr",locations:[{start:{line:18,column:18},end:{line:18,column:72}},{start:{line:19,column:18},end:{line:19,column:20}}],line:17},"1":{loc:{start:{line:50,column:34},end:{line:50,column:74}},type:"cond-expr",locations:[{start:{line:50,column:58},end:{line:50,column:62}},{start:{line:50,column:65},end:{line:50,column:74}}],line:50},"2":{loc:{start:{line:53,column:16},end:{line:54,column:44}},type:"if",locations:[{start:{line:53,column:16},end:{line:54,column:44}},{start:{line:53,column:16},end:{line:54,column:44}}],line:53},"3":{loc:{start:{line:55,column:16},end:{line:56,column:42}},type:"if",locations:[{start:{line:55,column:16},end:{line:56,column:42}},{start:{line:55,column:16},end:{line:56,column:42}}],line:55},"4":{loc:{start:{line:57,column:16},end:{line:58,column:58}},type:"if",locations:[{start:{line:57,column:16},end:{line:58,column:58}},{start:{line:57,column:16},end:{line:58,column:58}}],line:57},"5":{loc:{start:{line:59,column:16},end:{line:60,column:44}},type:"if",locations:[{start:{line:59,column:16},end:{line:60,column:44}},{start:{line:59,column:16},end:{line:60,column:44}}],line:59},"6":{loc:{start:{line:61,column:16},end:{line:200,column:17}},type:"switch",locations:[{start:{line:62,column:20},end:{line:64,column:30}},{start:{line:65,column:20},end:{line:72,column:30}},{start:{line:73,column:20},end:{line:81,column:30}},{start:{line:82,column:20},end:{line:84,column:30}},{start:{line:85,column:20},end:{line:87,column:30}},{start:{line:88,column:20},end:{line:90,column:30}},{start:{line:91,column:20},end:{line:93,column:30}},{start:{line:94,column:20},end:{line:96,column:30}},{start:{line:97,column:20},end:{line:99,column:30}},{start:{line:100,column:20},end:{line:102,column:30}},{start:{line:103,column:20},end:{line:105,column:30}},{start:{line:106,column:20},end:{line:108,column:30}},{start:{line:109,column:20},end:{line:111,column:30}},{start:{line:112,column:20},end:{line:114,column:30}},{start:{line:115,column:20},end:{line:117,column:30}},{start:{line:118,column:20},end:{line:120,column:30}},{start:{line:121,column:20},end:{line:123,column:30}},{start:{line:124,column:20},end:{line:126,column:30}},{start:{line:127,column:20},end:{line:129,column:30}},{start:{line:130,column:20},end:{line:132,column:30}},{start:{line:133,column:20},end:{line:135,column:30}},{start:{line:136,column:20},end:{line:138,column:30}},{start:{line:139,column:20},end:{line:141,column:30}},{start:{line:142,column:20},end:{line:144,column:30}},{start:{line:145,column:20},end:{line:152,column:30}},{start:{line:153,column:20},end:{line:160,column:30}},{start:{line:161,column:20},end:{line:163,column:30}},{start:{line:164,column:20},end:{line:166,column:30}},{start:{line:167,column:20},end:{line:169,column:30}},{start:{line:170,column:20},end:{line:172,column:30}},{start:{line:173,column:20},end:{line:175,column:30}},{start:{line:176,column:20},end:{line:178,column:30}},{start:{line:179,column:20},end:{line:181,column:30}},{start:{line:182,column:20},end:{line:184,column:30}},{start:{line:185,column:20},end:{line:187,column:30}},{start:{line:188,column:20},end:{line:190,column:30}},{start:{line:191,column:20},end:{line:191,column:46}},{start:{line:192,column:20},end:{line:195,column:30}},{start:{line:196,column:20},end:{line:199,column:30}}],line:61},"7":{loc:{start:{line:66,column:24},end:{line:71,column:25}},type:"if",locations:[{start:{line:66,column:24},end:{line:71,column:25}},{start:{line:66,column:24},end:{line:71,column:25}}],line:66},"8":{loc:{start:{line:74,column:24},end:{line:80,column:25}},type:"if",locations:[{start:{line:74,column:24},end:{line:80,column:25}},{start:{line:74,column:24},end:{line:80,column:25}}],line:74},"9":{loc:{start:{line:201,column:16},end:{line:208,column:17}},type:"if",locations:[{start:{line:201,column:16},end:{line:208,column:17}},{start:{line:201,column:16},end:{line:208,column:17}}],line:201},"10":{loc:{start:{line:202,column:20},end:{line:204,column:21}},type:"if",locations:[{start:{line:202,column:20},end:{line:204,column:21}},{start:{line:202,column:20},end:{line:204,column:21}}],line:202},"11":{loc:{start:{line:205,column:20},end:{line:207,column:21}},type:"if",locations:[{start:{line:205,column:20},end:{line:207,column:21}},{start:{line:205,column:20},end:{line:207,column:21}}],line:205},"12":{loc:{start:{line:209,column:16},end:{line:214,column:17}},type:"if",locations:[{start:{line:209,column:16},end:{line:214,column:17}},{start:{line:209,column:16},end:{line:214,column:17}}],line:209},"13":{loc:{start:{line:211,column:24},end:{line:213,column:39}},type:"cond-expr",locations:[{start:{line:212,column:30},end:{line:212,column:59}},{start:{line:213,column:30},end:{line:213,column:39}}],line:211},"14":{loc:{start:{line:215,column:16},end:{line:220,column:17}},type:"if",locations:[{start:{line:215,column:16},end:{line:220,column:17}},{start:{line:215,column:16},end:{line:220,column:17}}],line:215},"15":{loc:{start:{line:215,column:58},end:{line:215,column:99}},type:"binary-expr",locations:[{start:{line:215,column:58},end:{line:215,column:74}},{start:{line:215,column:78},end:{line:215,column:99}}],line:215},"16":{loc:{start:{line:217,column:24},end:{line:219,column:39}},type:"cond-expr",locations:[{start:{line:218,column:30},end:{line:218,column:59}},{start:{line:219,column:30},end:{line:219,column:39}}],line:217},"17":{loc:{start:{line:248,column:16},end:{line:249,column:45}},type:"if",locations:[{start:{line:248,column:16},end:{line:249,column:45}},{start:{line:248,column:16},end:{line:249,column:45}}],line:248},"18":{loc:{start:{line:250,column:16},end:{line:251,column:52}},type:"if",locations:[{start:{line:250,column:16},end:{line:251,column:52}},{start:{line:250,column:16},end:{line:251,column:52}}],line:250},"19":{loc:{start:{line:285,column:12},end:{line:288,column:13}},type:"if",locations:[{start:{line:285,column:12},end:{line:288,column:13}},{start:{line:285,column:12},end:{line:288,column:13}}],line:285},"20":{loc:{start:{line:285,column:16},end:{line:285,column:44}},type:"binary-expr",locations:[{start:{line:285,column:16},end:{line:285,column:27}},{start:{line:285,column:31},end:{line:285,column:44}}],line:285},"21":{loc:{start:{line:295,column:12},end:{line:297,column:13}},type:"if",locations:[{start:{line:295,column:12},end:{line:297,column:13}},{start:{line:295,column:12},end:{line:297,column:13}}],line:295},"22":{loc:{start:{line:298,column:12},end:{line:300,column:13}},type:"if",locations:[{start:{line:298,column:12},end:{line:300,column:13}},{start:{line:298,column:12},end:{line:300,column:13}}],line:298},"23":{loc:{start:{line:313,column:16},end:{line:319,column:17}},type:"if",locations:[{start:{line:313,column:16},end:{line:319,column:17}},{start:{line:313,column:16},end:{line:319,column:17}}],line:313},"24":{loc:{start:{line:322,column:8},end:{line:324,column:9}},type:"if",locations:[{start:{line:322,column:8},end:{line:324,column:9}},{start:{line:322,column:8},end:{line:324,column:9}}],line:322},"25":{loc:{start:{line:329,column:8},end:{line:351,column:9}},type:"if",locations:[{start:{line:329,column:8},end:{line:351,column:9}},{start:{line:329,column:8},end:{line:351,column:9}}],line:329},"26":{loc:{start:{line:355,column:16},end:{line:361,column:17}},type:"if",locations:[{start:{line:355,column:16},end:{line:361,column:17}},{start:{line:355,column:16},end:{line:361,column:17}}],line:355},"27":{loc:{start:{line:395,column:8},end:{line:397,column:9}},type:"if",locations:[{start:{line:395,column:8},end:{line:397,column:9}},{start:{line:395,column:8},end:{line:397,column:9}}],line:395},"28":{loc:{start:{line:395,column:12},end:{line:395,column:52}},type:"binary-expr",locations:[{start:{line:395,column:12},end:{line:395,column:25}},{start:{line:395,column:29},end:{line:395,column:52}}],line:395},"29":{loc:{start:{line:398,column:8},end:{line:400,column:9}},type:"if",locations:[{start:{line:398,column:8},end:{line:400,column:9}},{start:{line:398,column:8},end:{line:400,column:9}}],line:398},"30":{loc:{start:{line:401,column:8},end:{line:404,column:9}},type:"if",locations:[{start:{line:401,column:8},end:{line:404,column:9}},{start:{line:401,column:8},end:{line:404,column:9}}],line:401},"31":{loc:{start:{line:401,column:12},end:{line:402,column:40}},type:"binary-expr",locations:[{start:{line:401,column:12},end:{line:401,column:48}},{start:{line:402,column:12},end:{line:402,column:40}}],line:401},"32":{loc:{start:{line:405,column:8},end:{line:407,column:9}},type:"if",locations:[{start:{line:405,column:8},end:{line:407,column:9}},{start:{line:405,column:8},end:{line:407,column:9}}],line:405}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},inputSourceMap:{version:3,file:"/home/nemo/work/github/typeorm-model-generator/src/drivers/MysqlDriver.ts",sources:["/home/nemo/work/github/typeorm-model-generator/src/drivers/MysqlDriver.ts"],names:[],mappings:"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",sourcesContent:["import type * as MYSQL from \"mysql\";\nimport { ConnectionOptions } from \"typeorm\";\nimport * as TypeormDriver from \"typeorm/driver/mysql/MysqlDriver\";\nimport { DataTypeDefaults } from \"typeorm/driver/types/DataTypeDefaults\";\nimport * as TomgUtils from \"../Utils\";\nimport AbstractDriver from \"./AbstractDriver\";\nimport IConnectionOptions from \"../IConnectionOptions\";\nimport { Entity } from \"../models/Entity\";\nimport { Column } from \"../models/Column\";\nimport { Index } from \"../models/Index\";\nimport { RelationInternal } from \"../models/RelationInternal\";\nimport IGenerationOptions from \"../IGenerationOptions\";\n\nexport default class MysqlDriver extends AbstractDriver {\n    public defaultValues: DataTypeDefaults = new TypeormDriver.MysqlDriver({\n        options: { replication: undefined } as ConnectionOptions,\n    } as any).dataTypeDefaults;\n\n    public readonly EngineName: string = \"MySQL\";\n\n    public readonly standardPort = 3306;\n\n    public readonly standardUser = \"root\";\n\n    public readonly standardSchema = \"\";\n\n    private MYSQL: typeof MYSQL;\n\n    private Connection: MYSQL.Connection;\n\n    public constructor() {\n        super();\n        try {\n            // eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved\n            this.MYSQL = require(\"mysql\");\n        } catch (error) {\n            TomgUtils.LogError(\"\", false, error);\n            throw error;\n        }\n    }\n\n    public GetAllTablesQuery = async (\n        schema: string,\n        dbNames: string,\n        tableNames: string[]\n    ) => {\n        const tableCondition =\n            tableNames.length > 0\n                ? ` AND NOT TABLE_NAME IN ('${tableNames.join(\"','\")}')`\n                : \"\";\n        const response = this.ExecQuery<{\n            TABLE_SCHEMA: string;\n            TABLE_NAME: string;\n            DB_NAME: string;\n        }>(`SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_SCHEMA as DB_NAME\n            FROM information_schema.tables\n            WHERE table_type='BASE TABLE'\n            AND table_schema IN (${MysqlDriver.escapeCommaSeparatedList(\n                dbNames\n            )}) ${tableCondition}`);\n        return response;\n    };\n\n    public async GetCoulmnsFromEntity(\n        entities: Entity[],\n        schema: string,\n        dbNames: string\n    ): Promise<Entity[]> {\n        const response = await this.ExecQuery<{\n            TABLE_NAME: string;\n            COLUMN_NAME: string;\n            COLUMN_DEFAULT: string;\n            IS_NULLABLE: string;\n            DATA_TYPE: string;\n            CHARACTER_MAXIMUM_LENGTH: number;\n            NUMERIC_PRECISION: number | null;\n            NUMERIC_SCALE: number | null;\n            IsIdentity: number;\n            COLUMN_TYPE: string;\n            COLUMN_KEY: string;\n            COLUMN_COMMENT: string;\n        }>(`SELECT TABLE_NAME,COLUMN_NAME,COLUMN_DEFAULT,IS_NULLABLE,\n            DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,NUMERIC_SCALE,\n            CASE WHEN EXTRA like '%auto_increment%' THEN 1 ELSE 0 END IsIdentity, COLUMN_TYPE, COLUMN_KEY, COLUMN_COMMENT\n            FROM INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA IN (${MysqlDriver.escapeCommaSeparatedList(\n                dbNames\n            )})\n\t\t\torder by ordinal_position`);\n        entities.forEach((ent) => {\n            response\n                .filter((filterVal) => filterVal.TABLE_NAME === ent.tscName)\n                .forEach((resp) => {\n                    const tscName = resp.COLUMN_NAME;\n                    let tscType = \"\";\n                    const options: Column[\"options\"] = {\n                        name: resp.COLUMN_NAME,\n                    };\n                    const generated = resp.IsIdentity === 1 ? true : undefined;\n                    const defaultValue = MysqlDriver.ReturnDefaultValueFunction(\n                        resp.COLUMN_DEFAULT,\n                        resp.DATA_TYPE\n                    );\n                    let columnType = resp.DATA_TYPE;\n                    if (resp.IS_NULLABLE === \"YES\") options.nullable = true;\n                    if (resp.COLUMN_KEY === \"UNI\") options.unique = true;\n                    if (resp.COLUMN_COMMENT)\n                        options.comment = resp.COLUMN_COMMENT;\n                    if (resp.COLUMN_TYPE.endsWith(\" unsigned\"))\n                        options.unsigned = true;\n                    switch (resp.DATA_TYPE) {\n                        case \"int\":\n                            tscType = \"number\";\n                            break;\n                        case \"bit\":\n                            if (resp.COLUMN_TYPE === \"bit(1)\") {\n                                tscType = \"boolean\";\n                            } else {\n                                tscType = \"number\";\n                            }\n                            break;\n                        case \"tinyint\":\n                            if (resp.COLUMN_TYPE === \"tinyint(1)\") {\n                                options.width = 1;\n                                tscType = \"boolean\";\n                            } else {\n                                tscType = \"number\";\n                            }\n                            break;\n                        case \"smallint\":\n                            tscType = \"number\";\n                            break;\n                        case \"mediumint\":\n                            tscType = \"number\";\n                            break;\n                        case \"bigint\":\n                            tscType = \"string\";\n                            break;\n                        case \"float\":\n                            tscType = \"number\";\n                            break;\n                        case \"double\":\n                            tscType = \"number\";\n                            break;\n                        case \"decimal\":\n                            tscType = \"string\";\n                            break;\n                        case \"date\":\n                            tscType = \"string\";\n                            break;\n                        case \"datetime\":\n                            tscType = \"Date\";\n                            break;\n                        case \"timestamp\":\n                            tscType = \"Date\";\n                            break;\n                        case \"time\":\n                            tscType = \"string\";\n                            break;\n                        case \"year\":\n                            tscType = \"number\";\n                            break;\n                        case \"char\":\n                            tscType = \"string\";\n                            break;\n                        case \"varchar\":\n                            tscType = \"string\";\n                            break;\n                        case \"blob\":\n                            tscType = \"Buffer\";\n                            break;\n                        case \"text\":\n                            tscType = \"string\";\n                            break;\n                        case \"tinyblob\":\n                            tscType = \"Buffer\";\n                            break;\n                        case \"tinytext\":\n                            tscType = \"string\";\n                            break;\n                        case \"mediumblob\":\n                            tscType = \"Buffer\";\n                            break;\n                        case \"mediumtext\":\n                            tscType = \"string\";\n                            break;\n                        case \"longblob\":\n                            tscType = \"Buffer\";\n                            break;\n                        case \"longtext\":\n                            tscType = \"string\";\n                            break;\n                        case \"enum\":\n                            tscType = resp.COLUMN_TYPE.substring(\n                                5,\n                                resp.COLUMN_TYPE.length - 1\n                            )\n                                .replace(/'/gi, '\"')\n                                .replace(/\",\"/gi, '\" | \"');\n                            options.enum = resp.COLUMN_TYPE.substring(\n                                5,\n                                resp.COLUMN_TYPE.length - 1\n                            )\n                                .replace(/'/gi, \"\")\n                                .split(\",\");\n                            break;\n                        case \"set\":\n                            tscType = `(${resp.COLUMN_TYPE.substring(\n                                4,\n                                resp.COLUMN_TYPE.length - 1\n                            )\n                                .replace(/'/gi, '\"')\n                                .replace(/\",\"/gi, '\" | \"')})[]`;\n                            options.enum = resp.COLUMN_TYPE.substring(\n                                4,\n                                resp.COLUMN_TYPE.length - 1\n                            )\n                                .replace(/'/gi, \"\")\n                                .split(\",\");\n                            break;\n                        case \"json\":\n                            tscType = \"object\";\n                            break;\n                        case \"binary\":\n                            tscType = \"Buffer\";\n                            break;\n                        case \"varbinary\":\n                            tscType = \"Buffer\";\n                            break;\n                        case \"geometry\":\n                            tscType = \"string\";\n                            break;\n                        case \"point\":\n                            tscType = \"string\";\n                            break;\n                        case \"linestring\":\n                            tscType = \"string\";\n                            break;\n                        case \"polygon\":\n                            tscType = \"string\";\n                            break;\n                        case \"multipoint\":\n                            tscType = \"string\";\n                            break;\n                        case \"multilinestring\":\n                            tscType = \"string\";\n                            break;\n                        case \"multipolygon\":\n                            tscType = \"string\";\n                            break;\n                        case \"geometrycollection\":\n                        case \"geomcollection\":\n                            columnType = \"geometrycollection\";\n                            tscType = \"string\";\n                            break;\n                        default:\n                            tscType = \"NonNullable<unknown>\";\n                            TomgUtils.LogError(\n                                `Unknown column type: ${resp.DATA_TYPE}  table name: ${resp.TABLE_NAME} column name: ${resp.COLUMN_NAME}`\n                            );\n                            break;\n                    }\n                    if (\n                        this.ColumnTypesWithPrecision.some(\n                            (v) => v === columnType\n                        )\n                    ) {\n                        if (resp.NUMERIC_PRECISION !== null) {\n                            options.precision = resp.NUMERIC_PRECISION;\n                        }\n                        if (resp.NUMERIC_SCALE !== null) {\n                            options.scale = resp.NUMERIC_SCALE;\n                        }\n                    }\n                    if (\n                        this.ColumnTypesWithLength.some((v) => v === columnType)\n                    ) {\n                        options.length =\n                            resp.CHARACTER_MAXIMUM_LENGTH > 0\n                                ? resp.CHARACTER_MAXIMUM_LENGTH\n                                : undefined;\n                    }\n                    if (\n                        this.ColumnTypesWithWidth.some(\n                            (v) => v === columnType && tscType !== \"boolean\"\n                        )\n                    ) {\n                        options.width =\n                            resp.CHARACTER_MAXIMUM_LENGTH > 0\n                                ? resp.CHARACTER_MAXIMUM_LENGTH\n                                : undefined;\n                    }\n\n                    ent.columns.push({\n                        generated,\n                        type: columnType,\n                        default: defaultValue,\n                        options,\n                        tscName,\n                        tscType,\n                    });\n                });\n        });\n        return entities;\n    }\n\n    public async GetIndexesFromEntity(\n        entities: Entity[],\n        schema: string,\n        dbNames: string\n    ): Promise<Entity[]> {\n        const response = await this.ExecQuery<{\n            TableName: string;\n            IndexName: string;\n            ColumnName: string;\n            is_unique: number;\n            is_primary_key: number;\n        }>(`SELECT TABLE_NAME TableName,INDEX_NAME IndexName,COLUMN_NAME ColumnName,CASE WHEN NON_UNIQUE=0 THEN 1 ELSE 0 END is_unique,\n            CASE WHEN INDEX_NAME='PRIMARY' THEN 1 ELSE 0 END is_primary_key\n            FROM information_schema.statistics sta\n            WHERE table_schema IN (${MysqlDriver.escapeCommaSeparatedList(\n                dbNames\n            )})`);\n        entities.forEach((ent) => {\n            const entityIndices = response.filter(\n                (filterVal) => filterVal.TableName === ent.tscName\n            );\n            const indexNames = new Set(entityIndices.map((v) => v.IndexName));\n            indexNames.forEach((indexName) => {\n                const records = entityIndices.filter(\n                    (v) => v.IndexName === indexName\n                );\n\n                const indexInfo: Index = {\n                    name: indexName,\n                    columns: [],\n                    options: {},\n                };\n                if (records[0].is_primary_key === 1) indexInfo.primary = true;\n                if (records[0].is_unique === 1) indexInfo.options.unique = true;\n\n                records.forEach((record) => {\n                    indexInfo.columns.push(record.ColumnName);\n                });\n                ent.indices.push(indexInfo);\n            });\n        });\n\n        return entities;\n    }\n\n    public async GetRelations(\n        entities: Entity[],\n        schema: string,\n        dbNames: string,\n        generationOptions: IGenerationOptions\n    ): Promise<Entity[]> {\n        const response = await this.ExecQuery<{\n            TableWithForeignKey: string;\n            FK_PartNo: number;\n            ForeignKeyColumn: string;\n            TableReferenced: string;\n            ForeignKeyColumnReferenced: string;\n            onDelete: \"RESTRICT\" | \"CASCADE\" | \"SET NULL\" | \"NO_ACTION\";\n            onUpdate: \"RESTRICT\" | \"CASCADE\" | \"SET NULL\" | \"NO_ACTION\";\n            object_id: string;\n        }>(`SELECT\n            CU.TABLE_NAME TableWithForeignKey,\n            CU.ORDINAL_POSITION FK_PartNo,\n            CU.COLUMN_NAME ForeignKeyColumn,\n            CU.REFERENCED_TABLE_NAME TableReferenced,\n            CU.REFERENCED_COLUMN_NAME ForeignKeyColumnReferenced,\n            RC.DELETE_RULE onDelete,\n            RC.UPDATE_RULE onUpdate,\n            CU.CONSTRAINT_NAME object_id\n           FROM\n            INFORMATION_SCHEMA.KEY_COLUMN_USAGE CU\n           JOIN\n            INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC\n                ON CU.CONSTRAINT_NAME=RC.CONSTRAINT_NAME AND CU.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA\n          WHERE\n            TABLE_SCHEMA IN (${MysqlDriver.escapeCommaSeparatedList(dbNames)})\n            AND CU.REFERENCED_TABLE_NAME IS NOT NULL;\n            `);\n        const relationsTemp: RelationInternal[] = [] as RelationInternal[];\n        const relationKeys = new Set(response.map((v) => v.object_id));\n\n        relationKeys.forEach((relationId) => {\n            const rows = response.filter((v) => v.object_id === relationId);\n            const ownerTable = entities.find(\n                (v) => v.sqlName === rows[0].TableWithForeignKey\n            );\n            const relatedTable = entities.find(\n                (v) => v.sqlName === rows[0].TableReferenced\n            );\n\n            if (!ownerTable || !relatedTable) {\n                TomgUtils.LogError(\n                    `Relation between tables ${rows[0].TableWithForeignKey} and ${rows[0].TableReferenced} wasn't found in entity model.`,\n                    true\n                );\n                return;\n            }\n            const internal: RelationInternal = {\n                ownerColumns: [],\n                relatedColumns: [],\n                ownerTable,\n                relatedTable,\n            };\n            if (rows[0].onDelete !== \"NO_ACTION\") {\n                internal.onDelete = rows[0].onDelete;\n            }\n            if (rows[0].onUpdate !== \"NO_ACTION\") {\n                internal.onUpdate = rows[0].onUpdate;\n            }\n            rows.forEach((row) => {\n                internal.ownerColumns.push(row.ForeignKeyColumn);\n                internal.relatedColumns.push(row.ForeignKeyColumnReferenced);\n            });\n            relationsTemp.push(internal);\n        });\n\n        const retVal = MysqlDriver.GetRelationsFromRelationTempInfo(\n            relationsTemp,\n            entities,\n            generationOptions\n        );\n        return retVal;\n    }\n\n    public async DisconnectFromServer() {\n        const promise = new Promise<boolean>((resolve, reject) => {\n            this.Connection.end((err) => {\n                if (!err) {\n                    resolve(true);\n                } else {\n                    TomgUtils.LogError(\n                        `Error disconnecting from ${this.EngineName} Server.`,\n                        false,\n                        err.message\n                    );\n                    reject(err);\n                }\n            });\n        });\n        if (this.Connection) {\n            await promise;\n        }\n    }\n\n    public async ConnectToServer(connectionOptons: IConnectionOptions) {\n        const databaseName = connectionOptons.databaseName.split(\",\")[0];\n        let config: MYSQL.ConnectionConfig;\n        if (connectionOptons.ssl) {\n            config = {\n                database: databaseName,\n                host: connectionOptons.host,\n                password: connectionOptons.password,\n                port: connectionOptons.port,\n                ssl: {\n                    rejectUnauthorized: false,\n                },\n                timeout: 60 * 60 * 1000,\n                user: connectionOptons.user,\n            };\n        } else {\n            config = {\n                database: databaseName,\n                host: connectionOptons.host,\n                password: connectionOptons.password,\n                port: connectionOptons.port,\n                timeout: 60 * 60 * 1000,\n                user: connectionOptons.user,\n            };\n        }\n\n        const promise = new Promise<boolean>((resolve, reject) => {\n            this.Connection = this.MYSQL.createConnection(config);\n\n            this.Connection.connect((err) => {\n                if (!err) {\n                    resolve(true);\n                } else {\n                    TomgUtils.LogError(\n                        `Error connecting to ${this.EngineName} Server.`,\n                        false,\n                        err.message\n                    );\n                    reject(err);\n                }\n            });\n        });\n\n        await promise;\n    }\n\n    public async CreateDB(dbName: string) {\n        await this.ExecQuery(`CREATE DATABASE ${dbName}; `);\n    }\n\n    public async UseDB(dbName: string) {\n        await this.ExecQuery(`USE ${dbName}; `);\n    }\n\n    public async DropDB(dbName: string) {\n        await this.ExecQuery(`DROP DATABASE ${dbName}; `);\n    }\n\n    public async CheckIfDBExists(dbName: string): Promise<boolean> {\n        const resp = await this.ExecQuery(`SHOW DATABASES LIKE '${dbName}' `);\n        return resp.length > 0;\n    }\n\n    public async ExecQuery<T>(sql: string): Promise<T[]> {\n        const ret: T[] = [];\n        const query = this.Connection.query(sql);\n        const stream = query.stream({});\n        const promise = new Promise<boolean>((resolve, reject) => {\n            stream.on(\"data\", (chunk) => {\n                ret.push((chunk as unknown) as T);\n            });\n            stream.on(\"error\", (err) => reject(err));\n            stream.on(\"end\", () => resolve(true));\n        });\n        await promise;\n        return ret;\n    }\n\n    private static ReturnDefaultValueFunction(\n        defVal: string | undefined,\n        dataType: string\n    ): string | undefined {\n        let defaultValue = defVal;\n        if (!defaultValue || defaultValue === \"NULL\") {\n            return undefined;\n        }\n        if (defaultValue.toLowerCase() === \"current_timestamp()\") {\n            defaultValue = \"CURRENT_TIMESTAMP\";\n        }\n        if (\n            defaultValue === \"CURRENT_TIMESTAMP\" ||\n            defaultValue.startsWith(`'`)\n        ) {\n            return `() => \"${defaultValue}\"`;\n        }\n        if (dataType === \"set\") {\n            return `() => ['${defaultValue.split(\",\").join(\"','\")}']`;\n        }\n\n        return `() => \"'${defaultValue}'\"`;\n    }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ccd87e39ec7e333843718707323d98e1960c9c7e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_tjsrk2ukb=function(){return actualCoverage;};return actualCoverage;}cov_tjsrk2ukb();cov_tjsrk2ukb().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const TypeormDriver=(cov_tjsrk2ukb().s[1]++,require("typeorm/driver/mysql/MysqlDriver"));const TomgUtils=(cov_tjsrk2ukb().s[2]++,require("../Utils"));const AbstractDriver_1=(cov_tjsrk2ukb().s[3]++,require("./AbstractDriver"));class MysqlDriver extends(AbstractDriver_1.default){constructor(){cov_tjsrk2ukb().f[0]++;cov_tjsrk2ukb().s[4]++;super();cov_tjsrk2ukb().s[5]++;this.defaultValues=new TypeormDriver.MysqlDriver({options:{replication:undefined}}).dataTypeDefaults;cov_tjsrk2ukb().s[6]++;this.EngineName="MySQL";cov_tjsrk2ukb().s[7]++;this.standardPort=3306;cov_tjsrk2ukb().s[8]++;this.standardUser="root";cov_tjsrk2ukb().s[9]++;this.standardSchema="";cov_tjsrk2ukb().s[10]++;this.GetAllTablesQuery=async(schema,dbNames,tableNames)=>{cov_tjsrk2ukb().f[1]++;const tableCondition=(cov_tjsrk2ukb().s[11]++,tableNames.length>0?(cov_tjsrk2ukb().b[0][0]++,` AND NOT TABLE_NAME IN ('${tableNames.join("','")}')`):(cov_tjsrk2ukb().b[0][1]++,""));const response=(cov_tjsrk2ukb().s[12]++,this.ExecQuery(`SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_SCHEMA as DB_NAME
            FROM information_schema.tables
            WHERE table_type='BASE TABLE'
            AND table_schema IN (${MysqlDriver.escapeCommaSeparatedList(dbNames)}) ${tableCondition}`));cov_tjsrk2ukb().s[13]++;return response;};cov_tjsrk2ukb().s[14]++;try{cov_tjsrk2ukb().s[15]++;// eslint-disable-next-line import/no-extraneous-dependencies, global-require, import/no-unresolved
this.MYSQL=require("mysql");}catch(error){cov_tjsrk2ukb().s[16]++;TomgUtils.LogError("",false,error);cov_tjsrk2ukb().s[17]++;throw error;}}async GetCoulmnsFromEntity(entities,schema,dbNames){cov_tjsrk2ukb().f[2]++;const response=(cov_tjsrk2ukb().s[18]++,await this.ExecQuery(`SELECT TABLE_NAME,COLUMN_NAME,COLUMN_DEFAULT,IS_NULLABLE,
            DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,NUMERIC_SCALE,
            CASE WHEN EXTRA like '%auto_increment%' THEN 1 ELSE 0 END IsIdentity, COLUMN_TYPE, COLUMN_KEY, COLUMN_COMMENT
            FROM INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA IN (${MysqlDriver.escapeCommaSeparatedList(dbNames)})
			order by ordinal_position`));cov_tjsrk2ukb().s[19]++;entities.forEach(ent=>{cov_tjsrk2ukb().f[3]++;cov_tjsrk2ukb().s[20]++;response.filter(filterVal=>{cov_tjsrk2ukb().f[4]++;cov_tjsrk2ukb().s[21]++;return filterVal.TABLE_NAME===ent.tscName;}).forEach(resp=>{cov_tjsrk2ukb().f[5]++;const tscName=(cov_tjsrk2ukb().s[22]++,resp.COLUMN_NAME);let tscType=(cov_tjsrk2ukb().s[23]++,"");const options=(cov_tjsrk2ukb().s[24]++,{name:resp.COLUMN_NAME});const generated=(cov_tjsrk2ukb().s[25]++,resp.IsIdentity===1?(cov_tjsrk2ukb().b[1][0]++,true):(cov_tjsrk2ukb().b[1][1]++,undefined));const defaultValue=(cov_tjsrk2ukb().s[26]++,MysqlDriver.ReturnDefaultValueFunction(resp.COLUMN_DEFAULT,resp.DATA_TYPE));let columnType=(cov_tjsrk2ukb().s[27]++,resp.DATA_TYPE);cov_tjsrk2ukb().s[28]++;if(resp.IS_NULLABLE==="YES"){cov_tjsrk2ukb().b[2][0]++;cov_tjsrk2ukb().s[29]++;options.nullable=true;}else{cov_tjsrk2ukb().b[2][1]++;}cov_tjsrk2ukb().s[30]++;if(resp.COLUMN_KEY==="UNI"){cov_tjsrk2ukb().b[3][0]++;cov_tjsrk2ukb().s[31]++;options.unique=true;}else{cov_tjsrk2ukb().b[3][1]++;}cov_tjsrk2ukb().s[32]++;if(resp.COLUMN_COMMENT){cov_tjsrk2ukb().b[4][0]++;cov_tjsrk2ukb().s[33]++;options.comment=resp.COLUMN_COMMENT;}else{cov_tjsrk2ukb().b[4][1]++;}cov_tjsrk2ukb().s[34]++;if(resp.COLUMN_TYPE.endsWith(" unsigned")){cov_tjsrk2ukb().b[5][0]++;cov_tjsrk2ukb().s[35]++;options.unsigned=true;}else{cov_tjsrk2ukb().b[5][1]++;}cov_tjsrk2ukb().s[36]++;switch(resp.DATA_TYPE){case"int":cov_tjsrk2ukb().b[6][0]++;cov_tjsrk2ukb().s[37]++;tscType="number";cov_tjsrk2ukb().s[38]++;break;case"bit":cov_tjsrk2ukb().b[6][1]++;cov_tjsrk2ukb().s[39]++;if(resp.COLUMN_TYPE==="bit(1)"){cov_tjsrk2ukb().b[7][0]++;cov_tjsrk2ukb().s[40]++;tscType="boolean";}else{cov_tjsrk2ukb().b[7][1]++;cov_tjsrk2ukb().s[41]++;tscType="number";}cov_tjsrk2ukb().s[42]++;break;case"tinyint":cov_tjsrk2ukb().b[6][2]++;cov_tjsrk2ukb().s[43]++;if(resp.COLUMN_TYPE==="tinyint(1)"){cov_tjsrk2ukb().b[8][0]++;cov_tjsrk2ukb().s[44]++;options.width=1;cov_tjsrk2ukb().s[45]++;tscType="boolean";}else{cov_tjsrk2ukb().b[8][1]++;cov_tjsrk2ukb().s[46]++;tscType="number";}cov_tjsrk2ukb().s[47]++;break;case"smallint":cov_tjsrk2ukb().b[6][3]++;cov_tjsrk2ukb().s[48]++;tscType="number";cov_tjsrk2ukb().s[49]++;break;case"mediumint":cov_tjsrk2ukb().b[6][4]++;cov_tjsrk2ukb().s[50]++;tscType="number";cov_tjsrk2ukb().s[51]++;break;case"bigint":cov_tjsrk2ukb().b[6][5]++;cov_tjsrk2ukb().s[52]++;tscType="string";cov_tjsrk2ukb().s[53]++;break;case"float":cov_tjsrk2ukb().b[6][6]++;cov_tjsrk2ukb().s[54]++;tscType="number";cov_tjsrk2ukb().s[55]++;break;case"double":cov_tjsrk2ukb().b[6][7]++;cov_tjsrk2ukb().s[56]++;tscType="number";cov_tjsrk2ukb().s[57]++;break;case"decimal":cov_tjsrk2ukb().b[6][8]++;cov_tjsrk2ukb().s[58]++;tscType="string";cov_tjsrk2ukb().s[59]++;break;case"date":cov_tjsrk2ukb().b[6][9]++;cov_tjsrk2ukb().s[60]++;tscType="string";cov_tjsrk2ukb().s[61]++;break;case"datetime":cov_tjsrk2ukb().b[6][10]++;cov_tjsrk2ukb().s[62]++;tscType="Date";cov_tjsrk2ukb().s[63]++;break;case"timestamp":cov_tjsrk2ukb().b[6][11]++;cov_tjsrk2ukb().s[64]++;tscType="Date";cov_tjsrk2ukb().s[65]++;break;case"time":cov_tjsrk2ukb().b[6][12]++;cov_tjsrk2ukb().s[66]++;tscType="string";cov_tjsrk2ukb().s[67]++;break;case"year":cov_tjsrk2ukb().b[6][13]++;cov_tjsrk2ukb().s[68]++;tscType="number";cov_tjsrk2ukb().s[69]++;break;case"char":cov_tjsrk2ukb().b[6][14]++;cov_tjsrk2ukb().s[70]++;tscType="string";cov_tjsrk2ukb().s[71]++;break;case"varchar":cov_tjsrk2ukb().b[6][15]++;cov_tjsrk2ukb().s[72]++;tscType="string";cov_tjsrk2ukb().s[73]++;break;case"blob":cov_tjsrk2ukb().b[6][16]++;cov_tjsrk2ukb().s[74]++;tscType="Buffer";cov_tjsrk2ukb().s[75]++;break;case"text":cov_tjsrk2ukb().b[6][17]++;cov_tjsrk2ukb().s[76]++;tscType="string";cov_tjsrk2ukb().s[77]++;break;case"tinyblob":cov_tjsrk2ukb().b[6][18]++;cov_tjsrk2ukb().s[78]++;tscType="Buffer";cov_tjsrk2ukb().s[79]++;break;case"tinytext":cov_tjsrk2ukb().b[6][19]++;cov_tjsrk2ukb().s[80]++;tscType="string";cov_tjsrk2ukb().s[81]++;break;case"mediumblob":cov_tjsrk2ukb().b[6][20]++;cov_tjsrk2ukb().s[82]++;tscType="Buffer";cov_tjsrk2ukb().s[83]++;break;case"mediumtext":cov_tjsrk2ukb().b[6][21]++;cov_tjsrk2ukb().s[84]++;tscType="string";cov_tjsrk2ukb().s[85]++;break;case"longblob":cov_tjsrk2ukb().b[6][22]++;cov_tjsrk2ukb().s[86]++;tscType="Buffer";cov_tjsrk2ukb().s[87]++;break;case"longtext":cov_tjsrk2ukb().b[6][23]++;cov_tjsrk2ukb().s[88]++;tscType="string";cov_tjsrk2ukb().s[89]++;break;case"enum":cov_tjsrk2ukb().b[6][24]++;cov_tjsrk2ukb().s[90]++;tscType=resp.COLUMN_TYPE.substring(5,resp.COLUMN_TYPE.length-1).replace(/'/gi,'"').replace(/","/gi,'" | "');cov_tjsrk2ukb().s[91]++;options.enum=resp.COLUMN_TYPE.substring(5,resp.COLUMN_TYPE.length-1).replace(/'/gi,"").split(",");cov_tjsrk2ukb().s[92]++;break;case"set":cov_tjsrk2ukb().b[6][25]++;cov_tjsrk2ukb().s[93]++;tscType=`(${resp.COLUMN_TYPE.substring(4,resp.COLUMN_TYPE.length-1).replace(/'/gi,'"').replace(/","/gi,'" | "')})[]`;cov_tjsrk2ukb().s[94]++;options.enum=resp.COLUMN_TYPE.substring(4,resp.COLUMN_TYPE.length-1).replace(/'/gi,"").split(",");cov_tjsrk2ukb().s[95]++;break;case"json":cov_tjsrk2ukb().b[6][26]++;cov_tjsrk2ukb().s[96]++;tscType="object";cov_tjsrk2ukb().s[97]++;break;case"binary":cov_tjsrk2ukb().b[6][27]++;cov_tjsrk2ukb().s[98]++;tscType="Buffer";cov_tjsrk2ukb().s[99]++;break;case"varbinary":cov_tjsrk2ukb().b[6][28]++;cov_tjsrk2ukb().s[100]++;tscType="Buffer";cov_tjsrk2ukb().s[101]++;break;case"geometry":cov_tjsrk2ukb().b[6][29]++;cov_tjsrk2ukb().s[102]++;tscType="string";cov_tjsrk2ukb().s[103]++;break;case"point":cov_tjsrk2ukb().b[6][30]++;cov_tjsrk2ukb().s[104]++;tscType="string";cov_tjsrk2ukb().s[105]++;break;case"linestring":cov_tjsrk2ukb().b[6][31]++;cov_tjsrk2ukb().s[106]++;tscType="string";cov_tjsrk2ukb().s[107]++;break;case"polygon":cov_tjsrk2ukb().b[6][32]++;cov_tjsrk2ukb().s[108]++;tscType="string";cov_tjsrk2ukb().s[109]++;break;case"multipoint":cov_tjsrk2ukb().b[6][33]++;cov_tjsrk2ukb().s[110]++;tscType="string";cov_tjsrk2ukb().s[111]++;break;case"multilinestring":cov_tjsrk2ukb().b[6][34]++;cov_tjsrk2ukb().s[112]++;tscType="string";cov_tjsrk2ukb().s[113]++;break;case"multipolygon":cov_tjsrk2ukb().b[6][35]++;cov_tjsrk2ukb().s[114]++;tscType="string";cov_tjsrk2ukb().s[115]++;break;case"geometrycollection":cov_tjsrk2ukb().b[6][36]++;case"geomcollection":cov_tjsrk2ukb().b[6][37]++;cov_tjsrk2ukb().s[116]++;columnType="geometrycollection";cov_tjsrk2ukb().s[117]++;tscType="string";cov_tjsrk2ukb().s[118]++;break;default:cov_tjsrk2ukb().b[6][38]++;cov_tjsrk2ukb().s[119]++;tscType="NonNullable<unknown>";cov_tjsrk2ukb().s[120]++;TomgUtils.LogError(`Unknown column type: ${resp.DATA_TYPE}  table name: ${resp.TABLE_NAME} column name: ${resp.COLUMN_NAME}`);cov_tjsrk2ukb().s[121]++;break;}cov_tjsrk2ukb().s[122]++;if(this.ColumnTypesWithPrecision.some(v=>{cov_tjsrk2ukb().f[6]++;cov_tjsrk2ukb().s[123]++;return v===columnType;})){cov_tjsrk2ukb().b[9][0]++;cov_tjsrk2ukb().s[124]++;if(resp.NUMERIC_PRECISION!==null){cov_tjsrk2ukb().b[10][0]++;cov_tjsrk2ukb().s[125]++;options.precision=resp.NUMERIC_PRECISION;}else{cov_tjsrk2ukb().b[10][1]++;}cov_tjsrk2ukb().s[126]++;if(resp.NUMERIC_SCALE!==null){cov_tjsrk2ukb().b[11][0]++;cov_tjsrk2ukb().s[127]++;options.scale=resp.NUMERIC_SCALE;}else{cov_tjsrk2ukb().b[11][1]++;}}else{cov_tjsrk2ukb().b[9][1]++;}cov_tjsrk2ukb().s[128]++;if(this.ColumnTypesWithLength.some(v=>{cov_tjsrk2ukb().f[7]++;cov_tjsrk2ukb().s[129]++;return v===columnType;})){cov_tjsrk2ukb().b[12][0]++;cov_tjsrk2ukb().s[130]++;options.length=resp.CHARACTER_MAXIMUM_LENGTH>0?(cov_tjsrk2ukb().b[13][0]++,resp.CHARACTER_MAXIMUM_LENGTH):(cov_tjsrk2ukb().b[13][1]++,undefined);}else{cov_tjsrk2ukb().b[12][1]++;}cov_tjsrk2ukb().s[131]++;if(this.ColumnTypesWithWidth.some(v=>{cov_tjsrk2ukb().f[8]++;cov_tjsrk2ukb().s[132]++;return(cov_tjsrk2ukb().b[15][0]++,v===columnType)&&(cov_tjsrk2ukb().b[15][1]++,tscType!=="boolean");})){cov_tjsrk2ukb().b[14][0]++;cov_tjsrk2ukb().s[133]++;options.width=resp.CHARACTER_MAXIMUM_LENGTH>0?(cov_tjsrk2ukb().b[16][0]++,resp.CHARACTER_MAXIMUM_LENGTH):(cov_tjsrk2ukb().b[16][1]++,undefined);}else{cov_tjsrk2ukb().b[14][1]++;}cov_tjsrk2ukb().s[134]++;ent.columns.push({generated,type:columnType,default:defaultValue,options,tscName,tscType});});});cov_tjsrk2ukb().s[135]++;return entities;}async GetIndexesFromEntity(entities,schema,dbNames){cov_tjsrk2ukb().f[9]++;const response=(cov_tjsrk2ukb().s[136]++,await this.ExecQuery(`SELECT TABLE_NAME TableName,INDEX_NAME IndexName,COLUMN_NAME ColumnName,CASE WHEN NON_UNIQUE=0 THEN 1 ELSE 0 END is_unique,
            CASE WHEN INDEX_NAME='PRIMARY' THEN 1 ELSE 0 END is_primary_key
            FROM information_schema.statistics sta
            WHERE table_schema IN (${MysqlDriver.escapeCommaSeparatedList(dbNames)})`));cov_tjsrk2ukb().s[137]++;entities.forEach(ent=>{cov_tjsrk2ukb().f[10]++;const entityIndices=(cov_tjsrk2ukb().s[138]++,response.filter(filterVal=>{cov_tjsrk2ukb().f[11]++;cov_tjsrk2ukb().s[139]++;return filterVal.TableName===ent.tscName;}));const indexNames=(cov_tjsrk2ukb().s[140]++,new Set(entityIndices.map(v=>{cov_tjsrk2ukb().f[12]++;cov_tjsrk2ukb().s[141]++;return v.IndexName;})));cov_tjsrk2ukb().s[142]++;indexNames.forEach(indexName=>{cov_tjsrk2ukb().f[13]++;const records=(cov_tjsrk2ukb().s[143]++,entityIndices.filter(v=>{cov_tjsrk2ukb().f[14]++;cov_tjsrk2ukb().s[144]++;return v.IndexName===indexName;}));const indexInfo=(cov_tjsrk2ukb().s[145]++,{name:indexName,columns:[],options:{}});cov_tjsrk2ukb().s[146]++;if(records[0].is_primary_key===1){cov_tjsrk2ukb().b[17][0]++;cov_tjsrk2ukb().s[147]++;indexInfo.primary=true;}else{cov_tjsrk2ukb().b[17][1]++;}cov_tjsrk2ukb().s[148]++;if(records[0].is_unique===1){cov_tjsrk2ukb().b[18][0]++;cov_tjsrk2ukb().s[149]++;indexInfo.options.unique=true;}else{cov_tjsrk2ukb().b[18][1]++;}cov_tjsrk2ukb().s[150]++;records.forEach(record=>{cov_tjsrk2ukb().f[15]++;cov_tjsrk2ukb().s[151]++;indexInfo.columns.push(record.ColumnName);});cov_tjsrk2ukb().s[152]++;ent.indices.push(indexInfo);});});cov_tjsrk2ukb().s[153]++;return entities;}async GetRelations(entities,schema,dbNames,generationOptions){cov_tjsrk2ukb().f[16]++;const response=(cov_tjsrk2ukb().s[154]++,await this.ExecQuery(`SELECT
            CU.TABLE_NAME TableWithForeignKey,
            CU.ORDINAL_POSITION FK_PartNo,
            CU.COLUMN_NAME ForeignKeyColumn,
            CU.REFERENCED_TABLE_NAME TableReferenced,
            CU.REFERENCED_COLUMN_NAME ForeignKeyColumnReferenced,
            RC.DELETE_RULE onDelete,
            RC.UPDATE_RULE onUpdate,
            CU.CONSTRAINT_NAME object_id
           FROM
            INFORMATION_SCHEMA.KEY_COLUMN_USAGE CU
           JOIN
            INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC
                ON CU.CONSTRAINT_NAME=RC.CONSTRAINT_NAME AND CU.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA
          WHERE
            TABLE_SCHEMA IN (${MysqlDriver.escapeCommaSeparatedList(dbNames)})
            AND CU.REFERENCED_TABLE_NAME IS NOT NULL;
            `));const relationsTemp=(cov_tjsrk2ukb().s[155]++,[]);const relationKeys=(cov_tjsrk2ukb().s[156]++,new Set(response.map(v=>{cov_tjsrk2ukb().f[17]++;cov_tjsrk2ukb().s[157]++;return v.object_id;})));cov_tjsrk2ukb().s[158]++;relationKeys.forEach(relationId=>{cov_tjsrk2ukb().f[18]++;const rows=(cov_tjsrk2ukb().s[159]++,response.filter(v=>{cov_tjsrk2ukb().f[19]++;cov_tjsrk2ukb().s[160]++;return v.object_id===relationId;}));const ownerTable=(cov_tjsrk2ukb().s[161]++,entities.find(v=>{cov_tjsrk2ukb().f[20]++;cov_tjsrk2ukb().s[162]++;return v.sqlName===rows[0].TableWithForeignKey;}));const relatedTable=(cov_tjsrk2ukb().s[163]++,entities.find(v=>{cov_tjsrk2ukb().f[21]++;cov_tjsrk2ukb().s[164]++;return v.sqlName===rows[0].TableReferenced;}));cov_tjsrk2ukb().s[165]++;if((cov_tjsrk2ukb().b[20][0]++,!ownerTable)||(cov_tjsrk2ukb().b[20][1]++,!relatedTable)){cov_tjsrk2ukb().b[19][0]++;cov_tjsrk2ukb().s[166]++;TomgUtils.LogError(`Relation between tables ${rows[0].TableWithForeignKey} and ${rows[0].TableReferenced} wasn't found in entity model.`,true);cov_tjsrk2ukb().s[167]++;return;}else{cov_tjsrk2ukb().b[19][1]++;}const internal=(cov_tjsrk2ukb().s[168]++,{ownerColumns:[],relatedColumns:[],ownerTable,relatedTable});cov_tjsrk2ukb().s[169]++;if(rows[0].onDelete!=="NO_ACTION"){cov_tjsrk2ukb().b[21][0]++;cov_tjsrk2ukb().s[170]++;internal.onDelete=rows[0].onDelete;}else{cov_tjsrk2ukb().b[21][1]++;}cov_tjsrk2ukb().s[171]++;if(rows[0].onUpdate!=="NO_ACTION"){cov_tjsrk2ukb().b[22][0]++;cov_tjsrk2ukb().s[172]++;internal.onUpdate=rows[0].onUpdate;}else{cov_tjsrk2ukb().b[22][1]++;}cov_tjsrk2ukb().s[173]++;rows.forEach(row=>{cov_tjsrk2ukb().f[22]++;cov_tjsrk2ukb().s[174]++;internal.ownerColumns.push(row.ForeignKeyColumn);cov_tjsrk2ukb().s[175]++;internal.relatedColumns.push(row.ForeignKeyColumnReferenced);});cov_tjsrk2ukb().s[176]++;relationsTemp.push(internal);});const retVal=(cov_tjsrk2ukb().s[177]++,MysqlDriver.GetRelationsFromRelationTempInfo(relationsTemp,entities,generationOptions));cov_tjsrk2ukb().s[178]++;return retVal;}async DisconnectFromServer(){cov_tjsrk2ukb().f[23]++;const promise=(cov_tjsrk2ukb().s[179]++,new Promise((resolve,reject)=>{cov_tjsrk2ukb().f[24]++;cov_tjsrk2ukb().s[180]++;this.Connection.end(err=>{cov_tjsrk2ukb().f[25]++;cov_tjsrk2ukb().s[181]++;if(!err){cov_tjsrk2ukb().b[23][0]++;cov_tjsrk2ukb().s[182]++;resolve(true);}else{cov_tjsrk2ukb().b[23][1]++;cov_tjsrk2ukb().s[183]++;TomgUtils.LogError(`Error disconnecting from ${this.EngineName} Server.`,false,err.message);cov_tjsrk2ukb().s[184]++;reject(err);}});}));cov_tjsrk2ukb().s[185]++;if(this.Connection){cov_tjsrk2ukb().b[24][0]++;cov_tjsrk2ukb().s[186]++;await promise;}else{cov_tjsrk2ukb().b[24][1]++;}}async ConnectToServer(connectionOptons){cov_tjsrk2ukb().f[26]++;const databaseName=(cov_tjsrk2ukb().s[187]++,connectionOptons.databaseName.split(",")[0]);let config;cov_tjsrk2ukb().s[188]++;if(connectionOptons.ssl){cov_tjsrk2ukb().b[25][0]++;cov_tjsrk2ukb().s[189]++;config={database:databaseName,host:connectionOptons.host,password:connectionOptons.password,port:connectionOptons.port,ssl:{rejectUnauthorized:false},timeout:60*60*1000,user:connectionOptons.user};}else{cov_tjsrk2ukb().b[25][1]++;cov_tjsrk2ukb().s[190]++;config={database:databaseName,host:connectionOptons.host,password:connectionOptons.password,port:connectionOptons.port,timeout:60*60*1000,user:connectionOptons.user};}const promise=(cov_tjsrk2ukb().s[191]++,new Promise((resolve,reject)=>{cov_tjsrk2ukb().f[27]++;cov_tjsrk2ukb().s[192]++;this.Connection=this.MYSQL.createConnection(config);cov_tjsrk2ukb().s[193]++;this.Connection.connect(err=>{cov_tjsrk2ukb().f[28]++;cov_tjsrk2ukb().s[194]++;if(!err){cov_tjsrk2ukb().b[26][0]++;cov_tjsrk2ukb().s[195]++;resolve(true);}else{cov_tjsrk2ukb().b[26][1]++;cov_tjsrk2ukb().s[196]++;TomgUtils.LogError(`Error connecting to ${this.EngineName} Server.`,false,err.message);cov_tjsrk2ukb().s[197]++;reject(err);}});}));cov_tjsrk2ukb().s[198]++;await promise;}async CreateDB(dbName){cov_tjsrk2ukb().f[29]++;cov_tjsrk2ukb().s[199]++;await this.ExecQuery(`CREATE DATABASE ${dbName}; `);}async UseDB(dbName){cov_tjsrk2ukb().f[30]++;cov_tjsrk2ukb().s[200]++;await this.ExecQuery(`USE ${dbName}; `);}async DropDB(dbName){cov_tjsrk2ukb().f[31]++;cov_tjsrk2ukb().s[201]++;await this.ExecQuery(`DROP DATABASE ${dbName}; `);}async CheckIfDBExists(dbName){cov_tjsrk2ukb().f[32]++;const resp=(cov_tjsrk2ukb().s[202]++,await this.ExecQuery(`SHOW DATABASES LIKE '${dbName}' `));cov_tjsrk2ukb().s[203]++;return resp.length>0;}async ExecQuery(sql){cov_tjsrk2ukb().f[33]++;const ret=(cov_tjsrk2ukb().s[204]++,[]);const query=(cov_tjsrk2ukb().s[205]++,this.Connection.query(sql));const stream=(cov_tjsrk2ukb().s[206]++,query.stream({}));const promise=(cov_tjsrk2ukb().s[207]++,new Promise((resolve,reject)=>{cov_tjsrk2ukb().f[34]++;cov_tjsrk2ukb().s[208]++;stream.on("data",chunk=>{cov_tjsrk2ukb().f[35]++;cov_tjsrk2ukb().s[209]++;ret.push(chunk);});cov_tjsrk2ukb().s[210]++;stream.on("error",err=>{cov_tjsrk2ukb().f[36]++;cov_tjsrk2ukb().s[211]++;return reject(err);});cov_tjsrk2ukb().s[212]++;stream.on("end",()=>{cov_tjsrk2ukb().f[37]++;cov_tjsrk2ukb().s[213]++;return resolve(true);});}));cov_tjsrk2ukb().s[214]++;await promise;cov_tjsrk2ukb().s[215]++;return ret;}static ReturnDefaultValueFunction(defVal,dataType){cov_tjsrk2ukb().f[38]++;let defaultValue=(cov_tjsrk2ukb().s[216]++,defVal);cov_tjsrk2ukb().s[217]++;if((cov_tjsrk2ukb().b[28][0]++,!defaultValue)||(cov_tjsrk2ukb().b[28][1]++,defaultValue==="NULL")){cov_tjsrk2ukb().b[27][0]++;cov_tjsrk2ukb().s[218]++;return undefined;}else{cov_tjsrk2ukb().b[27][1]++;}cov_tjsrk2ukb().s[219]++;if(defaultValue.toLowerCase()==="current_timestamp()"){cov_tjsrk2ukb().b[29][0]++;cov_tjsrk2ukb().s[220]++;defaultValue="CURRENT_TIMESTAMP";}else{cov_tjsrk2ukb().b[29][1]++;}cov_tjsrk2ukb().s[221]++;if((cov_tjsrk2ukb().b[31][0]++,defaultValue==="CURRENT_TIMESTAMP")||(cov_tjsrk2ukb().b[31][1]++,defaultValue.startsWith(`'`))){cov_tjsrk2ukb().b[30][0]++;cov_tjsrk2ukb().s[222]++;return`() => "${defaultValue}"`;}else{cov_tjsrk2ukb().b[30][1]++;}cov_tjsrk2ukb().s[223]++;if(dataType==="set"){cov_tjsrk2ukb().b[32][0]++;cov_tjsrk2ukb().s[224]++;return`() => ['${defaultValue.split(",").join("','")}']`;}else{cov_tjsrk2ukb().b[32][1]++;}cov_tjsrk2ukb().s[225]++;return`() => "'${defaultValue}'"`;}}cov_tjsrk2ukb().s[226]++;exports.default=MysqlDriver;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,