"use strict";function cov_2q5sf3adye(){var path="/home/nemo/work/github/typeorm-model-generator/src/Engine.ts";var hash="a545b92e39abfe89f01e18e70574d1e1bc782ced";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nemo/work/github/typeorm-model-generator/src/Engine.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:18},end:{line:3,column:36}},"2":{start:{line:4,column:22},end:{line:4,column:54}},"3":{start:{line:5,column:24},end:{line:5,column:58}},"4":{start:{line:6,column:25},end:{line:6,column:60}},"5":{start:{line:7,column:22},end:{line:7,column:54}},"6":{start:{line:8,column:23},end:{line:8,column:56}},"7":{start:{line:9,column:23},end:{line:9,column:56}},"8":{start:{line:10,column:29},end:{line:10,column:60}},"9":{start:{line:11,column:26},end:{line:11,column:54}},"10":{start:{line:13,column:4},end:{line:29,column:5}},"11":{start:{line:15,column:12},end:{line:15,column:47}},"12":{start:{line:17,column:12},end:{line:17,column:50}},"13":{start:{line:19,column:12},end:{line:19,column:47}},"14":{start:{line:21,column:12},end:{line:21,column:49}},"15":{start:{line:23,column:12},end:{line:23,column:48}},"16":{start:{line:25,column:12},end:{line:25,column:48}},"17":{start:{line:27,column:12},end:{line:27,column:73}},"18":{start:{line:28,column:12},end:{line:28,column:63}},"19":{start:{line:31,column:0},end:{line:31,column:36}},"20":{start:{line:33,column:18},end:{line:33,column:89}},"21":{start:{line:34,column:4},end:{line:37,column:5}},"22":{start:{line:35,column:8},end:{line:35,column:112}},"23":{start:{line:36,column:8},end:{line:36,column:15}},"24":{start:{line:38,column:4},end:{line:38,column:93}},"25":{start:{line:39,column:4},end:{line:39,column:77}},"26":{start:{line:41,column:0},end:{line:41,column:58}},"27":{start:{line:43,column:4},end:{line:43,column:74}},"28":{start:{line:45,column:0},end:{line:45,column:50}}},fnMap:{"0":{name:"createDriver",decl:{start:{line:12,column:9},end:{line:12,column:21}},loc:{start:{line:12,column:34},end:{line:30,column:1}},line:12},"1":{name:"createModelFromDatabase",decl:{start:{line:32,column:15},end:{line:32,column:38}},loc:{start:{line:32,column:85},end:{line:40,column:1}},line:32},"2":{name:"dataCollectionPhase",decl:{start:{line:42,column:15},end:{line:42,column:34}},loc:{start:{line:42,column:81},end:{line:44,column:1}},line:42}},branchMap:{"0":{loc:{start:{line:13,column:4},end:{line:29,column:5}},type:"switch",locations:[{start:{line:14,column:8},end:{line:15,column:47}},{start:{line:16,column:8},end:{line:17,column:50}},{start:{line:18,column:8},end:{line:19,column:47}},{start:{line:20,column:8},end:{line:21,column:49}},{start:{line:22,column:8},end:{line:23,column:48}},{start:{line:24,column:8},end:{line:25,column:48}},{start:{line:26,column:8},end:{line:28,column:63}}],line:13},"1":{loc:{start:{line:34,column:4},end:{line:37,column:5}},type:"if",locations:[{start:{line:34,column:4},end:{line:37,column:5}},{start:{line:34,column:4},end:{line:37,column:5}}],line:34}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0,0,0,0,0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/home/nemo/work/github/typeorm-model-generator/src/Engine.ts",sources:["/home/nemo/work/github/typeorm-model-generator/src/Engine.ts"],names:[],mappings:";;AAAA,qCAAqC;AAErC,uDAAgD;AAChD,2DAAoD;AAGpD,6DAAsD;AACtD,uDAAgD;AAChD,yDAAkD;AAClD,yDAAkD;AAClD,6DAA2D;AAC3D,uDAAqD;AAGrD,SAAgB,YAAY,CAAC,UAAkB;IAC3C,QAAQ,UAAU,EAAE;QAChB,KAAK,OAAO;YACR,OAAO,IAAI,qBAAW,EAAE,CAAC;QAC7B,KAAK,UAAU;YACX,OAAO,IAAI,wBAAc,EAAE,CAAC;QAChC,KAAK,OAAO;YACR,OAAO,IAAI,qBAAW,EAAE,CAAC;QAC7B,KAAK,SAAS;YACV,OAAO,IAAI,uBAAa,EAAE,CAAC;QAC/B,KAAK,QAAQ;YACT,OAAO,IAAI,sBAAY,EAAE,CAAC;QAC9B,KAAK,QAAQ;YACT,OAAO,IAAI,sBAAY,EAAE,CAAC;QAC9B;YACI,SAAS,CAAC,QAAQ,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YAC7D,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;KAC1D;AACL,CAAC;AAlBD,oCAkBC;AAEM,KAAK,UAAU,uBAAuB,CACzC,MAAsB,EACtB,iBAAqC,EACrC,iBAAqC;IAErC,IAAI,OAAO,GAAG,MAAM,mBAAmB,CACnC,MAAM,EACN,iBAAiB,EACjB,iBAAiB,CACpB,CAAC;IACF,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,SAAS,CAAC,QAAQ,CACd,4EAA4E,EAC5E,KAAK,CACR,CAAC;QACF,OAAO;KACV;IACD,OAAO,GAAG,4BAAuB,CAC7B,OAAO,EACP,iBAAiB,EACjB,MAAM,CAAC,aAAa,CACvB,CAAC;IACF,yBAAoB,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;AACxE,CAAC;AAvBD,0DAuBC;AACM,KAAK,UAAU,mBAAmB,CACrC,MAAsB,EACtB,iBAAqC,EACrC,iBAAqC;IAErC,OAAO,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;AAC1E,CAAC;AAND,kDAMC",sourcesContent:["import * as TomgUtils from \"./Utils\";\nimport AbstractDriver from \"./drivers/AbstractDriver\";\nimport MssqlDriver from \"./drivers/MssqlDriver\";\nimport MariaDbDriver from \"./drivers/MariaDbDriver\";\nimport IConnectionOptions from \"./IConnectionOptions\";\nimport IGenerationOptions from \"./IGenerationOptions\";\nimport PostgresDriver from \"./drivers/PostgresDriver\";\nimport MysqlDriver from \"./drivers/MysqlDriver\";\nimport OracleDriver from \"./drivers/OracleDriver\";\nimport SqliteDriver from \"./drivers/SqliteDriver\";\nimport modelCustomizationPhase from \"./ModelCustomization\";\nimport modelGenerationPhase from \"./ModelGeneration\";\nimport { Entity } from \"./models/Entity\";\n\nexport function createDriver(driverName: string): AbstractDriver {\n    switch (driverName) {\n        case \"mssql\":\n            return new MssqlDriver();\n        case \"postgres\":\n            return new PostgresDriver();\n        case \"mysql\":\n            return new MysqlDriver();\n        case \"mariadb\":\n            return new MariaDbDriver();\n        case \"oracle\":\n            return new OracleDriver();\n        case \"sqlite\":\n            return new SqliteDriver();\n        default:\n            TomgUtils.LogError(\"Database engine not recognized.\", false);\n            throw new Error(\"Database engine not recognized.\");\n    }\n}\n\nexport async function createModelFromDatabase(\n    driver: AbstractDriver,\n    connectionOptions: IConnectionOptions,\n    generationOptions: IGenerationOptions\n): Promise<void> {\n    let dbModel = await dataCollectionPhase(\n        driver,\n        connectionOptions,\n        generationOptions\n    );\n    if (dbModel.length === 0) {\n        TomgUtils.LogError(\n            \"Tables not found in selected database. Skipping creation of typeorm model.\",\n            false\n        );\n        return;\n    }\n    dbModel = modelCustomizationPhase(\n        dbModel,\n        generationOptions,\n        driver.defaultValues\n    );\n    modelGenerationPhase(connectionOptions, generationOptions, dbModel);\n}\nexport async function dataCollectionPhase(\n    driver: AbstractDriver,\n    connectionOptions: IConnectionOptions,\n    generationOptions: IGenerationOptions\n): Promise<Entity[]> {\n    return driver.GetDataFromServer(connectionOptions, generationOptions);\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a545b92e39abfe89f01e18e70574d1e1bc782ced"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_2q5sf3adye=function(){return actualCoverage;};return actualCoverage;}cov_2q5sf3adye();cov_2q5sf3adye().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const TomgUtils=(cov_2q5sf3adye().s[1]++,require("./Utils"));const MssqlDriver_1=(cov_2q5sf3adye().s[2]++,require("./drivers/MssqlDriver"));const MariaDbDriver_1=(cov_2q5sf3adye().s[3]++,require("./drivers/MariaDbDriver"));const PostgresDriver_1=(cov_2q5sf3adye().s[4]++,require("./drivers/PostgresDriver"));const MysqlDriver_1=(cov_2q5sf3adye().s[5]++,require("./drivers/MysqlDriver"));const OracleDriver_1=(cov_2q5sf3adye().s[6]++,require("./drivers/OracleDriver"));const SqliteDriver_1=(cov_2q5sf3adye().s[7]++,require("./drivers/SqliteDriver"));const ModelCustomization_1=(cov_2q5sf3adye().s[8]++,require("./ModelCustomization"));const ModelGeneration_1=(cov_2q5sf3adye().s[9]++,require("./ModelGeneration"));function createDriver(driverName){cov_2q5sf3adye().f[0]++;cov_2q5sf3adye().s[10]++;switch(driverName){case"mssql":cov_2q5sf3adye().b[0][0]++;cov_2q5sf3adye().s[11]++;return new MssqlDriver_1.default();case"postgres":cov_2q5sf3adye().b[0][1]++;cov_2q5sf3adye().s[12]++;return new PostgresDriver_1.default();case"mysql":cov_2q5sf3adye().b[0][2]++;cov_2q5sf3adye().s[13]++;return new MysqlDriver_1.default();case"mariadb":cov_2q5sf3adye().b[0][3]++;cov_2q5sf3adye().s[14]++;return new MariaDbDriver_1.default();case"oracle":cov_2q5sf3adye().b[0][4]++;cov_2q5sf3adye().s[15]++;return new OracleDriver_1.default();case"sqlite":cov_2q5sf3adye().b[0][5]++;cov_2q5sf3adye().s[16]++;return new SqliteDriver_1.default();default:cov_2q5sf3adye().b[0][6]++;cov_2q5sf3adye().s[17]++;TomgUtils.LogError("Database engine not recognized.",false);cov_2q5sf3adye().s[18]++;throw new Error("Database engine not recognized.");}}cov_2q5sf3adye().s[19]++;exports.createDriver=createDriver;async function createModelFromDatabase(driver,connectionOptions,generationOptions){cov_2q5sf3adye().f[1]++;let dbModel=(cov_2q5sf3adye().s[20]++,await dataCollectionPhase(driver,connectionOptions,generationOptions));cov_2q5sf3adye().s[21]++;if(dbModel.length===0){cov_2q5sf3adye().b[1][0]++;cov_2q5sf3adye().s[22]++;TomgUtils.LogError("Tables not found in selected database. Skipping creation of typeorm model.",false);cov_2q5sf3adye().s[23]++;return;}else{cov_2q5sf3adye().b[1][1]++;}cov_2q5sf3adye().s[24]++;dbModel=ModelCustomization_1.default(dbModel,generationOptions,driver.defaultValues);cov_2q5sf3adye().s[25]++;ModelGeneration_1.default(connectionOptions,generationOptions,dbModel);}cov_2q5sf3adye().s[26]++;exports.createModelFromDatabase=createModelFromDatabase;async function dataCollectionPhase(driver,connectionOptions,generationOptions){cov_2q5sf3adye().f[2]++;cov_2q5sf3adye().s[27]++;return driver.GetDataFromServer(connectionOptions,generationOptions);}cov_2q5sf3adye().s[28]++;exports.dataCollectionPhase=dataCollectionPhase;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvbmVtby93b3JrL2dpdGh1Yi90eXBlb3JtLW1vZGVsLWdlbmVyYXRvci9zcmMvRW5naW5lLnRzIiwic291cmNlcyI6WyIvaG9tZS9uZW1vL3dvcmsvZ2l0aHViL3R5cGVvcm0tbW9kZWwtZ2VuZXJhdG9yL3NyYy9FbmdpbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBcUM7QUFFckMsdURBQWdEO0FBQ2hELDJEQUFvRDtBQUdwRCw2REFBc0Q7QUFDdEQsdURBQWdEO0FBQ2hELHlEQUFrRDtBQUNsRCx5REFBa0Q7QUFDbEQsNkRBQTJEO0FBQzNELHVEQUFxRDtBQUdyRCxTQUFnQixZQUFZLENBQUMsVUFBa0I7SUFDM0MsUUFBUSxVQUFVLEVBQUU7UUFDaEIsS0FBSyxPQUFPO1lBQ1IsT0FBTyxJQUFJLHFCQUFXLEVBQUUsQ0FBQztRQUM3QixLQUFLLFVBQVU7WUFDWCxPQUFPLElBQUksd0JBQWMsRUFBRSxDQUFDO1FBQ2hDLEtBQUssT0FBTztZQUNSLE9BQU8sSUFBSSxxQkFBVyxFQUFFLENBQUM7UUFDN0IsS0FBSyxTQUFTO1lBQ1YsT0FBTyxJQUFJLHVCQUFhLEVBQUUsQ0FBQztRQUMvQixLQUFLLFFBQVE7WUFDVCxPQUFPLElBQUksc0JBQVksRUFBRSxDQUFDO1FBQzlCLEtBQUssUUFBUTtZQUNULE9BQU8sSUFBSSxzQkFBWSxFQUFFLENBQUM7UUFDOUI7WUFDSSxTQUFTLENBQUMsUUFBUSxDQUFDLGlDQUFpQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQzdELE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQztLQUMxRDtBQUNMLENBQUM7QUFsQkQsb0NBa0JDO0FBRU0sS0FBSyxVQUFVLHVCQUF1QixDQUN6QyxNQUFzQixFQUN0QixpQkFBcUMsRUFDckMsaUJBQXFDO0lBRXJDLElBQUksT0FBTyxHQUFHLE1BQU0sbUJBQW1CLENBQ25DLE1BQU0sRUFDTixpQkFBaUIsRUFDakIsaUJBQWlCLENBQ3BCLENBQUM7SUFDRixJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ3RCLFNBQVMsQ0FBQyxRQUFRLENBQ2QsNEVBQTRFLEVBQzVFLEtBQUssQ0FDUixDQUFDO1FBQ0YsT0FBTztLQUNWO0lBQ0QsT0FBTyxHQUFHLDRCQUF1QixDQUM3QixPQUFPLEVBQ1AsaUJBQWlCLEVBQ2pCLE1BQU0sQ0FBQyxhQUFhLENBQ3ZCLENBQUM7SUFDRix5QkFBb0IsQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBdkJELDBEQXVCQztBQUNNLEtBQUssVUFBVSxtQkFBbUIsQ0FDckMsTUFBc0IsRUFDdEIsaUJBQXFDLEVBQ3JDLGlCQUFxQztJQUVyQyxPQUFPLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQzFFLENBQUM7QUFORCxrREFNQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFRvbWdVdGlscyBmcm9tIFwiLi9VdGlsc1wiO1xuaW1wb3J0IEFic3RyYWN0RHJpdmVyIGZyb20gXCIuL2RyaXZlcnMvQWJzdHJhY3REcml2ZXJcIjtcbmltcG9ydCBNc3NxbERyaXZlciBmcm9tIFwiLi9kcml2ZXJzL01zc3FsRHJpdmVyXCI7XG5pbXBvcnQgTWFyaWFEYkRyaXZlciBmcm9tIFwiLi9kcml2ZXJzL01hcmlhRGJEcml2ZXJcIjtcbmltcG9ydCBJQ29ubmVjdGlvbk9wdGlvbnMgZnJvbSBcIi4vSUNvbm5lY3Rpb25PcHRpb25zXCI7XG5pbXBvcnQgSUdlbmVyYXRpb25PcHRpb25zIGZyb20gXCIuL0lHZW5lcmF0aW9uT3B0aW9uc1wiO1xuaW1wb3J0IFBvc3RncmVzRHJpdmVyIGZyb20gXCIuL2RyaXZlcnMvUG9zdGdyZXNEcml2ZXJcIjtcbmltcG9ydCBNeXNxbERyaXZlciBmcm9tIFwiLi9kcml2ZXJzL015c3FsRHJpdmVyXCI7XG5pbXBvcnQgT3JhY2xlRHJpdmVyIGZyb20gXCIuL2RyaXZlcnMvT3JhY2xlRHJpdmVyXCI7XG5pbXBvcnQgU3FsaXRlRHJpdmVyIGZyb20gXCIuL2RyaXZlcnMvU3FsaXRlRHJpdmVyXCI7XG5pbXBvcnQgbW9kZWxDdXN0b21pemF0aW9uUGhhc2UgZnJvbSBcIi4vTW9kZWxDdXN0b21pemF0aW9uXCI7XG5pbXBvcnQgbW9kZWxHZW5lcmF0aW9uUGhhc2UgZnJvbSBcIi4vTW9kZWxHZW5lcmF0aW9uXCI7XG5pbXBvcnQgeyBFbnRpdHkgfSBmcm9tIFwiLi9tb2RlbHMvRW50aXR5XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEcml2ZXIoZHJpdmVyTmFtZTogc3RyaW5nKTogQWJzdHJhY3REcml2ZXIge1xuICAgIHN3aXRjaCAoZHJpdmVyTmFtZSkge1xuICAgICAgICBjYXNlIFwibXNzcWxcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgTXNzcWxEcml2ZXIoKTtcbiAgICAgICAgY2FzZSBcInBvc3RncmVzXCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IFBvc3RncmVzRHJpdmVyKCk7XG4gICAgICAgIGNhc2UgXCJteXNxbFwiOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBNeXNxbERyaXZlcigpO1xuICAgICAgICBjYXNlIFwibWFyaWFkYlwiOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBNYXJpYURiRHJpdmVyKCk7XG4gICAgICAgIGNhc2UgXCJvcmFjbGVcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgT3JhY2xlRHJpdmVyKCk7XG4gICAgICAgIGNhc2UgXCJzcWxpdGVcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgU3FsaXRlRHJpdmVyKCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBUb21nVXRpbHMuTG9nRXJyb3IoXCJEYXRhYmFzZSBlbmdpbmUgbm90IHJlY29nbml6ZWQuXCIsIGZhbHNlKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRhdGFiYXNlIGVuZ2luZSBub3QgcmVjb2duaXplZC5cIik7XG4gICAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlTW9kZWxGcm9tRGF0YWJhc2UoXG4gICAgZHJpdmVyOiBBYnN0cmFjdERyaXZlcixcbiAgICBjb25uZWN0aW9uT3B0aW9uczogSUNvbm5lY3Rpb25PcHRpb25zLFxuICAgIGdlbmVyYXRpb25PcHRpb25zOiBJR2VuZXJhdGlvbk9wdGlvbnNcbik6IFByb21pc2U8dm9pZD4ge1xuICAgIGxldCBkYk1vZGVsID0gYXdhaXQgZGF0YUNvbGxlY3Rpb25QaGFzZShcbiAgICAgICAgZHJpdmVyLFxuICAgICAgICBjb25uZWN0aW9uT3B0aW9ucyxcbiAgICAgICAgZ2VuZXJhdGlvbk9wdGlvbnNcbiAgICApO1xuICAgIGlmIChkYk1vZGVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBUb21nVXRpbHMuTG9nRXJyb3IoXG4gICAgICAgICAgICBcIlRhYmxlcyBub3QgZm91bmQgaW4gc2VsZWN0ZWQgZGF0YWJhc2UuIFNraXBwaW5nIGNyZWF0aW9uIG9mIHR5cGVvcm0gbW9kZWwuXCIsXG4gICAgICAgICAgICBmYWxzZVxuICAgICAgICApO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRiTW9kZWwgPSBtb2RlbEN1c3RvbWl6YXRpb25QaGFzZShcbiAgICAgICAgZGJNb2RlbCxcbiAgICAgICAgZ2VuZXJhdGlvbk9wdGlvbnMsXG4gICAgICAgIGRyaXZlci5kZWZhdWx0VmFsdWVzXG4gICAgKTtcbiAgICBtb2RlbEdlbmVyYXRpb25QaGFzZShjb25uZWN0aW9uT3B0aW9ucywgZ2VuZXJhdGlvbk9wdGlvbnMsIGRiTW9kZWwpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRhdGFDb2xsZWN0aW9uUGhhc2UoXG4gICAgZHJpdmVyOiBBYnN0cmFjdERyaXZlcixcbiAgICBjb25uZWN0aW9uT3B0aW9uczogSUNvbm5lY3Rpb25PcHRpb25zLFxuICAgIGdlbmVyYXRpb25PcHRpb25zOiBJR2VuZXJhdGlvbk9wdGlvbnNcbik6IFByb21pc2U8RW50aXR5W10+IHtcbiAgICByZXR1cm4gZHJpdmVyLkdldERhdGFGcm9tU2VydmVyKGNvbm5lY3Rpb25PcHRpb25zLCBnZW5lcmF0aW9uT3B0aW9ucyk7XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL25lbW8vd29yay9naXRodWIvdHlwZW9ybS1tb2RlbC1nZW5lcmF0b3Ivc3JjL0VuZ2luZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiaXhPQUFBLEtBQUEsQ0FBQSxTQUFBLDBCQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQSxDQUVBLEtBQUEsQ0FBQSxhQUFBLDBCQUFBLE9BQUEsQ0FBQSx1QkFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsZUFBQSwwQkFBQSxPQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBLENBR0EsS0FBQSxDQUFBLGdCQUFBLDBCQUFBLE9BQUEsQ0FBQSwwQkFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsYUFBQSwwQkFBQSxPQUFBLENBQUEsdUJBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLGNBQUEsMEJBQUEsT0FBQSxDQUFBLHdCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxjQUFBLDBCQUFBLE9BQUEsQ0FBQSx3QkFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsb0JBQUEsMEJBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxpQkFBQSwwQkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLENBR0EsUUFBZ0IsQ0FBQSxZQUFoQixDQUE2QixVQUE3QixDQUErQyxrREFDM0MsT0FBUSxVQUFSLEVBQ0ksSUFBSyxPQUFMLHFEQUNJLE1BQU8sSUFBSSxDQUFBLGFBQUEsQ0FBQSxPQUFKLEVBQVAsQ0FDSixJQUFLLFVBQUwscURBQ0ksTUFBTyxJQUFJLENBQUEsZ0JBQUEsQ0FBQSxPQUFKLEVBQVAsQ0FDSixJQUFLLE9BQUwscURBQ0ksTUFBTyxJQUFJLENBQUEsYUFBQSxDQUFBLE9BQUosRUFBUCxDQUNKLElBQUssU0FBTCxxREFDSSxNQUFPLElBQUksQ0FBQSxlQUFBLENBQUEsT0FBSixFQUFQLENBQ0osSUFBSyxRQUFMLHFEQUNJLE1BQU8sSUFBSSxDQUFBLGNBQUEsQ0FBQSxPQUFKLEVBQVAsQ0FDSixJQUFLLFFBQUwscURBQ0ksTUFBTyxJQUFJLENBQUEsY0FBQSxDQUFBLE9BQUosRUFBUCxDQUNKLDREQUNJLFNBQVMsQ0FBQyxRQUFWLENBQW1CLGlDQUFuQixDQUFzRCxLQUF0RCxFQURKLHlCQUVJLEtBQU0sSUFBSSxDQUFBLEtBQUosQ0FBVSxpQ0FBVixDQUFOLENBZlIsQ0FpQkgsQyx5QkFsQkQsT0FBQSxDQUFBLFlBQUEsQ0FBQSxZQUFBLENBb0JPLGNBQWUsQ0FBQSx1QkFBZixDQUNILE1BREcsQ0FFSCxpQkFGRyxDQUdILGlCQUhHLENBR2tDLHlCQUVyQyxHQUFJLENBQUEsT0FBTywyQkFBRyxLQUFNLENBQUEsbUJBQW1CLENBQ25DLE1BRG1DLENBRW5DLGlCQUZtQyxDQUduQyxpQkFIbUMsQ0FBNUIsQ0FBWCxDQUZxQyx5QkFPckMsR0FBSSxPQUFPLENBQUMsTUFBUixHQUFtQixDQUF2QixDQUEwQixxREFDdEIsU0FBUyxDQUFDLFFBQVYsQ0FDSSw0RUFESixDQUVJLEtBRkosRUFEc0IseUJBS3RCLE9BQ0gsQ0FORCxpQ0FQcUMseUJBY3JDLE9BQU8sQ0FBRyxvQkFBQSxDQUFBLE9BQUEsQ0FDTixPQURNLENBRU4saUJBRk0sQ0FHTixNQUFNLENBQUMsYUFIRCxDQUFWLENBZHFDLHlCQW1CckMsaUJBQUEsQ0FBQSxPQUFBLENBQXFCLGlCQUFyQixDQUF3QyxpQkFBeEMsQ0FBMkQsT0FBM0QsRUFDSCxDLHlCQXZCRCxPQUFBLENBQUEsdUJBQUEsQ0FBQSx1QkFBQSxDQXdCTyxjQUFlLENBQUEsbUJBQWYsQ0FDSCxNQURHLENBRUgsaUJBRkcsQ0FHSCxpQkFIRyxDQUdrQyxrREFFckMsTUFBTyxDQUFBLE1BQU0sQ0FBQyxpQkFBUCxDQUF5QixpQkFBekIsQ0FBNEMsaUJBQTVDLENBQVAsQ0FDSCxDLHlCQU5ELE9BQUEsQ0FBQSxtQkFBQSxDQUFBLG1CQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBUb21nVXRpbHMgZnJvbSBcIi4vVXRpbHNcIjtcbmltcG9ydCBBYnN0cmFjdERyaXZlciBmcm9tIFwiLi9kcml2ZXJzL0Fic3RyYWN0RHJpdmVyXCI7XG5pbXBvcnQgTXNzcWxEcml2ZXIgZnJvbSBcIi4vZHJpdmVycy9Nc3NxbERyaXZlclwiO1xuaW1wb3J0IE1hcmlhRGJEcml2ZXIgZnJvbSBcIi4vZHJpdmVycy9NYXJpYURiRHJpdmVyXCI7XG5pbXBvcnQgSUNvbm5lY3Rpb25PcHRpb25zIGZyb20gXCIuL0lDb25uZWN0aW9uT3B0aW9uc1wiO1xuaW1wb3J0IElHZW5lcmF0aW9uT3B0aW9ucyBmcm9tIFwiLi9JR2VuZXJhdGlvbk9wdGlvbnNcIjtcbmltcG9ydCBQb3N0Z3Jlc0RyaXZlciBmcm9tIFwiLi9kcml2ZXJzL1Bvc3RncmVzRHJpdmVyXCI7XG5pbXBvcnQgTXlzcWxEcml2ZXIgZnJvbSBcIi4vZHJpdmVycy9NeXNxbERyaXZlclwiO1xuaW1wb3J0IE9yYWNsZURyaXZlciBmcm9tIFwiLi9kcml2ZXJzL09yYWNsZURyaXZlclwiO1xuaW1wb3J0IFNxbGl0ZURyaXZlciBmcm9tIFwiLi9kcml2ZXJzL1NxbGl0ZURyaXZlclwiO1xuaW1wb3J0IG1vZGVsQ3VzdG9taXphdGlvblBoYXNlIGZyb20gXCIuL01vZGVsQ3VzdG9taXphdGlvblwiO1xuaW1wb3J0IG1vZGVsR2VuZXJhdGlvblBoYXNlIGZyb20gXCIuL01vZGVsR2VuZXJhdGlvblwiO1xuaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIi4vbW9kZWxzL0VudGl0eVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRHJpdmVyKGRyaXZlck5hbWU6IHN0cmluZyk6IEFic3RyYWN0RHJpdmVyIHtcbiAgICBzd2l0Y2ggKGRyaXZlck5hbWUpIHtcbiAgICAgICAgY2FzZSBcIm1zc3FsXCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1zc3FsRHJpdmVyKCk7XG4gICAgICAgIGNhc2UgXCJwb3N0Z3Jlc1wiOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBQb3N0Z3Jlc0RyaXZlcigpO1xuICAgICAgICBjYXNlIFwibXlzcWxcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgTXlzcWxEcml2ZXIoKTtcbiAgICAgICAgY2FzZSBcIm1hcmlhZGJcIjpcbiAgICAgICAgICAgIHJldHVybiBuZXcgTWFyaWFEYkRyaXZlcigpO1xuICAgICAgICBjYXNlIFwib3JhY2xlXCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IE9yYWNsZURyaXZlcigpO1xuICAgICAgICBjYXNlIFwic3FsaXRlXCI6XG4gICAgICAgICAgICByZXR1cm4gbmV3IFNxbGl0ZURyaXZlcigpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgVG9tZ1V0aWxzLkxvZ0Vycm9yKFwiRGF0YWJhc2UgZW5naW5lIG5vdCByZWNvZ25pemVkLlwiLCBmYWxzZSk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEYXRhYmFzZSBlbmdpbmUgbm90IHJlY29nbml6ZWQuXCIpO1xuICAgIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU1vZGVsRnJvbURhdGFiYXNlKFxuICAgIGRyaXZlcjogQWJzdHJhY3REcml2ZXIsXG4gICAgY29ubmVjdGlvbk9wdGlvbnM6IElDb25uZWN0aW9uT3B0aW9ucyxcbiAgICBnZW5lcmF0aW9uT3B0aW9uczogSUdlbmVyYXRpb25PcHRpb25zXG4pOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBsZXQgZGJNb2RlbCA9IGF3YWl0IGRhdGFDb2xsZWN0aW9uUGhhc2UoXG4gICAgICAgIGRyaXZlcixcbiAgICAgICAgY29ubmVjdGlvbk9wdGlvbnMsXG4gICAgICAgIGdlbmVyYXRpb25PcHRpb25zXG4gICAgKTtcbiAgICBpZiAoZGJNb2RlbC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgVG9tZ1V0aWxzLkxvZ0Vycm9yKFxuICAgICAgICAgICAgXCJUYWJsZXMgbm90IGZvdW5kIGluIHNlbGVjdGVkIGRhdGFiYXNlLiBTa2lwcGluZyBjcmVhdGlvbiBvZiB0eXBlb3JtIG1vZGVsLlwiLFxuICAgICAgICAgICAgZmFsc2VcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkYk1vZGVsID0gbW9kZWxDdXN0b21pemF0aW9uUGhhc2UoXG4gICAgICAgIGRiTW9kZWwsXG4gICAgICAgIGdlbmVyYXRpb25PcHRpb25zLFxuICAgICAgICBkcml2ZXIuZGVmYXVsdFZhbHVlc1xuICAgICk7XG4gICAgbW9kZWxHZW5lcmF0aW9uUGhhc2UoY29ubmVjdGlvbk9wdGlvbnMsIGdlbmVyYXRpb25PcHRpb25zLCBkYk1vZGVsKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkYXRhQ29sbGVjdGlvblBoYXNlKFxuICAgIGRyaXZlcjogQWJzdHJhY3REcml2ZXIsXG4gICAgY29ubmVjdGlvbk9wdGlvbnM6IElDb25uZWN0aW9uT3B0aW9ucyxcbiAgICBnZW5lcmF0aW9uT3B0aW9uczogSUdlbmVyYXRpb25PcHRpb25zXG4pOiBQcm9taXNlPEVudGl0eVtdPiB7XG4gICAgcmV0dXJuIGRyaXZlci5HZXREYXRhRnJvbVNlcnZlcihjb25uZWN0aW9uT3B0aW9ucywgZ2VuZXJhdGlvbk9wdGlvbnMpO1xufVxuIl19