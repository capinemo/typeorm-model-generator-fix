"use strict";function cov_j0z60mfgv(){var path="/home/nemo/work/github/typeorm-model-generator/src/ModelCustomization.ts";var hash="95b9726dfb9b687e3167ed3c684682d26b5261ed";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/nemo/work/github/typeorm-model-generator/src/ModelCustomization.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:32},end:{line:3,column:88}},"2":{start:{line:4,column:23},end:{line:4,column:50}},"3":{start:{line:5,column:18},end:{line:5,column:36}},"4":{start:{line:7,column:27},end:{line:13,column:5}},"5":{start:{line:14,column:4},end:{line:53,column:5}},"6":{start:{line:17,column:20},end:{line:17,column:90}},"7":{start:{line:18,column:8},end:{line:24,column:9}},"8":{start:{line:19,column:12},end:{line:19,column:111}},"9":{start:{line:20,column:12},end:{line:20,column:55}},"10":{start:{line:23,column:12},end:{line:23,column:113}},"11":{start:{line:25,column:8},end:{line:31,column:9}},"12":{start:{line:26,column:12},end:{line:26,column:111}},"13":{start:{line:27,column:12},end:{line:27,column:55}},"14":{start:{line:30,column:12},end:{line:30,column:113}},"15":{start:{line:32,column:8},end:{line:38,column:9}},"16":{start:{line:33,column:12},end:{line:33,column:121}},"17":{start:{line:34,column:12},end:{line:34,column:63}},"18":{start:{line:37,column:12},end:{line:37,column:123}},"19":{start:{line:39,column:8},end:{line:45,column:9}},"20":{start:{line:40,column:12},end:{line:40,column:119}},"21":{start:{line:41,column:12},end:{line:41,column:59}},"22":{start:{line:44,column:12},end:{line:44,column:121}},"23":{start:{line:46,column:8},end:{line:52,column:9}},"24":{start:{line:47,column:12},end:{line:47,column:146}},"25":{start:{line:48,column:12},end:{line:48,column:73}},"26":{start:{line:51,column:12},end:{line:51,column:146}},"27":{start:{line:54,column:4},end:{line:54,column:73}},"28":{start:{line:55,column:17},end:{line:55,column:57}},"29":{start:{line:56,column:4},end:{line:56,column:46}},"30":{start:{line:57,column:4},end:{line:57,column:58}},"31":{start:{line:58,column:4},end:{line:58,column:71}},"32":{start:{line:59,column:4},end:{line:59,column:66}},"33":{start:{line:60,column:4},end:{line:60,column:18}},"34":{start:{line:62,column:0},end:{line:62,column:42}},"35":{start:{line:65,column:27},end:{line:65,column:78}},"36":{start:{line:66,column:4},end:{line:83,column:7}},"37":{start:{line:67,column:8},end:{line:68,column:50}},"38":{start:{line:67,column:54},end:{line:68,column:48}},"39":{start:{line:69,column:31},end:{line:71,column:34}},"40":{start:{line:70,column:27},end:{line:70,column:36}},"41":{start:{line:71,column:24},end:{line:71,column:33}},"42":{start:{line:72,column:8},end:{line:74,column:80}},"43":{start:{line:72,column:54},end:{line:74,column:78}},"44":{start:{line:75,column:8},end:{line:82,column:11}},"45":{start:{line:76,column:27},end:{line:76,column:46}},"46":{start:{line:78,column:32},end:{line:78,column:72}},"47":{start:{line:78,column:65},end:{line:78,column:71}},"48":{start:{line:79,column:28},end:{line:79,column:94}},"49":{start:{line:80,column:27},end:{line:80,column:85}},"50":{start:{line:81,column:12},end:{line:81,column:99}},"51":{start:{line:81,column:58},end:{line:81,column:97}},"52":{start:{line:84,column:4},end:{line:84,column:19}},"53":{start:{line:87,column:4},end:{line:92,column:7}},"54":{start:{line:88,column:8},end:{line:91,column:25}},"55":{start:{line:88,column:56},end:{line:91,column:23}},"56":{start:{line:90,column:41},end:{line:90,column:83}},"57":{start:{line:90,column:65},end:{line:90,column:82}},"58":{start:{line:93,column:4},end:{line:93,column:19}},"59":{start:{line:96,column:4},end:{line:98,column:5}},"60":{start:{line:97,column:8},end:{line:97,column:23}},"61":{start:{line:99,column:4},end:{line:124,column:7}},"62":{start:{line:100,column:8},end:{line:123,column:11}},"63":{start:{line:101,column:27},end:{line:101,column:56}},"64":{start:{line:102,column:12},end:{line:122,column:13}},"65":{start:{line:103,column:16},end:{line:107,column:17}},"66":{start:{line:106,column:20},end:{line:106,column:54}},"67":{start:{line:108,column:16},end:{line:116,column:17}},"68":{start:{line:114,column:20},end:{line:114,column:57}},"69":{start:{line:115,column:20},end:{line:115,column:53}},"70":{start:{line:117,column:16},end:{line:121,column:17}},"71":{start:{line:120,column:20},end:{line:120,column:53}},"72":{start:{line:125,column:4},end:{line:125,column:19}},"73":{start:{line:128,column:4},end:{line:135,column:7}},"74":{start:{line:129,column:8},end:{line:134,column:11}},"75":{start:{line:130,column:12},end:{line:133,column:13}},"76":{start:{line:131,column:48},end:{line:131,column:75}},"77":{start:{line:132,column:16},end:{line:132,column:63}},"78":{start:{line:136,column:4},end:{line:136,column:19}},"79":{start:{line:139,column:4},end:{line:139,column:39}},"80":{start:{line:140,column:4},end:{line:159,column:7}},"81":{start:{line:141,column:8},end:{line:148,column:11}},"82":{start:{line:142,column:12},end:{line:147,column:13}},"83":{start:{line:143,column:16},end:{line:145,column:17}},"84":{start:{line:144,column:20},end:{line:144,column:50}},"85":{start:{line:146,column:16},end:{line:146,column:53}},"86":{start:{line:149,column:8},end:{line:152,column:9}},"87":{start:{line:150,column:12},end:{line:150,column:38}},"88":{start:{line:151,column:12},end:{line:151,column:40}},"89":{start:{line:153,column:8},end:{line:155,column:9}},"90":{start:{line:154,column:12},end:{line:154,column:39}},"91":{start:{line:156,column:8},end:{line:158,column:9}},"92":{start:{line:157,column:12},end:{line:157,column:46}},"93":{start:{line:160,column:4},end:{line:160,column:19}},"94":{start:{line:163,column:17},end:{line:163,column:45}},"95":{start:{line:164,column:4},end:{line:164,column:43}},"96":{start:{line:165,column:4},end:{line:165,column:39}},"97":{start:{line:166,column:4},end:{line:166,column:39}},"98":{start:{line:167,column:4},end:{line:167,column:18}},"99":{start:{line:169,column:8},end:{line:180,column:11}},"100":{start:{line:170,column:12},end:{line:179,column:15}},"101":{start:{line:171,column:32},end:{line:171,column:52}},"102":{start:{line:172,column:33},end:{line:172,column:103}},"103":{start:{line:172,column:62},end:{line:172,column:102}},"104":{start:{line:173,column:30},end:{line:173,column:89}},"105":{start:{line:174,column:16},end:{line:174,column:82}},"106":{start:{line:175,column:16},end:{line:177,column:19}},"107":{start:{line:176,column:20},end:{line:176,column:108}},"108":{start:{line:176,column:67},end:{line:176,column:106}},"109":{start:{line:178,column:16},end:{line:178,column:47}},"110":{start:{line:181,column:8},end:{line:181,column:23}},"111":{start:{line:184,column:8},end:{line:204,column:11}},"112":{start:{line:185,column:12},end:{line:203,column:15}},"113":{start:{line:186,column:32},end:{line:186,column:50}},"114":{start:{line:187,column:30},end:{line:187,column:75}},"115":{start:{line:188,column:16},end:{line:188,column:82}},"116":{start:{line:189,column:38},end:{line:189,column:92}},"117":{start:{line:189,column:56},end:{line:189,column:91}},"118":{start:{line:190,column:34},end:{line:190,column:108}},"119":{start:{line:190,column:70},end:{line:190,column:107}},"120":{start:{line:191,column:16},end:{line:195,column:19}},"121":{start:{line:192,column:35},end:{line:192,column:62}},"122":{start:{line:194,column:20},end:{line:194,column:46}},"123":{start:{line:196,column:16},end:{line:196,column:45}},"124":{start:{line:197,column:16},end:{line:197,column:49}},"125":{start:{line:198,column:16},end:{line:202,column:17}},"126":{start:{line:199,column:20},end:{line:201,column:23}},"127":{start:{line:200,column:24},end:{line:200,column:94}},"128":{start:{line:200,column:53},end:{line:200,column:92}},"129":{start:{line:205,column:8},end:{line:205,column:23}},"130":{start:{line:208,column:8},end:{line:218,column:11}},"131":{start:{line:209,column:12},end:{line:217,column:15}},"132":{start:{line:210,column:32},end:{line:210,column:46}},"133":{start:{line:211,column:30},end:{line:211,column:79}},"134":{start:{line:212,column:16},end:{line:212,column:82}},"135":{start:{line:213,column:16},end:{line:215,column:19}},"136":{start:{line:214,column:20},end:{line:214,column:108}},"137":{start:{line:214,column:67},end:{line:214,column:106}},"138":{start:{line:216,column:16},end:{line:216,column:41}},"139":{start:{line:219,column:8},end:{line:219,column:21}},"140":{start:{line:222,column:8},end:{line:232,column:11}},"141":{start:{line:223,column:28},end:{line:223,column:77}},"142":{start:{line:224,column:12},end:{line:230,column:15}},"143":{start:{line:225,column:16},end:{line:229,column:19}},"144":{start:{line:226,column:20},end:{line:228,column:21}},"145":{start:{line:227,column:24},end:{line:227,column:56}},"146":{start:{line:231,column:12},end:{line:231,column:37}},"147":{start:{line:233,column:8},end:{line:233,column:24}}},fnMap:{"0":{name:"modelCustomizationPhase",decl:{start:{line:6,column:9},end:{line:6,column:32}},loc:{start:{line:6,column:76},end:{line:61,column:1}},line:6},"1":{name:"removeIndicesGeneratedByTypeorm",decl:{start:{line:63,column:9},end:{line:63,column:40}},loc:{start:{line:63,column:50},end:{line:85,column:1}},line:63},"2":{name:"(anonymous_2)",decl:{start:{line:66,column:20},end:{line:66,column:21}},loc:{start:{line:66,column:32},end:{line:83,column:5}},line:66},"3":{name:"(anonymous_3)",decl:{start:{line:67,column:47},end:{line:67,column:48}},loc:{start:{line:67,column:54},end:{line:68,column:48}},line:67},"4":{name:"(anonymous_4)",decl:{start:{line:70,column:20},end:{line:70,column:21}},loc:{start:{line:70,column:27},end:{line:70,column:36}},line:70},"5":{name:"(anonymous_5)",decl:{start:{line:71,column:17},end:{line:71,column:18}},loc:{start:{line:71,column:24},end:{line:71,column:33}},line:71},"6":{name:"(anonymous_6)",decl:{start:{line:72,column:47},end:{line:72,column:48}},loc:{start:{line:72,column:54},end:{line:74,column:78}},line:72},"7":{name:"(anonymous_7)",decl:{start:{line:76,column:20},end:{line:76,column:21}},loc:{start:{line:76,column:27},end:{line:76,column:46}},line:76},"8":{name:"(anonymous_8)",decl:{start:{line:77,column:21},end:{line:77,column:22}},loc:{start:{line:77,column:30},end:{line:82,column:9}},line:77},"9":{name:"(anonymous_9)",decl:{start:{line:78,column:58},end:{line:78,column:59}},loc:{start:{line:78,column:65},end:{line:78,column:71}},line:78},"10":{name:"(anonymous_10)",decl:{start:{line:81,column:51},end:{line:81,column:52}},loc:{start:{line:81,column:58},end:{line:81,column:97}},line:81},"11":{name:"removeColumnsInRelation",decl:{start:{line:86,column:9},end:{line:86,column:32}},loc:{start:{line:86,column:42},end:{line:94,column:1}},line:86},"12":{name:"(anonymous_12)",decl:{start:{line:87,column:20},end:{line:87,column:21}},loc:{start:{line:87,column:32},end:{line:92,column:5}},line:87},"13":{name:"(anonymous_13)",decl:{start:{line:88,column:47},end:{line:88,column:48}},loc:{start:{line:88,column:56},end:{line:91,column:23}},line:88},"14":{name:"(anonymous_14)",decl:{start:{line:90,column:32},end:{line:90,column:33}},loc:{start:{line:90,column:41},end:{line:90,column:83}},line:90},"15":{name:"(anonymous_15)",decl:{start:{line:90,column:58},end:{line:90,column:59}},loc:{start:{line:90,column:65},end:{line:90,column:82}},line:90},"16":{name:"removeColumnDefaultProperties",decl:{start:{line:95,column:9},end:{line:95,column:38}},loc:{start:{line:95,column:63},end:{line:126,column:1}},line:95},"17":{name:"(anonymous_17)",decl:{start:{line:99,column:20},end:{line:99,column:21}},loc:{start:{line:99,column:32},end:{line:124,column:5}},line:99},"18":{name:"(anonymous_18)",decl:{start:{line:100,column:31},end:{line:100,column:32}},loc:{start:{line:100,column:43},end:{line:123,column:9}},line:100},"19":{name:"findFileImports",decl:{start:{line:127,column:9},end:{line:127,column:24}},loc:{start:{line:127,column:34},end:{line:137,column:1}},line:127},"20":{name:"(anonymous_20)",decl:{start:{line:128,column:20},end:{line:128,column:21}},loc:{start:{line:128,column:32},end:{line:135,column:5}},line:128},"21":{name:"(anonymous_21)",decl:{start:{line:129,column:33},end:{line:129,column:34}},loc:{start:{line:129,column:47},end:{line:134,column:9}},line:129},"22":{name:"(anonymous_22)",decl:{start:{line:131,column:41},end:{line:131,column:42}},loc:{start:{line:131,column:48},end:{line:131,column:75}},line:131},"23":{name:"addImportsAndGenerationOptions",decl:{start:{line:138,column:9},end:{line:138,column:39}},loc:{start:{line:138,column:68},end:{line:161,column:1}},line:138},"24":{name:"(anonymous_24)",decl:{start:{line:140,column:20},end:{line:140,column:21}},loc:{start:{line:140,column:32},end:{line:159,column:5}},line:140},"25":{name:"(anonymous_25)",decl:{start:{line:141,column:33},end:{line:141,column:34}},loc:{start:{line:141,column:47},end:{line:148,column:9}},line:141},"26":{name:"applyNamingStrategy",decl:{start:{line:162,column:9},end:{line:162,column:28}},loc:{start:{line:162,column:54},end:{line:235,column:1}},line:162},"27":{name:"changeRelationIdNames",decl:{start:{line:168,column:13},end:{line:168,column:34}},loc:{start:{line:168,column:42},end:{line:182,column:5}},line:168},"28":{name:"(anonymous_28)",decl:{start:{line:169,column:22},end:{line:169,column:23}},loc:{start:{line:169,column:34},end:{line:180,column:9}},line:169},"29":{name:"(anonymous_29)",decl:{start:{line:170,column:39},end:{line:170,column:40}},loc:{start:{line:170,column:55},end:{line:179,column:13}},line:170},"30":{name:"(anonymous_30)",decl:{start:{line:172,column:55},end:{line:172,column:56}},loc:{start:{line:172,column:62},end:{line:172,column:102}},line:172},"31":{name:"(anonymous_31)",decl:{start:{line:175,column:39},end:{line:175,column:40}},loc:{start:{line:175,column:50},end:{line:177,column:17}},line:175},"32":{name:"(anonymous_32)",decl:{start:{line:176,column:54},end:{line:176,column:55}},loc:{start:{line:176,column:67},end:{line:176,column:106}},line:176},"33":{name:"changeRelationNames",decl:{start:{line:183,column:13},end:{line:183,column:32}},loc:{start:{line:183,column:40},end:{line:206,column:5}},line:183},"34":{name:"(anonymous_34)",decl:{start:{line:184,column:22},end:{line:184,column:23}},loc:{start:{line:184,column:34},end:{line:204,column:9}},line:184},"35":{name:"(anonymous_35)",decl:{start:{line:185,column:37},end:{line:185,column:38}},loc:{start:{line:185,column:51},end:{line:203,column:13}},line:185},"36":{name:"(anonymous_36)",decl:{start:{line:189,column:49},end:{line:189,column:50}},loc:{start:{line:189,column:56},end:{line:189,column:91}},line:189},"37":{name:"(anonymous_37)",decl:{start:{line:190,column:63},end:{line:190,column:64}},loc:{start:{line:190,column:70},end:{line:190,column:107}},line:190},"38":{name:"(anonymous_38)",decl:{start:{line:192,column:28},end:{line:192,column:29}},loc:{start:{line:192,column:35},end:{line:192,column:62}},line:192},"39":{name:"(anonymous_39)",decl:{start:{line:193,column:29},end:{line:193,column:30}},loc:{start:{line:193,column:36},end:{line:195,column:17}},line:193},"40":{name:"(anonymous_40)",decl:{start:{line:199,column:43},end:{line:199,column:44}},loc:{start:{line:199,column:52},end:{line:201,column:21}},line:199},"41":{name:"(anonymous_41)",decl:{start:{line:200,column:40},end:{line:200,column:41}},loc:{start:{line:200,column:53},end:{line:200,column:92}},line:200},"42":{name:"changeColumnNames",decl:{start:{line:207,column:13},end:{line:207,column:30}},loc:{start:{line:207,column:38},end:{line:220,column:5}},line:207},"43":{name:"(anonymous_43)",decl:{start:{line:208,column:22},end:{line:208,column:23}},loc:{start:{line:208,column:34},end:{line:218,column:9}},line:208},"44":{name:"(anonymous_44)",decl:{start:{line:209,column:35},end:{line:209,column:36}},loc:{start:{line:209,column:47},end:{line:217,column:13}},line:209},"45":{name:"(anonymous_45)",decl:{start:{line:213,column:39},end:{line:213,column:40}},loc:{start:{line:213,column:50},end:{line:215,column:17}},line:213},"46":{name:"(anonymous_46)",decl:{start:{line:214,column:54},end:{line:214,column:55}},loc:{start:{line:214,column:67},end:{line:214,column:106}},line:214},"47":{name:"changeEntityNames",decl:{start:{line:221,column:13},end:{line:221,column:30}},loc:{start:{line:221,column:41},end:{line:234,column:5}},line:221},"48":{name:"(anonymous_48)",decl:{start:{line:222,column:25},end:{line:222,column:26}},loc:{start:{line:222,column:37},end:{line:232,column:9}},line:222},"49":{name:"(anonymous_49)",decl:{start:{line:224,column:29},end:{line:224,column:30}},loc:{start:{line:224,column:42},end:{line:230,column:13}},line:224},"50":{name:"(anonymous_50)",decl:{start:{line:225,column:42},end:{line:225,column:43}},loc:{start:{line:225,column:56},end:{line:229,column:17}},line:225}},branchMap:{"0":{loc:{start:{line:14,column:4},end:{line:53,column:5}},type:"if",locations:[{start:{line:14,column:4},end:{line:53,column:5}},{start:{line:14,column:4},end:{line:53,column:5}}],line:14},"1":{loc:{start:{line:14,column:8},end:{line:15,column:57}},type:"binary-expr",locations:[{start:{line:14,column:8},end:{line:14,column:50}},{start:{line:15,column:8},end:{line:15,column:57}}],line:14},"2":{loc:{start:{line:18,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:24,column:9}},{start:{line:18,column:8},end:{line:24,column:9}}],line:18},"3":{loc:{start:{line:25,column:8},end:{line:31,column:9}},type:"if",locations:[{start:{line:25,column:8},end:{line:31,column:9}},{start:{line:25,column:8},end:{line:31,column:9}}],line:25},"4":{loc:{start:{line:32,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:32,column:8},end:{line:38,column:9}},{start:{line:32,column:8},end:{line:38,column:9}}],line:32},"5":{loc:{start:{line:39,column:8},end:{line:45,column:9}},type:"if",locations:[{start:{line:39,column:8},end:{line:45,column:9}},{start:{line:39,column:8},end:{line:45,column:9}}],line:39},"6":{loc:{start:{line:46,column:8},end:{line:52,column:9}},type:"if",locations:[{start:{line:46,column:8},end:{line:52,column:9}},{start:{line:46,column:8},end:{line:52,column:9}}],line:46},"7":{loc:{start:{line:67,column:56},end:{line:68,column:47}},type:"binary-expr",locations:[{start:{line:67,column:56},end:{line:67,column:94}},{start:{line:68,column:13},end:{line:68,column:22}},{start:{line:68,column:26},end:{line:68,column:46}}],line:67},"8":{loc:{start:{line:72,column:56},end:{line:74,column:77}},type:"binary-expr",locations:[{start:{line:72,column:56},end:{line:72,column:65}},{start:{line:73,column:12},end:{line:74,column:77}}],line:72},"9":{loc:{start:{line:81,column:58},end:{line:81,column:97}},type:"binary-expr",locations:[{start:{line:81,column:58},end:{line:81,column:76}},{start:{line:81,column:80},end:{line:81,column:97}}],line:81},"10":{loc:{start:{line:88,column:56},end:{line:91,column:23}},type:"binary-expr",locations:[{start:{line:88,column:56},end:{line:88,column:84}},{start:{line:89,column:12},end:{line:89,column:44}},{start:{line:90,column:12},end:{line:90,column:84}},{start:{line:91,column:12},end:{line:91,column:23}}],line:88},"11":{loc:{start:{line:96,column:4},end:{line:98,column:5}},type:"if",locations:[{start:{line:96,column:4},end:{line:98,column:5}},{start:{line:96,column:4},end:{line:98,column:5}}],line:96},"12":{loc:{start:{line:102,column:12},end:{line:122,column:13}},type:"if",locations:[{start:{line:102,column:12},end:{line:122,column:13}},{start:{line:102,column:12},end:{line:122,column:13}}],line:102},"13":{loc:{start:{line:103,column:16},end:{line:107,column:17}},type:"if",locations:[{start:{line:103,column:16},end:{line:107,column:17}},{start:{line:103,column:16},end:{line:107,column:17}}],line:103},"14":{loc:{start:{line:103,column:20},end:{line:105,column:59}},type:"binary-expr",locations:[{start:{line:103,column:20},end:{line:103,column:41}},{start:{line:104,column:20},end:{line:104,column:33}},{start:{line:105,column:20},end:{line:105,column:59}}],line:103},"15":{loc:{start:{line:108,column:16},end:{line:116,column:17}},type:"if",locations:[{start:{line:108,column:16},end:{line:116,column:17}},{start:{line:108,column:16},end:{line:116,column:17}}],line:108},"16":{loc:{start:{line:108,column:20},end:{line:113,column:57}},type:"binary-expr",locations:[{start:{line:108,column:20},end:{line:108,column:44}},{start:{line:109,column:20},end:{line:109,column:36}},{start:{line:110,column:20},end:{line:110,column:65}},{start:{line:111,column:20},end:{line:111,column:40}},{start:{line:112,column:20},end:{line:112,column:32}},{start:{line:113,column:20},end:{line:113,column:57}}],line:108},"17":{loc:{start:{line:117,column:16},end:{line:121,column:17}},type:"if",locations:[{start:{line:117,column:16},end:{line:121,column:17}},{start:{line:117,column:16},end:{line:121,column:17}}],line:117},"18":{loc:{start:{line:117,column:20},end:{line:119,column:57}},type:"binary-expr",locations:[{start:{line:117,column:20},end:{line:117,column:40}},{start:{line:118,column:20},end:{line:118,column:32}},{start:{line:119,column:20},end:{line:119,column:57}}],line:117},"19":{loc:{start:{line:130,column:12},end:{line:133,column:13}},type:"if",locations:[{start:{line:130,column:12},end:{line:133,column:13}},{start:{line:130,column:12},end:{line:133,column:13}}],line:130},"20":{loc:{start:{line:130,column:16},end:{line:131,column:76}},type:"binary-expr",locations:[{start:{line:130,column:16},end:{line:130,column:56}},{start:{line:131,column:16},end:{line:131,column:76}}],line:130},"21":{loc:{start:{line:142,column:12},end:{line:147,column:13}},type:"if",locations:[{start:{line:142,column:12},end:{line:147,column:13}},{start:{line:142,column:12},end:{line:147,column:13}}],line:142},"22":{loc:{start:{line:143,column:16},end:{line:145,column:17}},type:"if",locations:[{start:{line:143,column:16},end:{line:145,column:17}},{start:{line:143,column:16},end:{line:145,column:17}}],line:143},"23":{loc:{start:{line:149,column:8},end:{line:152,column:9}},type:"if",locations:[{start:{line:149,column:8},end:{line:152,column:9}},{start:{line:149,column:8},end:{line:152,column:9}}],line:149},"24":{loc:{start:{line:153,column:8},end:{line:155,column:9}},type:"if",locations:[{start:{line:153,column:8},end:{line:155,column:9}},{start:{line:153,column:8},end:{line:155,column:9}}],line:153},"25":{loc:{start:{line:156,column:8},end:{line:158,column:9}},type:"if",locations:[{start:{line:156,column:8},end:{line:158,column:9}},{start:{line:156,column:8},end:{line:158,column:9}}],line:156},"26":{loc:{start:{line:176,column:67},end:{line:176,column:106}},type:"cond-expr",locations:[{start:{line:176,column:89},end:{line:176,column:96}},{start:{line:176,column:99},end:{line:176,column:106}}],line:176},"27":{loc:{start:{line:198,column:16},end:{line:202,column:17}},type:"if",locations:[{start:{line:198,column:16},end:{line:202,column:17}},{start:{line:198,column:16},end:{line:202,column:17}}],line:198},"28":{loc:{start:{line:200,column:53},end:{line:200,column:92}},type:"cond-expr",locations:[{start:{line:200,column:75},end:{line:200,column:82}},{start:{line:200,column:85},end:{line:200,column:92}}],line:200},"29":{loc:{start:{line:214,column:67},end:{line:214,column:106}},type:"cond-expr",locations:[{start:{line:214,column:89},end:{line:214,column:96}},{start:{line:214,column:99},end:{line:214,column:106}}],line:214},"30":{loc:{start:{line:226,column:20},end:{line:228,column:21}},type:"if",locations:[{start:{line:226,column:20},end:{line:228,column:21}},{start:{line:226,column:20},end:{line:228,column:21}}],line:226}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0,0,0,0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},inputSourceMap:{version:3,file:"/home/nemo/work/github/typeorm-model-generator/src/ModelCustomization.ts",sources:["/home/nemo/work/github/typeorm-model-generator/src/ModelCustomization.ts"],names:[],mappings:"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",sourcesContent:["import { DataTypeDefaults } from \"typeorm/driver/types/DataTypeDefaults\";\nimport { DefaultNamingStrategy } from \"typeorm/naming-strategy/DefaultNamingStrategy\";\nimport { Entity } from \"./models/Entity\";\nimport IGenerationOptions from \"./IGenerationOptions\";\nimport * as NamingStrategy from \"./NamingStrategy\";\nimport * as TomgUtils from \"./Utils\";\n\nexport default function modelCustomizationPhase(\n    dbModel: Entity[],\n    generationOptions: IGenerationOptions,\n    defaultValues: DataTypeDefaults\n): Entity[] {\n    const namingStrategy: typeof NamingStrategy = {\n        enablePluralization: NamingStrategy.enablePluralization,\n        columnName: NamingStrategy.columnName,\n        entityName: NamingStrategy.entityName,\n        relationIdName: NamingStrategy.relationIdName,\n        relationName: NamingStrategy.relationName,\n    };\n    if (\n        generationOptions.customNamingStrategyPath &&\n        generationOptions.customNamingStrategyPath !== \"\"\n    ) {\n        // TODO: change form of logging\n        const req = TomgUtils.requireLocalFile(\n            generationOptions.customNamingStrategyPath\n        ) as Partial<typeof NamingStrategy>;\n        if (req.columnName) {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using custom naming strategy for column names.`\n            );\n            namingStrategy.columnName = req.columnName;\n        } else {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using standard naming strategy for column names.`\n            );\n        }\n        if (req.entityName) {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using custom naming strategy for entity names.`\n            );\n            namingStrategy.entityName = req.entityName;\n        } else {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using standard naming strategy for entity names.`\n            );\n        }\n        if (req.relationIdName) {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using custom naming strategy for relationId field names.`\n            );\n            namingStrategy.relationIdName = req.relationIdName;\n        } else {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using standard naming strategy for relationId field names.`\n            );\n        }\n        if (req.relationName) {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using custom naming strategy for relation field names.`\n            );\n            namingStrategy.relationName = req.relationName;\n        } else {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using standard naming strategy for relation field names.`\n            );\n        }\n        if (req.enablePluralization) {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using custom pluralization method for OneToMany, ManyToMany relation field names.`\n            );\n            namingStrategy.enablePluralization = req.enablePluralization;\n        } else {\n            console.log(\n                `[${new Date().toLocaleTimeString()}] Using custom pluralization method for OneToMany, ManyToMany relation field names.`\n            );\n        }\n    }\n    namingStrategy.enablePluralization(generationOptions.pluralizeNames);\n    let retVal = removeIndicesGeneratedByTypeorm(dbModel);\n    retVal = removeColumnsInRelation(dbModel);\n    retVal = applyNamingStrategy(namingStrategy, dbModel);\n    retVal = addImportsAndGenerationOptions(retVal, generationOptions);\n    retVal = removeColumnDefaultProperties(retVal, defaultValues);\n    return retVal;\n}\nfunction removeIndicesGeneratedByTypeorm(dbModel: Entity[]): Entity[] {\n    // TODO: Support typeorm CustomNamingStrategy\n    const namingStrategy = new DefaultNamingStrategy();\n    dbModel.forEach((entity) => {\n        entity.indices = entity.indices.filter(\n            (v) =>\n                !(\n                    v.name.startsWith(`sqlite_autoindex_`) ||\n                    (v.primary && v.name === \"PRIMARY\")\n                )\n        );\n        const primaryColumns = entity.columns\n            .filter((v) => v.primary)\n            .map((v) => v.tscName);\n        entity.indices = entity.indices.filter(\n            (v) =>\n                !(\n                    v.primary &&\n                    v.name ===\n                        namingStrategy.primaryKeyName(\n                            entity.tscName,\n                            primaryColumns\n                        )\n                )\n        );\n        entity.relations\n            .filter((v) => v.joinColumnOptions)\n            .forEach((rel) => {\n                const columnNames = rel.joinColumnOptions!.map((v) => v.name);\n                const idxName = namingStrategy.relationConstraintName(\n                    entity.tscName,\n                    columnNames\n                );\n                const fkName = namingStrategy.foreignKeyName(\n                    entity.tscName,\n                    columnNames\n                );\n                entity.indices = entity.indices.filter(\n                    (v) => v.name !== idxName && v.name !== fkName\n                );\n            });\n    });\n    return dbModel;\n}\nfunction removeColumnsInRelation(dbModel: Entity[]): Entity[] {\n    dbModel.forEach((entity) => {\n        entity.columns = entity.columns.filter(\n            (col) =>\n                !col.isUsedInRelationAsOwner ||\n                col.isUsedInRelationAsReferenced ||\n                entity.indices.some((idx) =>\n                    idx.columns.some((v) => v === col.tscName)\n                ) ||\n                col.primary\n        );\n    });\n    return dbModel;\n}\nfunction removeColumnDefaultProperties(\n    dbModel: Entity[],\n    defaultValues: DataTypeDefaults\n): Entity[] {\n    if (!defaultValues) {\n        return dbModel;\n    }\n    dbModel.forEach((entity) => {\n        entity.columns.forEach((column) => {\n            const defVal = defaultValues[column.tscType];\n            if (defVal) {\n                if (\n                    column.options.length &&\n                    defVal.length &&\n                    column.options.length === defVal.length\n                ) {\n                    column.options.length = undefined;\n                }\n                if (\n                    column.options.precision &&\n                    defVal.precision &&\n                    column.options.precision === defVal.precision &&\n                    column.options.scale &&\n                    defVal.scale &&\n                    column.options.scale === defVal.scale\n                ) {\n                    column.options.precision = undefined;\n                    column.options.scale = undefined;\n                }\n                if (\n                    column.options.width &&\n                    defVal.width &&\n                    column.options.width === defVal.width\n                ) {\n                    column.options.width = undefined;\n                }\n            }\n        });\n    });\n    return dbModel;\n}\n\nfunction findFileImports(dbModel: Entity[]) {\n    dbModel.forEach((entity) => {\n        entity.relations.forEach((relation) => {\n            if (\n                relation.relatedTable !== entity.tscName &&\n                !entity.fileImports.some((v) => v === relation.relatedTable)\n            ) {\n                entity.fileImports.push(relation.relatedTable);\n            }\n        });\n    });\n    return dbModel;\n}\n\nfunction addImportsAndGenerationOptions(\n    dbModel: Entity[],\n    generationOptions: IGenerationOptions\n): Entity[] {\n    dbModel = findFileImports(dbModel);\n    dbModel.forEach((entity) => {\n        entity.relations.forEach((relation) => {\n            if (generationOptions.lazy) {\n                if (!relation.relationOptions) {\n                    relation.relationOptions = {};\n                }\n                relation.relationOptions.lazy = true;\n            }\n        });\n        if (generationOptions.skipSchema) {\n            entity.schema = undefined;\n            entity.database = undefined;\n        }\n        if (generationOptions.activeRecord) {\n            entity.activeRecord = true;\n        }\n        if (generationOptions.generateConstructor) {\n            entity.generateConstructor = true;\n        }\n    });\n    return dbModel;\n}\n\nfunction applyNamingStrategy(\n    namingStrategy: typeof NamingStrategy,\n    dbModel: Entity[]\n): Entity[] {\n    let retVal = changeRelationNames(dbModel);\n    retVal = changeRelationIdNames(retVal);\n    retVal = changeEntityNames(retVal);\n    retVal = changeColumnNames(retVal);\n    return retVal;\n\n    function changeRelationIdNames(model: Entity[]): Entity[] {\n        model.forEach((entity) => {\n            entity.relationIds.forEach((relationId) => {\n                const oldName = relationId.fieldName;\n                const relation = entity.relations.find(\n                    (v) => v.fieldName === relationId.relationField\n                )!;\n                let newName = namingStrategy.relationIdName(\n                    relationId,\n                    relation,\n                    entity\n                );\n                newName = TomgUtils.findNameForNewField(\n                    newName,\n                    entity,\n                    oldName\n                );\n                entity.indices.forEach((index) => {\n                    index.columns = index.columns.map((column2) =>\n                        column2 === oldName ? newName : column2\n                    );\n                });\n\n                relationId.fieldName = newName;\n            });\n        });\n        return dbModel;\n    }\n\n    function changeRelationNames(model: Entity[]): Entity[] {\n        model.forEach((entity) => {\n            entity.relations.forEach((relation) => {\n                const oldName = relation.fieldName;\n                let newName = namingStrategy.relationName(relation, entity);\n                newName = TomgUtils.findNameForNewField(\n                    newName,\n                    entity,\n                    oldName\n                );\n\n                const relatedEntity = model.find(\n                    (v) => v.tscName === relation.relatedTable\n                )!;\n                const relation2 = relatedEntity.relations.find(\n                    (v) => v.fieldName === relation.relatedField\n                )!;\n\n                entity.relationIds\n                    .filter((v) => v.relationField === oldName)\n                    .forEach((v) => {\n                        v.relationField = newName;\n                    });\n\n                relation.fieldName = newName;\n                relation2.relatedField = newName;\n\n                if (relation.relationOptions) {\n                    entity.indices.forEach((ind) => {\n                        ind.columns.map((column2) =>\n                            column2 === oldName ? newName : column2\n                        );\n                    });\n                }\n            });\n        });\n        return dbModel;\n    }\n\n    function changeColumnNames(model: Entity[]): Entity[] {\n        model.forEach((entity) => {\n            entity.columns.forEach((column) => {\n                const oldName = column.tscName;\n                let newName = namingStrategy.columnName(column.tscName, column);\n                newName = TomgUtils.findNameForNewField(\n                    newName,\n                    entity,\n                    oldName\n                );\n                entity.indices.forEach((index) => {\n                    index.columns = index.columns.map((column2) =>\n                        column2 === oldName ? newName : column2\n                    );\n                });\n\n                column.tscName = newName;\n            });\n        });\n        return model;\n    }\n    function changeEntityNames(entities: Entity[]): Entity[] {\n        entities.forEach((entity) => {\n            const newName = namingStrategy.entityName(entity.tscName, entity);\n            entities.forEach((entity2) => {\n                entity2.relations.forEach((relation) => {\n                    if (relation.relatedTable === entity.tscName) {\n                        relation.relatedTable = newName;\n                    }\n                });\n            });\n            entity.tscName = newName;\n        });\n        return entities;\n    }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"95b9726dfb9b687e3167ed3c684682d26b5261ed"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_j0z60mfgv=function(){return actualCoverage;};return actualCoverage;}cov_j0z60mfgv();cov_j0z60mfgv().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const DefaultNamingStrategy_1=(cov_j0z60mfgv().s[1]++,require("typeorm/naming-strategy/DefaultNamingStrategy"));const NamingStrategy=(cov_j0z60mfgv().s[2]++,require("./NamingStrategy"));const TomgUtils=(cov_j0z60mfgv().s[3]++,require("./Utils"));function modelCustomizationPhase(dbModel,generationOptions,defaultValues){cov_j0z60mfgv().f[0]++;const namingStrategy=(cov_j0z60mfgv().s[4]++,{enablePluralization:NamingStrategy.enablePluralization,columnName:NamingStrategy.columnName,entityName:NamingStrategy.entityName,relationIdName:NamingStrategy.relationIdName,relationName:NamingStrategy.relationName});cov_j0z60mfgv().s[5]++;if((cov_j0z60mfgv().b[1][0]++,generationOptions.customNamingStrategyPath)&&(cov_j0z60mfgv().b[1][1]++,generationOptions.customNamingStrategyPath!=="")){cov_j0z60mfgv().b[0][0]++;// TODO: change form of logging
const req=(cov_j0z60mfgv().s[6]++,TomgUtils.requireLocalFile(generationOptions.customNamingStrategyPath));cov_j0z60mfgv().s[7]++;if(req.columnName){cov_j0z60mfgv().b[2][0]++;cov_j0z60mfgv().s[8]++;console.log(`[${new Date().toLocaleTimeString()}] Using custom naming strategy for column names.`);cov_j0z60mfgv().s[9]++;namingStrategy.columnName=req.columnName;}else{cov_j0z60mfgv().b[2][1]++;cov_j0z60mfgv().s[10]++;console.log(`[${new Date().toLocaleTimeString()}] Using standard naming strategy for column names.`);}cov_j0z60mfgv().s[11]++;if(req.entityName){cov_j0z60mfgv().b[3][0]++;cov_j0z60mfgv().s[12]++;console.log(`[${new Date().toLocaleTimeString()}] Using custom naming strategy for entity names.`);cov_j0z60mfgv().s[13]++;namingStrategy.entityName=req.entityName;}else{cov_j0z60mfgv().b[3][1]++;cov_j0z60mfgv().s[14]++;console.log(`[${new Date().toLocaleTimeString()}] Using standard naming strategy for entity names.`);}cov_j0z60mfgv().s[15]++;if(req.relationIdName){cov_j0z60mfgv().b[4][0]++;cov_j0z60mfgv().s[16]++;console.log(`[${new Date().toLocaleTimeString()}] Using custom naming strategy for relationId field names.`);cov_j0z60mfgv().s[17]++;namingStrategy.relationIdName=req.relationIdName;}else{cov_j0z60mfgv().b[4][1]++;cov_j0z60mfgv().s[18]++;console.log(`[${new Date().toLocaleTimeString()}] Using standard naming strategy for relationId field names.`);}cov_j0z60mfgv().s[19]++;if(req.relationName){cov_j0z60mfgv().b[5][0]++;cov_j0z60mfgv().s[20]++;console.log(`[${new Date().toLocaleTimeString()}] Using custom naming strategy for relation field names.`);cov_j0z60mfgv().s[21]++;namingStrategy.relationName=req.relationName;}else{cov_j0z60mfgv().b[5][1]++;cov_j0z60mfgv().s[22]++;console.log(`[${new Date().toLocaleTimeString()}] Using standard naming strategy for relation field names.`);}cov_j0z60mfgv().s[23]++;if(req.enablePluralization){cov_j0z60mfgv().b[6][0]++;cov_j0z60mfgv().s[24]++;console.log(`[${new Date().toLocaleTimeString()}] Using custom pluralization method for OneToMany, ManyToMany relation field names.`);cov_j0z60mfgv().s[25]++;namingStrategy.enablePluralization=req.enablePluralization;}else{cov_j0z60mfgv().b[6][1]++;cov_j0z60mfgv().s[26]++;console.log(`[${new Date().toLocaleTimeString()}] Using custom pluralization method for OneToMany, ManyToMany relation field names.`);}}else{cov_j0z60mfgv().b[0][1]++;}cov_j0z60mfgv().s[27]++;namingStrategy.enablePluralization(generationOptions.pluralizeNames);let retVal=(cov_j0z60mfgv().s[28]++,removeIndicesGeneratedByTypeorm(dbModel));cov_j0z60mfgv().s[29]++;retVal=removeColumnsInRelation(dbModel);cov_j0z60mfgv().s[30]++;retVal=applyNamingStrategy(namingStrategy,dbModel);cov_j0z60mfgv().s[31]++;retVal=addImportsAndGenerationOptions(retVal,generationOptions);cov_j0z60mfgv().s[32]++;retVal=removeColumnDefaultProperties(retVal,defaultValues);cov_j0z60mfgv().s[33]++;return retVal;}cov_j0z60mfgv().s[34]++;exports.default=modelCustomizationPhase;function removeIndicesGeneratedByTypeorm(dbModel){cov_j0z60mfgv().f[1]++;// TODO: Support typeorm CustomNamingStrategy
const namingStrategy=(cov_j0z60mfgv().s[35]++,new DefaultNamingStrategy_1.DefaultNamingStrategy());cov_j0z60mfgv().s[36]++;dbModel.forEach(entity=>{cov_j0z60mfgv().f[2]++;cov_j0z60mfgv().s[37]++;entity.indices=entity.indices.filter(v=>{cov_j0z60mfgv().f[3]++;cov_j0z60mfgv().s[38]++;return!((cov_j0z60mfgv().b[7][0]++,v.name.startsWith(`sqlite_autoindex_`))||(cov_j0z60mfgv().b[7][1]++,v.primary)&&(cov_j0z60mfgv().b[7][2]++,v.name==="PRIMARY"));});const primaryColumns=(cov_j0z60mfgv().s[39]++,entity.columns.filter(v=>{cov_j0z60mfgv().f[4]++;cov_j0z60mfgv().s[40]++;return v.primary;}).map(v=>{cov_j0z60mfgv().f[5]++;cov_j0z60mfgv().s[41]++;return v.tscName;}));cov_j0z60mfgv().s[42]++;entity.indices=entity.indices.filter(v=>{cov_j0z60mfgv().f[6]++;cov_j0z60mfgv().s[43]++;return!((cov_j0z60mfgv().b[8][0]++,v.primary)&&(cov_j0z60mfgv().b[8][1]++,v.name===namingStrategy.primaryKeyName(entity.tscName,primaryColumns)));});cov_j0z60mfgv().s[44]++;entity.relations.filter(v=>{cov_j0z60mfgv().f[7]++;cov_j0z60mfgv().s[45]++;return v.joinColumnOptions;}).forEach(rel=>{cov_j0z60mfgv().f[8]++;const columnNames=(cov_j0z60mfgv().s[46]++,rel.joinColumnOptions.map(v=>{cov_j0z60mfgv().f[9]++;cov_j0z60mfgv().s[47]++;return v.name;}));const idxName=(cov_j0z60mfgv().s[48]++,namingStrategy.relationConstraintName(entity.tscName,columnNames));const fkName=(cov_j0z60mfgv().s[49]++,namingStrategy.foreignKeyName(entity.tscName,columnNames));cov_j0z60mfgv().s[50]++;entity.indices=entity.indices.filter(v=>{cov_j0z60mfgv().f[10]++;cov_j0z60mfgv().s[51]++;return(cov_j0z60mfgv().b[9][0]++,v.name!==idxName)&&(cov_j0z60mfgv().b[9][1]++,v.name!==fkName);});});});cov_j0z60mfgv().s[52]++;return dbModel;}function removeColumnsInRelation(dbModel){cov_j0z60mfgv().f[11]++;cov_j0z60mfgv().s[53]++;dbModel.forEach(entity=>{cov_j0z60mfgv().f[12]++;cov_j0z60mfgv().s[54]++;entity.columns=entity.columns.filter(col=>{cov_j0z60mfgv().f[13]++;cov_j0z60mfgv().s[55]++;return(cov_j0z60mfgv().b[10][0]++,!col.isUsedInRelationAsOwner)||(cov_j0z60mfgv().b[10][1]++,col.isUsedInRelationAsReferenced)||(cov_j0z60mfgv().b[10][2]++,entity.indices.some(idx=>{cov_j0z60mfgv().f[14]++;cov_j0z60mfgv().s[56]++;return idx.columns.some(v=>{cov_j0z60mfgv().f[15]++;cov_j0z60mfgv().s[57]++;return v===col.tscName;});}))||(cov_j0z60mfgv().b[10][3]++,col.primary);});});cov_j0z60mfgv().s[58]++;return dbModel;}function removeColumnDefaultProperties(dbModel,defaultValues){cov_j0z60mfgv().f[16]++;cov_j0z60mfgv().s[59]++;if(!defaultValues){cov_j0z60mfgv().b[11][0]++;cov_j0z60mfgv().s[60]++;return dbModel;}else{cov_j0z60mfgv().b[11][1]++;}cov_j0z60mfgv().s[61]++;dbModel.forEach(entity=>{cov_j0z60mfgv().f[17]++;cov_j0z60mfgv().s[62]++;entity.columns.forEach(column=>{cov_j0z60mfgv().f[18]++;const defVal=(cov_j0z60mfgv().s[63]++,defaultValues[column.tscType]);cov_j0z60mfgv().s[64]++;if(defVal){cov_j0z60mfgv().b[12][0]++;cov_j0z60mfgv().s[65]++;if((cov_j0z60mfgv().b[14][0]++,column.options.length)&&(cov_j0z60mfgv().b[14][1]++,defVal.length)&&(cov_j0z60mfgv().b[14][2]++,column.options.length===defVal.length)){cov_j0z60mfgv().b[13][0]++;cov_j0z60mfgv().s[66]++;column.options.length=undefined;}else{cov_j0z60mfgv().b[13][1]++;}cov_j0z60mfgv().s[67]++;if((cov_j0z60mfgv().b[16][0]++,column.options.precision)&&(cov_j0z60mfgv().b[16][1]++,defVal.precision)&&(cov_j0z60mfgv().b[16][2]++,column.options.precision===defVal.precision)&&(cov_j0z60mfgv().b[16][3]++,column.options.scale)&&(cov_j0z60mfgv().b[16][4]++,defVal.scale)&&(cov_j0z60mfgv().b[16][5]++,column.options.scale===defVal.scale)){cov_j0z60mfgv().b[15][0]++;cov_j0z60mfgv().s[68]++;column.options.precision=undefined;cov_j0z60mfgv().s[69]++;column.options.scale=undefined;}else{cov_j0z60mfgv().b[15][1]++;}cov_j0z60mfgv().s[70]++;if((cov_j0z60mfgv().b[18][0]++,column.options.width)&&(cov_j0z60mfgv().b[18][1]++,defVal.width)&&(cov_j0z60mfgv().b[18][2]++,column.options.width===defVal.width)){cov_j0z60mfgv().b[17][0]++;cov_j0z60mfgv().s[71]++;column.options.width=undefined;}else{cov_j0z60mfgv().b[17][1]++;}}else{cov_j0z60mfgv().b[12][1]++;}});});cov_j0z60mfgv().s[72]++;return dbModel;}function findFileImports(dbModel){cov_j0z60mfgv().f[19]++;cov_j0z60mfgv().s[73]++;dbModel.forEach(entity=>{cov_j0z60mfgv().f[20]++;cov_j0z60mfgv().s[74]++;entity.relations.forEach(relation=>{cov_j0z60mfgv().f[21]++;cov_j0z60mfgv().s[75]++;if((cov_j0z60mfgv().b[20][0]++,relation.relatedTable!==entity.tscName)&&(cov_j0z60mfgv().b[20][1]++,!entity.fileImports.some(v=>{cov_j0z60mfgv().f[22]++;cov_j0z60mfgv().s[76]++;return v===relation.relatedTable;}))){cov_j0z60mfgv().b[19][0]++;cov_j0z60mfgv().s[77]++;entity.fileImports.push(relation.relatedTable);}else{cov_j0z60mfgv().b[19][1]++;}});});cov_j0z60mfgv().s[78]++;return dbModel;}function addImportsAndGenerationOptions(dbModel,generationOptions){cov_j0z60mfgv().f[23]++;cov_j0z60mfgv().s[79]++;dbModel=findFileImports(dbModel);cov_j0z60mfgv().s[80]++;dbModel.forEach(entity=>{cov_j0z60mfgv().f[24]++;cov_j0z60mfgv().s[81]++;entity.relations.forEach(relation=>{cov_j0z60mfgv().f[25]++;cov_j0z60mfgv().s[82]++;if(generationOptions.lazy){cov_j0z60mfgv().b[21][0]++;cov_j0z60mfgv().s[83]++;if(!relation.relationOptions){cov_j0z60mfgv().b[22][0]++;cov_j0z60mfgv().s[84]++;relation.relationOptions={};}else{cov_j0z60mfgv().b[22][1]++;}cov_j0z60mfgv().s[85]++;relation.relationOptions.lazy=true;}else{cov_j0z60mfgv().b[21][1]++;}});cov_j0z60mfgv().s[86]++;if(generationOptions.skipSchema){cov_j0z60mfgv().b[23][0]++;cov_j0z60mfgv().s[87]++;entity.schema=undefined;cov_j0z60mfgv().s[88]++;entity.database=undefined;}else{cov_j0z60mfgv().b[23][1]++;}cov_j0z60mfgv().s[89]++;if(generationOptions.activeRecord){cov_j0z60mfgv().b[24][0]++;cov_j0z60mfgv().s[90]++;entity.activeRecord=true;}else{cov_j0z60mfgv().b[24][1]++;}cov_j0z60mfgv().s[91]++;if(generationOptions.generateConstructor){cov_j0z60mfgv().b[25][0]++;cov_j0z60mfgv().s[92]++;entity.generateConstructor=true;}else{cov_j0z60mfgv().b[25][1]++;}});cov_j0z60mfgv().s[93]++;return dbModel;}function applyNamingStrategy(namingStrategy,dbModel){cov_j0z60mfgv().f[26]++;let retVal=(cov_j0z60mfgv().s[94]++,changeRelationNames(dbModel));cov_j0z60mfgv().s[95]++;retVal=changeRelationIdNames(retVal);cov_j0z60mfgv().s[96]++;retVal=changeEntityNames(retVal);cov_j0z60mfgv().s[97]++;retVal=changeColumnNames(retVal);cov_j0z60mfgv().s[98]++;return retVal;function changeRelationIdNames(model){cov_j0z60mfgv().f[27]++;cov_j0z60mfgv().s[99]++;model.forEach(entity=>{cov_j0z60mfgv().f[28]++;cov_j0z60mfgv().s[100]++;entity.relationIds.forEach(relationId=>{cov_j0z60mfgv().f[29]++;const oldName=(cov_j0z60mfgv().s[101]++,relationId.fieldName);const relation=(cov_j0z60mfgv().s[102]++,entity.relations.find(v=>{cov_j0z60mfgv().f[30]++;cov_j0z60mfgv().s[103]++;return v.fieldName===relationId.relationField;}));let newName=(cov_j0z60mfgv().s[104]++,namingStrategy.relationIdName(relationId,relation,entity));cov_j0z60mfgv().s[105]++;newName=TomgUtils.findNameForNewField(newName,entity,oldName);cov_j0z60mfgv().s[106]++;entity.indices.forEach(index=>{cov_j0z60mfgv().f[31]++;cov_j0z60mfgv().s[107]++;index.columns=index.columns.map(column2=>{cov_j0z60mfgv().f[32]++;cov_j0z60mfgv().s[108]++;return column2===oldName?(cov_j0z60mfgv().b[26][0]++,newName):(cov_j0z60mfgv().b[26][1]++,column2);});});cov_j0z60mfgv().s[109]++;relationId.fieldName=newName;});});cov_j0z60mfgv().s[110]++;return dbModel;}function changeRelationNames(model){cov_j0z60mfgv().f[33]++;cov_j0z60mfgv().s[111]++;model.forEach(entity=>{cov_j0z60mfgv().f[34]++;cov_j0z60mfgv().s[112]++;entity.relations.forEach(relation=>{cov_j0z60mfgv().f[35]++;const oldName=(cov_j0z60mfgv().s[113]++,relation.fieldName);let newName=(cov_j0z60mfgv().s[114]++,namingStrategy.relationName(relation,entity));cov_j0z60mfgv().s[115]++;newName=TomgUtils.findNameForNewField(newName,entity,oldName);const relatedEntity=(cov_j0z60mfgv().s[116]++,model.find(v=>{cov_j0z60mfgv().f[36]++;cov_j0z60mfgv().s[117]++;return v.tscName===relation.relatedTable;}));const relation2=(cov_j0z60mfgv().s[118]++,relatedEntity.relations.find(v=>{cov_j0z60mfgv().f[37]++;cov_j0z60mfgv().s[119]++;return v.fieldName===relation.relatedField;}));cov_j0z60mfgv().s[120]++;entity.relationIds.filter(v=>{cov_j0z60mfgv().f[38]++;cov_j0z60mfgv().s[121]++;return v.relationField===oldName;}).forEach(v=>{cov_j0z60mfgv().f[39]++;cov_j0z60mfgv().s[122]++;v.relationField=newName;});cov_j0z60mfgv().s[123]++;relation.fieldName=newName;cov_j0z60mfgv().s[124]++;relation2.relatedField=newName;cov_j0z60mfgv().s[125]++;if(relation.relationOptions){cov_j0z60mfgv().b[27][0]++;cov_j0z60mfgv().s[126]++;entity.indices.forEach(ind=>{cov_j0z60mfgv().f[40]++;cov_j0z60mfgv().s[127]++;ind.columns.map(column2=>{cov_j0z60mfgv().f[41]++;cov_j0z60mfgv().s[128]++;return column2===oldName?(cov_j0z60mfgv().b[28][0]++,newName):(cov_j0z60mfgv().b[28][1]++,column2);});});}else{cov_j0z60mfgv().b[27][1]++;}});});cov_j0z60mfgv().s[129]++;return dbModel;}function changeColumnNames(model){cov_j0z60mfgv().f[42]++;cov_j0z60mfgv().s[130]++;model.forEach(entity=>{cov_j0z60mfgv().f[43]++;cov_j0z60mfgv().s[131]++;entity.columns.forEach(column=>{cov_j0z60mfgv().f[44]++;const oldName=(cov_j0z60mfgv().s[132]++,column.tscName);let newName=(cov_j0z60mfgv().s[133]++,namingStrategy.columnName(column.tscName,column));cov_j0z60mfgv().s[134]++;newName=TomgUtils.findNameForNewField(newName,entity,oldName);cov_j0z60mfgv().s[135]++;entity.indices.forEach(index=>{cov_j0z60mfgv().f[45]++;cov_j0z60mfgv().s[136]++;index.columns=index.columns.map(column2=>{cov_j0z60mfgv().f[46]++;cov_j0z60mfgv().s[137]++;return column2===oldName?(cov_j0z60mfgv().b[29][0]++,newName):(cov_j0z60mfgv().b[29][1]++,column2);});});cov_j0z60mfgv().s[138]++;column.tscName=newName;});});cov_j0z60mfgv().s[139]++;return model;}function changeEntityNames(entities){cov_j0z60mfgv().f[47]++;cov_j0z60mfgv().s[140]++;entities.forEach(entity=>{cov_j0z60mfgv().f[48]++;const newName=(cov_j0z60mfgv().s[141]++,namingStrategy.entityName(entity.tscName,entity));cov_j0z60mfgv().s[142]++;entities.forEach(entity2=>{cov_j0z60mfgv().f[49]++;cov_j0z60mfgv().s[143]++;entity2.relations.forEach(relation=>{cov_j0z60mfgv().f[50]++;cov_j0z60mfgv().s[144]++;if(relation.relatedTable===entity.tscName){cov_j0z60mfgv().b[30][0]++;cov_j0z60mfgv().s[145]++;relation.relatedTable=newName;}else{cov_j0z60mfgv().b[30][1]++;}});});cov_j0z60mfgv().s[146]++;entity.tscName=newName;});cov_j0z60mfgv().s[147]++;return entities;}}//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,